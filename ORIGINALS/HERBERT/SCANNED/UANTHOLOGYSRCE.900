<! 254 !><! 17 >!
^4096
*+2

[RJMW1]

RJMW1 4 NEWLINK   (LIVE)
 5 ;-1
 8 8181
NEWLINK 8 ;+1
START 4 CR
 15 6148
 4 LF
 15 6148
 4 +63
 15 6148
 15 2052
 5 OPTION
 6 +3
 7 NEWLINK
 4 +0
 15 2048
 7 ;-1
 5 MARKER
 4 +0
 5 COUNT
 5 ADDR
R 15 2048
 15 2048
 15 2048
 5 WORD
 6 +8191
 5 N
 4 WORD
 14 8179
 5 BF
 10 COUNT
 4 CR
 15 6148
 4 LF
 15 6148
 4 OPTION
 6 +1
 7 A
 4 BF
 11 PRINT
 8 PRINT+1
 4 N
 11 PRINT
 8 PRINT+1
A 4 SP
15 6148
4 OPTION
6 +6
7 ;+3
4 OBKT
15 6148
4 OPTION
6 +2
7 B
 4 BF
 11 PRINT
 8 PRINT+1
 4 N
 11 PRINT
 8 PRINT+2
B 4 OPTION
 6 +4
 7 C
 4 ADDR
 7 D
 4 SP
 15 6148
 4 ASTX
 15 6148
 4 OPTION
 6 +1
 7 E
 4 ADDR
 11 PRINT
 8 PRINT+1
E 4 OPTION
 6 +2
 7 C
4 ASTX
15 6148
 4 ADDR
 11 PRINT
 8 PRINT+2
C 10 ADDR
 4 ADDR
 2 +8180
 7 EXIT1
D 4 COUNT
 2 +3
 7 F
 8 G
F 4 WORD
 9 ;+2
 8 G
 4 N
 1 -12
 5 ADDR
G 4 OPTION
 6 +6
 7 RS
 4 CBKT
 15 6148
RS 4 +0
 15 2048
 2 MARKER
 7 R
 EXIT 4 CR
 15 6148
 4 LF
 15 6148
 4 +20
 15 6148
8 8162
EXIT1 4 OPTION
6 +6
7 EXIT
4 CBKT
15 6148
8 EXIT


PRINT +0
 8 DEC
 10 CODE
 5 NUMB
 4 AMPERS
 15 6148
 8 STP
DEC 5 NUMB
 4 +0
 5 CODE
STP 4 NUMB
 9 BMODP
 4 SP
 5 CHAR
BMR 0 -8
 4 CODE
 7 ;+2
 0 -9
GO 4 +0
 5 NO
AGAIN 4 NUMB
 /1 MULT+1
 9 PUNCH
 5 NUMB
 10 NO
 8 AGAIN
PUNCH 4 NO
 7 ;+3
 4 ZERO
 5 CHAR
 4 1
 5 W
 1 +2
 9 ;+3
 4 ZERO
 5 CHAR
 0 NO
 /4 CHAR
 15 6148
 4 CHAR
 2 BMOD
 7 ;+2
 8 ;+3
 4 SP
 5 CHAR
 0 W
 10 1
 10 1
 4 1
 9 GO
 4 SP
 15 6148
 0 PRINT
 /8 1

BMODP 4 BMOD
 5 CHAR
 4 NUMB
 6 +15
 5 NUMB
 8 BMR

-4096
 -1000
 -512
 -100
 -64
 -10
 -8
 -1
MULT -1
CHAR +160    (0 OR SP OR /)
 +177
 +178
 +51
 +180
 +53
 +54
 +183
 +184
 +57   (9)

CR +141
LF +10
OPTION +0
MARKER +0
COUNT +0
ADDR +0
WORD +0
BF +0
N +0
SP +160
OBKT +40
CBKT +169
ASTX +170
NUMB +0
AMPERS +166
ZERO +48
CODE +0
BMOD +175
NO +0
W +0

%


<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !>


*+2
^4096

[PUNCHII]

PUNCHII 4 NEWLINK
 5 ;-1
 8 8181
NEWLINK 8 ;+1
 11 RUNOUT
 8 RUNOUT+1
 4 +0
 5 COUNT
 5 TRACK
R 4 +0
 15 2048
 5 CK
 6 +127
 1 -20
 7 STOP
 1 -18
 7 AMP
 1 -2
 7 OB
 1 -3
 7 PL
 1 -2
 7 MIN
 1 -2
 7 BMOD
 1 -1
 9 R
 1 -10
 9 ;+2
 8 R
 1 +10
 8 NOS

BMOD 4 +0
 5 NUM
 4 &400000
 8 INS
NOS 5 NUM
 10 CK
 4 +0
INS 5 BF
 4 +1
 5 TYPE
 4 +0
 5 SIGN
 4 +10
 5 RADIX
 8 RINR
OB 4 +1
 5 CHECK
COM 4 +0
 15 2048
 1 -40
 7 OB1
 1 -129
 7 OB2
 8 COM
OB1 10 CHECK
 8 COM
OB2 4 CHECK
 1 -1
 5 CHECK
 7 R
 8 COM
PL 4 +0
 5 SIGN
PL1 4 +10
 5 RADIX
 8 GONO
MIN 10 SIGN
 8 PL1
AMP 4 +8
 5 RADIX
 4 +0
 5 SIGN
GONO 4 +0
 5 NUM
 5 TYPE
INR 4 +0
 5 CK
RINR 4 +0
 15 2048
 5 CHAR
 7 RINR
 1 -141
 7 RINR
 1 -114
 7 RINR
 4 CHAR
 6 +127
 5 CHAR
 1 -48
 9 OTHER
 1 -10
 9 ;+2
 8 OTHER
 10 CK
 1 +10
 5 CHAR
 2 RADIX
 7 E
 9 E
 4 NUM
 12 RADIX
 3 Q
 7 ;+2
 8 E
 4 Q
 1 CHAR
 5 NUM
 8 RINR
OTHER 4 CK
 7 RINR
 4 TYPE
 7 T0
 1 -1
 7 T1
 4 NUM
 1 -16384
 9 ;+2
 8 E
 4 NUM
 1 BF
 5 NUM
 8 T0
T1 4 NUM
 1 -16
 9 ;+2
 8 E
 4 NUM
 0 +0
 14 13
 1 BF
 5 BF
 10 TYPE
 4 +0
 5 NUM
 8 INR
T0 4 SIGN
 7 ;+4
 4 NUM
 2 +0
 5 NUM
 4 MARK
 15 6144
 4 NUM
 14 8174
 4 +0
 14 4
 15 6144
 4 +0
 14 7
 15 6144
 4 +0
 14 7
 15 6144
 10 COUNT
 4 COUNT
 1 -3
 7 THIRD
 8 NEXT
THIRD
 4 NUM
 9 ;+2
 8 NEXT
 1 -1
 5 TRACK
NEXT 10 TRACK
 4 TRACK
 7 STOP
 8 R
STOP 11 RUNOUT
 8 RUNOUT+1
 8 8162
E 4 +141
 15 6148
 4 +10
 15 6148
 4 +197
 15 6148
 4 +33
 15 6148
 8 ;+0
RUNOUT +0
 4 +0
 15 6144
 1 +1024
 0 RUNOUT
/9 1
 8 ;-4

MARK &70
CHAR +0
CK +0
NUM +0
CHECK +0
RADIX +10
SIGN +0
TYPE +0
BF +0
TRACK +0
COUNT +0
Q +0

%

<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! 128 !>
(STORE PROG FOR 1-PASS-SIR & ALDRLB)
(VERSION A11)

^4096
*2

[ STORE QIN QOUT NL ADD RELF QP END ]

STORE 4 +0
 5 ADD
 4 7
 6 +8191
 5 BEGIN
 4 START
 2 END
 1 +1
 5 LENGTH
 4 +1
 5 OPT
 4 -1
 5 MASK
L 11 NL
 8 NL+1
 4 +63  (?)
 15 6148
 4 +0
 5 EC
TTY 15 2052
 6 +127
 7 TTY
 5 CH1
 2 +127
 7 TTY
 4 CH1
 1 -1
 7 L
 1 -37
 7 NO
 1 -4
 7 ASTX
 1 -1
 7 NO
 1 -2
 7 NO
 1 -2
 7 NO
 1 -18
 7 A
 1 -2
 7 C
 1 -6
 7 I
 1 -3
 7 LIST
 1 -1
 7 M
 1 -2
 7 O
 1 -3
 7 REAL
 1 -1
 7 S
 1 -1
 7 T
 1 -4
 7 8181
 4 CH1
 1 -32
 7 TTY
 4 CH1
 1 -48
 9 L
 1 -10
 9 ;+2
 8 L
NO 4 CH1
 11 QIN
 8 QIN+1
 5 WORD
 4 +0
 11 QIN
 8 QIN+2
 5 ADD
 0 ADD
 4 WORD
 /5 0
 8 L

C 4 +0
 11 QIN
 8 QIN+2
 5 FIRST
 5 ADD
 4 +0
 11 QIN
 8 QIN+2
 5 LAST
 4 FIRST
 2 LAST
 9 E4
 4 FIRST
 5 ADD
CLR 4 +0
 0 ADD
 /5 0
 10 ADD
 4 BEGIN
 2 ADD
 9 CLEAR   (ADD<BEGIN)
 4 BEGIN
 1 LENGTH
 2 ADD
 9 ;+2    (ADD<LAST)
 8 CLEAR
 2 ADD
 5 ADD
CLEAR 4 ADD
 2 LAST
 9 L
 8 CLR

REAL 4 +0
 5 QP
RX 11 QIN
 8 QIN+2
 5 ADD
 0 ADD
 /4 0
 11 QOUT
 8 QOUT+1
 8 L

I 4 +1
 5 QP
 4 +0
 8 RX

O 4 +2
 8 I+1

A 4 +3
 8 I+1

ASTX 4 +0
 11 QIN
 8 QIN+2
 5 OPT
 8 L

M 4 +0
 11 QIN
 8 QIN+1
 5 MASK
 8 L

LIST 4 +0
 11 QIN
 8 QIN+2
 5 FIRST
 9 L
 4 +0
 11 QIN
 8 QIN+2
 5 LAST
 9 L
 4 FIRST
 2 LAST
 9 E4
 4 FIRST
 5 ADD
 4 OPT
 14 16
 14 8175
 6 +3
 5 QP
LISTR 4 BEGIN
 2 ADD
 9 NOPROB   (BEGIN>ADD)
 4 ADD
 2 BEGIN
 1 LENGTH
 9 NOPROB    (ADD>LAST)
 4 +0
 8 ;+3
NOPROB 0 ADD
 /4 0
 5 WORD
 7 ;+2
 8 ;+4
 4 OPT
 6 +4
 7 NEXT
SPR 11 NL
 8 NL+1
 4 WORD
 11 QOUT
 8 QOUT+1
 4 OPT
 6 +1
 7 NEXT
 4 ADD
 11 QOUT
 8 QOUT+2
NEXT 10 ADD
 4 ADD
 2 LAST
 9 L
 8 LISTR

S 4 +0  (SEARCH)
 11 QIN
 8 QIN+1
 5 WORD
 4 RELF
 5 RELX
 7 ;+4
 4 ADD
 2 WORD
 5 WORD
 4 +0
 11 QIN
 8 QIN+2
 5 FIRST
 5 ADD
 4 +0
 11 QIN
 8 QIN+2
 5 LAST
 4 +0
 5 QP
 11 NL
 8 NL+1
RSR 4 RELX
 7 AB4
 4 ADD
 6 +8191
 1 WORD
 5 WORD1
 8 LOOK
AB4 4 WORD
 5 WORD1
LOOK
 4 WORD1
 6 MASK
 5 WORD1
 0 ADD
 /4 0
 6 MASK
 2 WORD1
 7 AGR
 10 ADD
 4 ADD
 2 LAST
 9 SNF
 8 RSR
AGR /4 0
 5 WORD
 4 ADD
 5 LAST
 8 SPR
SNF 4 +83
 15 6148
 4 +78
 15 6148
 4 +198
 15 6148
 4 +0
 5 ADD
 8 L

T 11 QIN
 8 QIN+2
 1 =8 0
 5 ;+1
 8 ;+0
 8 ;+0

ADD +0
OPT +0
MASK -1
CH1 +0
WORD +0
WORD1 +0
FIRST +0
LAST +0
BEGIN +0
RELX +0

QIN +0
 8 WHOLE
 5 CHAR
 11 QCIN
 8 QCIN+1
 5 CHAR
 9 QREL
 2 +16383
 9 E5     (ADDR. TOO LARGE)
 4 RELF
 9 ODD    (NO ADR. GIVEN)
 7 ;+2
 8 QREL
QEX 4 CHAR
 0 QIN
 /8 1

QREL 4 CHAR
 1 ADD
 5 CHAR
 8 QEX


ODD 4 +1
 5 RELF
 10 ADD
 4 ADD
 5 CHAR
 8 QEX

 4 +0
WHOLE 11 QCIN
 8 QCIN+1
 5 CHAR
 4 RELF
 9 WHOLE-1  (NO. MUST BE GIVEN)
 7 ;+2
 8 E7
 4 TYPE
 7 ;+2      (BFN)
 8 QEX
 4 CHAR
 6 +131071
 2 +15
 9 E6       (F>15)
 4 CHAR
 14 8179
 1 CHAR
 0 +0
 14 13
 5 BF1
XBF 4 +0
 11 QCIN
 8 QCIN+1
 5 CHAR
 4 RELF
 9 XBF     (ADDR. MUST BE GIVEN)
 7 ;+2
 8 RELAT
RLR 4 CHAR
 2 +16383
 9 E5     (ADDR. TOO LARGE)
 4 CHAR
 6 +8191
 1 BF1
 5 CHAR
 8 QEX
RELAT 4 CHAR
 1 ADD
 5 CHAR
 8 RLR

QCIN +0
 5 CHX
 4 +0
 5 CK
 5 BF
 5 RELF
 5 SIGN
 5 TYPE
 4 CHX
CHECK 6 +127
 5 CHX
 1 -1
 7 L
 1 -12
 7 CR
 1 -25
 7 AMP
 1 -5
 7 PL
 1 -2
 7 MIN
 1 -2
 7 BMOD
 1 -1
 9 READ
 1 -10
 9 ;+2
 8 ;+3
 1 +10
 8 NOS
 1 -1
 7 SEMI

READ 4 +0
 15 2052
  8 CHECK

SEMI 10 RELF
 8 READ

BMOD 4 +0
 5 NUM
 4 &400000
 8 INS
NOS 5 NUM
 10 CK
 4 +0
INS 5 BF
 4 +10
 5 RADIX
 8 RINR
MIN 10 SIGN
PL 5 NUM
 10 TYPE
 8 INS
AMP 4 +8
 5 RADIX
 4 +0
 5 BF
 10 TYPE
 5 SIGN
 5 NUM

RINR 4 +0
 15 2052
 6 +127
 5 CHX
 7 RINR
 1 -1
 7 L
 4 CHX
 2 +127
 7 RINR
 4 CHX
 1 -48
 9 OTHER
 1 -10
 9 ;+2
 8 OTHER
 10 CK
 1 +10
 5 CHX
 4 RADIX
 2 CHX
 9 ;+2
 8 E2     (DIGIT>=RADIX)
 4 NUM
 12 RADIX
 3 Q
 5 Q1
 6 -2
 7 ;+2
 8 E1      (INTEGER O/F)
 0 Q
 14 1
 4 Q1
 14 17
 1 CHX
 5 NUM
 8 RINR

OTHER 4 CK
 7 RINR
 4 SIGN
 7 POS
 4 NUM
 2 +0
 5 NUM
POS 4 NUM
 1 BF
EX 0 QCIN
 /8 1

CR 4 -1
 5 RELF
 4 +10
 15 6148
 4 +0
 8 EX
CHAR +0
CHX +0
RELF +0
TYPE +0
BF1 +0
CK +0
BF +0
SIGN +0
NUM +0
RADIX +10
Q +0
Q1 +0



E7 10 EC
E6 10 EC
E5 10 EC
E4 10 EC
E3 10 EC
E2 10 EC
E1 10 EC
 4 +197   (E)
 15 6148
 0 EC
 /4 CH0
 15 6148
 8 L

EC +0

NL +0
 4 +141
 15 6148
 4 +10
 15 6148
 4 +0
 15 6148
 0 NL
 /8 1


QP +0
QOUT +0
 8 WHO
 5 W0
 4 QP
 7 OKAD
 1 -3
 7 OKAD
 8 QOEX
OKAD 4 SP
 15 6148
 4 OBKT
 15 6148
 4 ASTER
 15 6148
 4 QP
 7 ADEC
 4 W0
 11 PRINT
 8 PRINT+2
 8 CBEX
ADEC 4 W0
   1 11 PRINT
 11 PRINT
 8 PRINT+1
CBEX 4 CBKT
 15 6148
 8 QOEX
QOEX  0 QOUT
 /8 1

WHO 5 W0
 4 QP
 7 QBFN
 1 -1
 7 QINT
 1 -1
 7 QOCT
 1 -1
 7 QBFN
 8 QOEX
QBFN 4 W0
 14 8179
  11 PRINT
 8 PRINT+1
 4 W0
 6 +8191
 5 W0
 4 QP
 7 ;+2
 8 OCTN
 4 W0
 11 PRINT
 8 PRINT+1
 8 QOEX
OCTN 4 W0
 11 PRINT
 8 PRINT+2
 8 QOEX
QINT 4 W0
 9 NEG
 4 +43
 15 6148
PLUS 4 W0
 11 PRINT
 8 PRINT+1
 8 QOEX
NEG 4 +45
 15 6148
 4 W0
 2 +0
 5 W0
 8 PLUS
QOCT 4 W0
 11 PRINT
 8 PRINT+2
 8 QOEX

W0 +0
SP +160
ASTER +96
CBKT +169
OBKT +40



PRINT +0
 8 DEC
 10 CODE
 5 NUMB
 4 AMPERS
 15 6148
 8 STP
DEC 5 NUMB
 4 +0
 5 CODE
STP 4 NUMB
 9 BM0P
 4 SP
 5 CH0
BMR 0 -12
 4 CODE
 7 ;+2
 0 -11
GO 4 +0
 5 N0
AGAIN 4 NUMB
 /1 MULT+1
 9 PUNCH
 5 NUMB
 10 N0
 8 AGAIN
PUNCH 4 N0
 7 ;+3
 4 ZERO
 5 CH0
 4 1
 5 W
 1 +2
 9 ;+3
 4 ZERO
 5 CH0
 0 N0
 /4 CH0
 15 6148
 4 CH0
 2 BM0
 7 ;+2
 8 ;+3
 4 SP
 5 CH0
 0 W
 10 1
 10 1
 4 1
 9 GO
 4 SP
 15 6148
 0 PRINT
 /8 1

BM0P 4 BM0
 5 CH0
 4 NUMB
 6 +15
 5 NUMB
 8 BMR

 -100000
 -32768
 -10000
 -4096
 -1000
 -512
 -100
 -64
 -10
 -8
 -1
MULT -1
CH0 +160    (0 OR SP OR /)
 +177
 +178
 +51
 +180
 +53
 +54
 +183
 +184
 +57   (9)

NUMB +0
AMPERS +166
ZERO +48
CODE +0
BM0 +175
N0 +0
W +0
LENGTH +600
START 1 STORE

%

[ END]

END 1 ;+0

%


<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! 128 !>
(M.7 ON-LINE VERSION 2D)

(C.H.M. 12/5/77)
(ASSEMBLE WITH 1-PASS-SIR, DUMP WITH T.22/23 AND RELOCATE)

*19

^4096

[MAP PRINT CODE HEAD SP CR LF AMPERS MINUS ZERO ]

MAP 4 CR
 15 6148
 4 LF
 15 6148
 4 +63
 15 6148
 15 2052
 5 OPTION
 14 11
 6 +8192
 1 +8191
 5 MAX
NEXT 0 +0
 /4 HEAD
 15 6148
 14 8183
 15 6148
 10 1
 9 ENTER
 8 NEXT+1
ENTER 4 +1
 5 S
NEW 4 +0
 5 N
INCR 10 S
 4 7
 6 +8191
 2 S
 2 +0
 7 Z
 9 ;+2
 8 ON
 1 +206    (NEEDS INCREASING IF PROG EXTENDED)
 9 ON
 8 Z
ON 4 S
 2 MAX
 7 STOP
 9 STOP
 0 S
/4 0
 7 Z
 4 FLAG
 7 ;+2
 8 NEW
 4 S
 5 START
 4 +1
 5 FLAG
 8 NEW
Z 4 FLAG
 7 INCR
 10 N
 4 N
 1 -4
 9 INCR
 4 S
 1 -4
 5 FIN
 2 START
 7 SINGLE
 8 OUTPUT
SINGLE 4 +0
 5 FIN
 8 OUTPUT

STOP 4 MAX
 5 FIN
 4 FLAG
 7 ;+2
 8 OUTPUT
 4 CR
 15 6148
 4 LF
 15 6148
 4 +20
 15 6148
 8 8181

OUTPUT 4 CR
 15 6148
 4 LF
 15 6148
 4 -1
 5 FLAG
 4 OPTION
 6 +1
 7 OCTAL
 4 +0
 5 CODE
PUNCH 4 START
 5 PRINT
 11 PRINT+1
 8 PRINT+2
 4 SP
 15 6148
 4 FIN
 7 SPACE
 4 MINUS    (-)
RE 15 6148
 4 SP
 15 6148
 4 FIN
 5 PRINT
 11 PRINT+1
 8 PRINT+2
 4 FLAG
 7 NEW
OCTAL 10 FLAG
 4 OPTION
 6 +2
 7 NEW
 4 +1
 5 CODE
 4 SP
 15 6148
 15 6148
 4 AMPERS
 15 6148
 8 PUNCH

SPACE 4 SP
 8 RE

OPTION +0
S +0
N +0
START +0
FIN +0
FLAG +0
MAX +16383

[PRINT CODE HEAD SP CR LF AMPERS MINUS ZERO ]

PRINT +0
+0      (SCR)
 4 SP
 5 CHAR
 0 -10
 4 CODE
 7 ;+2
 0 -9
GO 4 +0
 5 N
AGAIN 4 PRINT
/1 MULT+1
 9 PUNCH
 5 PRINT
 10 N
 8 AGAIN

PUNCH 4 N
 7 ;+3
 4 ZERO
 5 CHAR
 4 1
 5 W
 0 N
/4 CHAR
 15 6148
 0 W
 10 1
 10 1
 4 1
 9 GO
 0 PRINT+1
/8 1

CODE +0
N +0
W +0

-10000
-4096
-1000
-512
-100
-64
-10
-8
-1
MULT -1

SP +160
CR +141
LF +10
AMPERS +166
MINUS +45
ZERO +48
CHAR +160   (0 OR SP)
+177
+178
+51
+180
+53
+54
+183
+184
+57  (9)


HEAD &012215
&324123
&322317
&240305
&123125
&104305
&412072

%

<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! 128 !>
*16

(ALDENHAM COPY TAPE FOR ASSEMBLY WITH 2-PASS SIR)
(ISSUE 2)
(TRIGGER AT 8)
(TYPE L TO LOAD MASTER)
(TYPE C TO CHECK MASTER OR COPY)
(TYPE P TO PUNCH)

[ ALDCOPY ]

ALDCOPY
T < 4 +141
 15 6148
 4 +10
 15 6148
 4 +0
 15 6148
 4 +170
 15 6148
 4 +0
 15 2052
 1 -80
 7 P
 1 -115
 7 C
 1 -9
 7 L
 8 T


L 0 LOCATE
 4 +0
 15 2048
 7 ;-1
 8 LOAD
R1 4 +0
 15 2048
LOAD 14 8184
 4 +0
 15 2048
 14 8
/5 0
 10 1
 4 1
 2 +8180
 7 ;+2
 8 ;+2
 0 =1 0
 4 1
 5 LIMIT
 2 =2 0
 7 T
 8 R1


P 11 PRO
 8 PRO+1
 0 LOCATE
READ /4 0
 15 6144
 14 8184
 15 6144
 10 1
 4 1
 2 +8180
 7 ;+2
 8 ;+2
 0 =1 0
 4 1
 2 LIMIT
 7 ;+2
 8 READ
 11 PRO
 8 PRO+1
 8 T


C 0 LOCATE
 4 +0
 15 2048
 7 ;-1
 8 R2+2
R2 4 +0
 15 2048
 5 X1
/4 0
 6 &377
 5 ST
 2 X1
 7 ;+2
 8 ERR
 4 +0
 15 2048
 5 X1
/4 0
 14 8184
 5 ST
 2 X1
 7 ;+2
 8 ERR
 10 1
 4 1
 2 +8180
 7 ;+2
 8 ;+2
 0 =1 0
 4 1
 2 LIMIT
 7 OK
 8 R2

ERR 11 PRO
 8 PRO+1
 4 ST
 15 6144
 4 +0
 15 6144
 15 6144
 4 X1
 15 6144
 11 PRO
 8 PRO+1
 8 T

OK 4 +207
 15 6148
 4 +75
 15 6148
 8 T

PRO +0
 4 +0
 15 6144
 1 +1024
 9 ;+2
 8 ;-3
 0 PRO
/8 1

LIMIT +0
X1 +0
ST +0

LOCATE 0 START
^LOCATE+18
START +0
$

%

<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! 128 !>
*22

(ALDRLB B5)
(ASSEMBLE WITH 1-PASS SIR)
(THIS PROGRAM IS FOR CONVERSION OF TAPES IN 903 T23 FORMAT INTO
 ALDENHAM RLB FORMAT. IT PRECEDES THE TAPE WITH A PROGRAM TO LO-
 CATE AN AREA OF STORE WHICH IS CLEAR & WHICH IS SUFFICIENTLY
 LONG TO ACCOMODATE THE PROGRAM. ENTRY AT 32 THEN CAUSES A SHORT
 LOADER TO BE PUNCHED WHICH IS EQUIVALENT TO T23. IT DOES THE RE-
 LOCATION AND PERFORMS A SUM-CHECK AND THEN STOPS. ENTRY AT 33
 CAUSES THE LOADER TO BE MODIFIED TO BE SELF-TRIGGERING. ALDENHAM
 RLB FORMAT IS SUCH THAT ANY PROGRAM CAN BE RUN OR RE-RUN BY EN-
 TRY AT 7. THIS WILL ALWAYS CONTAIN A JUMP TO THE FIRST WORD OF
 THE PROGRAM, WHEREVER THAT IS.)

[ ALDRLB PRINT QOUT1 QIN1 ]

 8 DYNSTOP
 4 =8 7
 5 LOADER+2
 8 ALDRLB
DYNSTOP 4 =8 8137
 5 LOADER+2
ALDRLB 11 PRINT
 8 PRINT+1
 +3
&010000
 \HOW
 \ MA
 \NY
 \WOR
 \DS
 \LON
 \G I
 \S T
 \HE
 \PRO
 \GRA
 \M?
&030000
 11 QIN1
 8 QIN1+1
 5 LENGTH
 11 PRINT
 8 PRINT+1
 +3
 &010000
 \WHA
 \T R
 \ANG
 \E O
 \F A
 \DDR
 \ESS
 \ES
 \SHO
 \ULD
 \ BE
 \ CO
 \NSI
 \DER
 \ED
 \AS
 \REL
 \ATI
 \VE?
&030000
 11 QIN1
 8 QIN1+1
 5 MIN
 11 PRINT
 8 PRINT+1
 +3
 \TO
&030000
 11 QIN1
 8 QIN1+1
 5 MAX
 11 PRINT
 8 PRINT+1
 +3
&010000
 \WHA
 \T R
 \ANG
 \E S
 \HOU
 \LD
 \BE
 \QUE
 \RIE
 \D?
&030000
 11 QIN1
 8 QIN1+1
 5 QMIN
 11 PRINT
 8 PRINT+1
 +3
 \TO
&030000
 11 QIN1
 8 QIN1+1
 5 QMAX
 4 =/15 8171   (DUMP LOCATER)
 11 DUMP
 8 DUMP+1
 0 LOCATE
 4 =/15 8147   (DUMP LOADER)
 11 DUMP
 8 DUMP+1
 0 LOADER
  4 +0
 5 CS
 5 CSX
 15 2048        (IGNORE BLANKS BETWEEN T.23 + BODY OF PROG.)
 7 ;-1
 2 +128
 7 ;+2
 8 ;+0   (NOT T23 FORMAT)
 2 +128
 15 2048
 15 2048
  5 DECREMENT
 5 ADS
Z 4 +0
 15 2048
 5 WORD
 6 &777740
 7 ;+2
 8 END    (NEW BLK ADDR OR CS)
 4 WORD
 15 2048
 15 2048
 5 WORD
 10 ADS
 6 +8191
 5 ZW
 2 QMIN
 9 ;+2
 8 OK
 4 ZW
 2 QMAX
 9 OK
 8 QUERY
OK 4 ZW
 2 DECREMENT
 9 ;+2
 8 ABS
 2 DECREMENT
 2 MIN
 9 ;+2
 8 ABS
 2 MIN
 2 MAX
 9 ABS
 8 REL
QUERY 4 WORD
 11 QOUT1
 8 QOUT1+4
/0 0
QR 4 +160
 15 6148
 15 6148
 4 +0
 15 2052
 5 CHAR
 2 +210   (R)
 7 REL
 4 CHAR
 2 +65
 7 ABS
 4 CHAR
 2 +166   (&)
 7 OCTAL
 4 CHAR
 2 +92   (\)
 7 ABC
 4 CHAR
 2 +43   (+)
 7 INTEGER
 8 QR+3
REL 4 +64
 5 BIT8
 4 DECREMENT
 1 CS
 5 CS
 4 DECREMENT
 2 WORD
 5 WORD
ABS 4 WORD
 11 PUNCH
 8 PUNCH+1
 4 WORD
 1 CS
 5 CS
 4 WORD
 1 CSX
 5 CSX
 8 Z
OCTAL 4 WORD
 11 QOUT1
 8 QOUT1+3
/0 0
 8 QR
ABC 4 WORD
 5 QPR
 11 PRINT
 8 PRINT+1
 +3
QPR +0
 &030000
 8 QR
INTEGER 4 WORD
 11 QOUT1
 8 QOUT1+1
/0 0
 8 QR
END 4 WORD
 15 2048
 15 2048
 5 WORD
 7 LAST
 2 ADS
 5 SKIPS
 9 ;+2
 8 ;+0    (BLOCKS NOT IN ORDER)
ANOSK 4 +0
 11 PUNCH
 8 PUNCH+1
 10 SKIPS
 10 ADS
 4 SKIPS
 7 Z
 8 ANOSK
LAST 15 2048
 15 2048
 15 2048
 2 CS
 7 PCS
CSF 15 6144
 8 ;-1
PCS 4 +64
 5 BIT8
 4 +0
 11 PUNCH
 8 PUNCH+1
 4 CSX
 11 PUNCH
 8 PUNCH+1
 4 LENGTH
 5 CLENGTH
 4 =/15 8174
 11 DUMP
 8 DUMP+1
 0 CLLF
 4 +0
 15 6144
 1 +1024
 9 ;+0
 8 ;-3

DECREMENT +0
MIN +0
MAX +0
QMIN +0
QMAX +0
ZW +0
CS +0
CSX +0
CHAR +0
ADS +0
SKIPS +0
WORD +0



CLLF 4 7        (8162 CORE CLEAR FINALLY)
 6 8176 (8163 6 +8191)
 1 8167 (8164 1 WRITE)
 5 8167 (8165 5 WRITE)
 4 8179 (8166 4 +0)
 5 0    (8167 WRITE 5 0)
10 8167 (8168 10 WRITE)
10 8174 (8169 10 COUNT)
 4 8174 (8170 4 COUNT)
 2 8175 (8171 2 LENGTH)
 7 8172 (8172 7 ;+0)
 8 8166 (8173 8 WRITE-1)
 +0     (8174 COUNT +0)
CLENGTH +0 (8175 CLEAR LENGTH)
 +8191  (8176)
 8 8162 (8177 8 START)
 +0     (8178 NOT USED)
 +0     (8179 +0)


LENGTH
LOCATE +0
 4 8      (LIVE-START)
 7 8166   (7 INC)
14   36   (+0)
 5 8179   (5 X)
 10 8160  (Z 10 START)
 8 8160   (8 START)
 10 8179  (INC 10 X)
 4 8179   (4 X)
 2 8159   (2 LENGTH)
 7 8171   (7 ;+2)
 8 8164   (8 Z)
 4 8159   (4 LENGTH)
 2 8160   (2 START)
 6 8178   (6 +8191)
 5 7
 10 7
 8 8181
  8 8160  (8 START)
 +8191
 +0     (X +0)


DUMP +0
 5 THIRD
 4 +0
 15 6144
 15 6144
 4 +12
 15 6144
 4 +8179
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 =8 8182
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 THIRD
 11 PUNCH
 8 PUNCH+1
 0 DUMP
 /4 1
 5 ADD
RW 4 +12
 15 6144
 0 ADD
 /4 0
 11 PUNCH
 8 PUNCH+1
 10 ADD
 10 THIRD
 4 THIRD
 0 DUMP
 /7 2
 8 RW

THIRD +0
ADD +0

PUNCH +0
 14 8174
 4 +0
 14 4
 1 BIT8
 15 6144
 4 +0
 5 BIT8
 14 7
 15 6144
 4 +0
 14 7
 15 6144
 0 PUNCH
 /8 1

BIT8 +0

 /15 8187
CC1 8 8177
 8 8181
 10 1
 /5 1
 8 8175

 /15 8180
CC2 0 8178
 10 8171
 4 8179
 /5 0
 4 8171
 6 8178
 2 8178
 7 8181
 8 8169
 8 8168
+8191
+0



LOADER 4 8139       (8135 LOADER 4 ADDR)
 5 7      (8136 5 7)
 8 8137   (8137 8 ;+0 - MAY BE MOD TO 8 7)
   1 +0       (8138 +0)
 +0       (8138 +0)
 8 0      (8139 ADDR 8 0)
 4 7      (8140 START 4 7)
 1 8139   (8141 1 ADDR)
 5 8139   (8142 5 ADDR)
 4 8138   (8143 4 +0)
 15 2048  (8144)
 7 8144   (8145 7 ;-1)
 5 8176   (8146 READ 5 CHAR)
 6 8179   (8147 6 +64)
 7 8164   (8148 7 ABS)
 4 8176   (8149 4 CHAR)
 15 2048  (8150 15 2048)
 15 2048  (8151 15 2048)
 7 8169   (8152 7 CS1)
 5 8176   (8153 5 CHAR)
 1 7      (8154 1 7)
 0 7      (8155 0 7)
/5 0      (8156 WRITE /5 0)
 10 8156  (8157 10 WRITE)
 4 8176   (8158 4 CHAR)
 1 8178   (8159 1 CS)
 5 8178   (8160 5 CS)
 4 8138   (8161 4 +0)
 15 2048  (8162 15 2048)
 8 8146   (8163 8 READ)
 4 8176   (8164 4 CHAR)
 15 2048  (8165 15 2048)
 15 2048  (8166 15 2048)
 5 8176   (8167 5 CHAR)
 8 8155   (8168 8 WRITE-1)
 15 2048  (8169 CS1 15 2048)
 15 2048  (8170 15 2048)
 15 2048  (8171 15 2048)
 2 8178   (8172 2 CS)
 7 8135   (8173 7 LOADER)
 15 6144  (8174 15 6144)
 8 8174   (8175 8 ;-1)
 +0       (8176 CHAR +0)
 8 8140   (8177 8 START)
 +0       (8178 CS +0)
 +64      (8179 +64)

<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !>
(CHM T22 B10)
(ASSEMBLE WITH STD. SIR. DUMP WITH STD T.23. CONVERT WITH ALDRLB)
(THIS VERSION IS THE RELOCATABLE VERSION FOR LOADING VIA THE ALD.
 RLB LOADER. IT COPIES THE NECESSARY CORE CLEARS FROM TAPE, AND
 THEN LOADS T23 VIA 8 8181 [TRIGGER AT 7], MODIFYING 7 SO THAT
 CONTROL RETURNS TO T22 AFTER T23 IS IN STORE. IT THEN DUMPS T23
 CONVENTIONALLY, USING DUMP. IT AWAITS A CHARACTER FROM THE
 TELETYPE [1 OR 2] TO INDICATE HOW MANY STORE MODULES SHOULD
 BE PUNCHED. PUNCHING IS IN ABSOLUTE T23 FORMAT.)
(PROG. NEEDS ALDRLB LOCATER, ALDRLB LOADER, BEFORE IT, ITSELF IN
 ALDRLB FORMAT, T.23 [WITH TRIGGER AT 7], AND A BIT8 AFTER IT)

*+2
^4096

[ T22 ]

 8 ;+3
LINK +0
GO 8 T22
 4 7
 5 LINK
 4 GO
 5 7
 15 2052
 6 +1
 5 CS1  (CS1 USED AS TEMP STORE)
 4 +0  (PUNCH RUN-OUT)
 15 6144
 1 +1024
 9 ;+2
 8 ;-3
 4 CS1
 7 ;+2
 8 ONE
 4 +16383
 5 LIMIT2
 0 -47    (CC2)
 11 COPY   (CC2)
 8 COPY+1
A 0 -34    (CC1)
 11 COPY
 8 COPY+1
 8 AY
AX 0 -47
 15 2048
 10 1
 4 1
 7 A
 8 AX+1   (IGNORE CC2)
AY 8 8181  (LOAD T23)
T22 4 LINK
 5 7
 4 =7 8171
 5 8171
 4 =/15 8147
 11 DUMP
 8 DUMP+1
 0 8135
 4 +0
 5 Q
 5 CS1
 5 CS2
 4 7
 6 +8191
 2 +8
 7 ;+3
 4 +8
 8 B
 4 LENGTH     (T22 IN BOTTOM OF STORE)
 1 +8
B 5 ADDRESS   (SET START ADDRESS)
 4 +1
 5 PNBAF
C 0 ADDRESS
 /4 0
 7 D
E 4 PNBAF
 7 J
K 4 +128
 5 BIT8
 4 ADDRESS
 11 PUNCH     (PUNCH NEW ADDRESS)
 8 PUNCH+1
 4 ADDRESS
 1 CS1   (ADD TO CS1)
 5 CS1
 4 ADDRESS
 7 L
 4 +0
 5 PNBAF
J 0 ADDRESS
 /4 0   (PUNCH CURRENT WORD)
 11 PUNCH
 8 PUNCH+1
 0 ADDRESS
 /4 0    (ADD CURRENT WORD TO CS2)
 1 CS2
 5 CS2
S 10 ADDRESS
 4 7
 6 +8191
 2 ADDRESS
 7 ;+2
 8 U
 4 ADDRESS   (NOW AT T22)
 1 LENGTH
 5 ADDRESS
 10 PNBAF    (SKIP T22 & PUNCH NEW BLK ADDR)
U 4 ADDRESS
 2 LIMIT1
 7 M
 4 ADDRESS
 2 LIMIT2
 7 N
 4 Q
 7 C
 4 +0
 5 Q
 8 T
D 4 +1
 5 PNBAF
G 10 Q
 8 S
T 0 ADDRESS
 /4 0
 7 F
 4 PNBAF
 1 -1
 5 PNBAF
 7 I
 8 E
I 4 ADDRESS
 1 -1
 5 ADDRESS
 8 E
F 10 PNBAF
 8 G
M 4 LIMIT2
 9 N   (ONLY STORE1)
 4 +8192
 8 B   (STORE2 AS WELL)
N 4 +0
 5 ADDRESS
 8 K
L 4 CS2    (PUNCH CHECKSUMS)
 11 PUNCH
 8 PUNCH+1
 4 CS1
 11 PUNCH
 8 PUNCH+1
 4 +0
 15 6144
 1 +1024
 9 8181
 8 ;-3

ONE 4 =/15 8147
 5 LIMIT2
 8 AX

CS1 +0
CS2 +0
LIMIT1 +8135
LIMIT2 +16383
ADDRESS +8
PNBAF +1
Q +0
LENGTH +248   (MAY NEED CHANGING IF PROG IS MODIFIED)
COPY +0
 4 +0
 15 2048
 15 6144
 10 1
 4 1
 7 ;+2
 8 COPY+1
 0 COPY
 /8 1


DUMP +0
 5 THIRD
 4 +0
 15 6144
 15 6144
 4 +12
 15 6144
 4 +8179
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 =8 8182
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 THIRD
 11 PUNCH
 8 PUNCH+1
 0 DUMP
 /4 1
 5 ADD
R 4 +12
 15 6144
 0 ADD
 /4 0
 11 PUNCH
 8 PUNCH+1
 10 ADD
 10 THIRD
 4 THIRD
 0 DUMP
 /7 2
 8 R

THIRD +0
ADD +0

PUNCH +0
 14 8174
 4 +0
 14 4
 1 BIT8
 15 6144
 4 +0
 5 BIT8
 14 7
 15 6144
 4 +0
 14 7
 15 6144
 0 PUNCH
 /8 1

BIT8 +0

 /15 8187
CC1 8 8177
 8 8181
 10 1
 /5 1
 8 8175

 /15 8180
CC2 0 8178
 10 8171
 4 8179
 /5 0
 4 8171
 6 8178
 2 8178
 7 8181
 8 8169
 8 8168
+8191
+0

%



<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! 128 !>
(CHM T22 C4)

*+2
^4096

[ T22 ]

LINK1 8 ;+1
T22 15 2052
 6 +1
 5 CS1  (CS1 USED AS TEMP STORE)
 4 +0  (PUNCH RUN-OUT)
 15 6144
 1 +1024
 9 ;+2
 8 ;-3
 4 CS1
 7 ;+2
 8 ONE
 4 +16383
 5 LIMIT2
 0 -47    (CC2)
 11 COPY   (CC2)
 8 COPY+1
A 0 -34    (CC1)
 11 COPY
 8 COPY+1
 8 AY
AX 0 -47
 15 2048
 10 1
 4 1
 7 A
 8 AX+1   (IGNORE CC2)
AY 0 -195   (COPY T.23)
 11 COPY
 8 COPY+1
 4 +0
 5 Q
 5 CS1
 5 CS2
 4 ;+3
 5 LINK1
 8 ;+0
 8 ;+1
 4 7
 6 +8191
 2 +8
 7 ;+3
 4 +8
 8 B
 4 LENGTH     (T22 IN BOTTOM OF STORE)
 1 +8
B 5 ADDRESS   (SET START ADDRESS)
 4 +1
 5 PNBAF
C 0 ADDRESS
 /4 0
 7 D
E 4 PNBAF
 7 J
K 4 +128
 5 BIT8
 4 ADDRESS
 11 PUNCH     (PUNCH NEW ADDRESS)
 8 PUNCH+1
 4 ADDRESS
 1 CS1   (ADD TO CS1)
 5 CS1
 4 ADDRESS
 7 L
 4 +0
 5 PNBAF
J 0 ADDRESS
 /4 0   (PUNCH CURRENT WORD)
 11 PUNCH
 8 PUNCH+1
 0 ADDRESS
 /4 0    (ADD CURRENT WORD TO CS2)
 1 CS2
 5 CS2
S 10 ADDRESS
 4 7
 6 +8191
 2 ADDRESS
 7 ;+2
 8 U
 4 ADDRESS   (NOW AT T22)
 1 LENGTH
 5 ADDRESS
 10 PNBAF    (SKIP T22 & PUNCH NEW BLK ADDR)
U 4 ADDRESS
 2 LIMIT1
 7 M
 4 ADDRESS
 2 LIMIT2
 7 N
 4 Q
 7 C
 4 +0
 5 Q
 8 T
D 4 +1
 5 PNBAF
G 10 Q
 8 S
T 0 ADDRESS
 /4 0
 7 F
 4 PNBAF
 1 -1
 5 PNBAF
 7 I
 8 E
I 4 ADDRESS
 1 -1
 5 ADDRESS
 8 E
F 10 PNBAF
 8 G
M 4 LIMIT2
 9 N   (ONLY STORE1)
 4 +8192
 8 B   (STORE2 AS WELL)
N 4 +0
 5 ADDRESS
 8 K
L 4 CS2    (PUNCH CHECKSUMS)
 11 PUNCH
 8 PUNCH+1
 4 CS1
 11 PUNCH
 8 PUNCH+1
 4 =/15 8147
 11 DUMP
 8 DUMP+1
 0 8135
 4 +0
 15 6144
 1 +1024
 9 ;+0
 8 ;-3

ONE 4 =/15 8147
 5 LIMIT2
 8 AX

CS1 +0
CS2 +0
LIMIT1 +8135
LIMIT2 +16383
ADDRESS +8
PNBAF +1
Q +0
LENGTH +248   (MAY NEED CHANGING IF PROG IS MODIFIED)
COPY +0
 4 +0
 15 2048
 15 6144
 10 1
 4 1
 7 ;+2
 8 COPY+1
 0 COPY
 /8 1


DUMP +0
 5 THIRD
 4 +0
 15 6144
 15 6144
 4 +12
 15 6144
 4 +8179
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 =8 8182
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 THIRD
 11 PUNCH
 8 PUNCH+1
 0 DUMP
 /4 1
 5 ADD
R 4 +12
 15 6144
 0 ADD
 /4 0
 11 PUNCH
 8 PUNCH+1
 10 ADD
 10 THIRD
 4 THIRD
 0 DUMP
 /7 2
 8 R

THIRD +0
ADD +0

PUNCH +0
 14 8174
 4 +0
 14 4
 1 BIT8
 15 6144
 4 +0
 5 BIT8
 14 7
 15 6144
 4 +0
 14 7
 15 6144
 0 PUNCH
 /8 1

BIT8 +0

%


<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !>