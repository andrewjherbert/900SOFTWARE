 4 ERROR-1
 9 ;-4
 8 ;+0
(FOR EXTRA STORE MODULES THE WAIT LINK IS PLACED AS FOLLOWS)
( 11 ERROR-2
 3 ERROR-2
 4 ERROR-2
 2 +0
 5 ERROR-1
 /4 3
 1 =/0 0
 0 ERROR-1
 /5 15
 0 ERROR-2
 8 ;+0 )



SETMOD 0 ADDRESS (SET PSEUDO B REGISTER)
 /4 0
 5 FBREG
 8 INTERP



FADD 0 ADDRESS
 11 LINK
 8 BTOFB (GET SECOND OPERAND)
 4 FPB (ADD FPA TO FPB)
 7 INTERP
 4 FPA
 7 FEXC+6
 0 FPA+1
 14 1
 4 FPA
 14 8191
 5 FPA
 3 FPA+1
 0 FPB+1
 14 1
 4 FPB
 14 8191
 5 FPB
 3 FPB+1
 10 FPA+2
 10 FPB+2
 4 FPA+2
 2 FPB+2
 9 NEG5
 2 +0
 1 =15 0
 6 =14 8191
 5 ;+6
 4 FPB+2
 5 FPA+2
 0 FPA+1
 14 1
 4 FPA
 +0
 3 FPA+1
 1 FPB
 5 FPA
 4 FPA+1
 1 FPB+1
 9 ;+3
 5 FPA+1
EXIT31 8 FSTAND
 10 FPA
 6 =15 8191
 8 ;-4
NEG5 1 =15 0
 6 =14 8191
 5 ;+4
 0 FPB+1
 14 1
 4 FPB
 +0
 3 FPB
 1 FPA
 5 FPA
 4 FPB
 1 FPA+1
 9 ;+2
 8 EXIT31-1
 10 FPA
 6 =15 8191
 8 EXIT31-1



FNADD 4 +0 (NEGATE FPA THEN JUMP TO FADD)
5 ;+12 ( CLEAR CARRY BIT )
 4 FPA+1
 7 ;+14
 2 +131071
 1 +1
 9 ;+8
 5 FPA+1
 4 FPA
 2 &777777
 1 ;+3
 5 FPA
 8 FADD
 +0   ( CARRY BIT )
 6 +131071
 10 ;-2
 8 ;-9
 ( HERE FOLLOWS TREATMENT OF SPECIAL CASES FOR FNADD )
 4 FPA
 1 =/8 0
 7 ;+5
 1 =/8 0
 7 ;+9
 4 FPA+1
 8 FNADD+4
 4 =/0 0
 5 FPA
 4 +1
 2 FPA+2
 5 FPA+2
 8 FADD
 4 =8 0
 5 FPA
 10 FPA+2
 8 FADD



FEXC 0 ADDRESS (EXCHANGE FPA WITH STORE)
 11 LINK
 8 BTOFB
 0 ADDRESS
 11 LINK
 8 FATOB
 4 EXIT+2
 5 ;+10
 4 +0
 5 EXIT+2
 0 ;+6
 11 LINK
 8 BTOFA
 4 ;+4
 5 EXIT+2
 8 INTERP
 0 FPB (MODIFIER)
 +0  (SAVE FORMAT PARAMETER)

FREAD 0 ADDRESS (LOAD FPA)
 11 LINK
 8 BTOFA
 8 INTERP

FWRITE 0 ADDRESS (STORE FPA)
 11 LINK
 8 FATOB
 8 INTERP



FCHANGE 4 ADDRESS (CONVERSION ROUTINES)
 6 +8191
 2 +8191
 7 AD8191
 2 +8191
 2 CONST
 9 ERRF
 2 CONST
 5 ;+3
 0 ;+2
 /8 ;+2
 +0  (MARKER)

QF6JMP 8 ERRF (LIVE; ALTERED TO 8 PSTAND)
 8 EXIT+3 (PACKED FORMAT)
 8 EXIT+5 (UNPACKED FORMAT)
 8 ITOR (INTEGER TO REAL)
 8 RTOI (REAL TO INTEGER)
 8 FTOR (FRACTION TO REAL)
 8 RTOF (REAL TO FRACTION)
 8 ERRF (LIVE; 8 IOINT)
 8 ERRF (LIVE 8 IORL)
CONST +8  (GIVES MAX.ADDRESS EXCEPT 8191)
AD8191 8 ERRF (LIVE; 8 PSET)


ITOR 0 QF+3
 /4 0
 5 FPA
 4 +0
 5 FPA+1
 4 +17
 5 FPA+2
 8 FSTAND

RTOI 4 FPA+2
 9 ;+13
 2 +17
 9 ERRI
 7 ;+3
 2 =15 0
 5 ;+2
 4 FPA
 14 0 (SHIFT FORMED BY PROGRAM )
 0 QF+4 (ROUTINE ROUNDS DOWN)
 /5 0
 4 =14 0 (REPLACE FOR CASE WHEN EXP=+17)
 5 ;-4
 8 INTERP
 4 =14 8175 (FPA HAS ABSOLUTE VALUE LESS THAN 1/2)
 8 ;-9

FTOR 0 QF+5
 /4 0
 5 FPA
 4 +0
 5 FPA+1
 5 FPA+2
 8 FSTAND

RTOF 4 FPA+2
 9 ;+3
 7 ;+11
 8 ERRFR
 1 +17
 9 ;+10
 1 =14 8175
 5 ;+2
 4 FPA
 14 0 (SHIFT FORMED BY PROGRAM)
 0 QF+6
 /5 0 (ROUTINE ROUNDS DOWN)
 8 INTERP
 4 =14 0 (EXPONENT= +0)
 8 ;-7
 4 =14 8175 (FPA HAS ABSOLUTE VALUE LESS THAN.000076)
 8 ;-9


JZERO 4 FPA
 7 JUMP
 8 INTERP

JUMP 4 QF
 6 =15 8191
 2 ADDRESS
 7 ;+0
 4 ADDRESS
 5 QF
 8 INTERP+1

JNEG 4 FPA
 9 JUMP
 8 INTERP

COUNT 0 ADDRESS
 /10 0
 8 INTERP

SAVELK 0 ADDRESS
 4 QF
 /5 0
 /10 0
 8 INTERP



FMUL 0 ADDRESS (GET SECOND OPERAND)
 11 LINK
 8 BTOFB
 4 FPA+2 (MULTIPLY FPA BY FPB)
 1 FPB+2
 5 FPA+2
 11 LINK
 8 DLMULT
 8 FSTAND


FDIV 0 ADDRESS (GET DIVISOR)
 11 LINK
 8 BTOFB
 4 FPA (DIVIDE FPA BY FPB)
 7 FSTAND (QUOTIENT = +0)
 0 FPA+1
 14 1
 4 FPA
 14 8191 (TO AVOID OVWRFLOW OF MANTISSA)
 3 WS+14
 5 WS+13
 4 FPB
 7 ERRO (DIVISOR = +0)
 5 WS+17
 4 FPB+1
 5 WS+18
 11 DLDIV
 8 DLDIV+1
 4 WS+28
 5 FPA
 4 WS+29
 5 FPA+1
 4 FPB+2
 2 FPA+2
1 +1
 5 FPA+2
 8 FSTAND

FSHIFT 4 ADDRESS (MULTIPLY BY 2**N AND STANDARDISE FPA)
 14 5
 14 8187
 1 FPA+2
 5 FPA+2
 8 FSTAND



DLMULT 4 FPB (MULTIPLY MANTISSAS OF FPA AND FPB)
 12 FPA
 5 WS+10
 3 WS+11
 4 FPB+1
 12 FPA
 14 8175
 3 WS+12
 1 WS+10
 5 FPA
 4 WS+11
 1 WS+12
 9 ;+19
 5 WS+11
 4 FPB
 12 FPA+1
 14 8175
 3 WS+12
 1 FPA
 5 FPA
 4 WS+12
 1 WS+11
 9 ;+6
 5 FPA+1
 7 ;+10
 4 FPA
 0 LINK
 /8 1
 6 =15 8191
 10 FPA
 8 ;-7
 6 +131071
 10 FPA
 8 ;-20
 4 FPA (CORRECTION FOR -1.0 TIMES -1.0 )
 2 =/0 0
 7 ;+2
 8 ;-12
 4 +131071
 5 FPA
 5 FPA+1
 8 ;-15

DLDIV +0
4 WS+14
0 +0
14 8191
3 WS+16
5 WS+15
4 +0
5 WS+30
5 WS+29
0 +0
4 WS+13
13 WS+17
5 WS+32
12 WS+17
3 WS+20
5 WS+19
4 WS+20
7 NOCARRY
2 +131071
1 +1
5 WS+20
4 WS+19
2 WS+13
1 -1
8 ;+3
NOCARRY 4 WS+19
2 WS+13
5 WS+19
4 WS+32
12 WS+18
14 8191
3 WS+33
2 WS+15
5 WS+21
4 WS+33
2 WS+16
5 WS+22
9 SUBT1
4 WS+21
8 ;+4
SUBT1 4 WS+21
1 -1
5 WS+21
7 L0
9 LNEG
LPOS 14 1
10 WS+30
9 JUMP1
8 ;-3
L0 4 +16
5 WS+30
8 JUMP1
LNEG 0 +0
14 1
10 WS+30
9 ;-2
JUMP1 4 WS+19
7 JUMP2
1 +1
7 JUMP2
1 -1
14 8191
10 WS+29
8 ;-6
JUMP2 4 WS+29
1 WS+30
2 +1
7 N1 (N=1&M=0)
4 WS+29
2 +16
5 WS+28
1 =14 0
5 SHIFT2
4 WS+29
2 +0
6 &17777
1 =14 0
5 SHIFT1
EVALUATE 0 WS+22
14 1
4 WS+21
SHIFT1 14 0 (SET BY PROGRAM)
3 WS+22
5 WS+21
0 WS+20
14 1
4 WS+19
SHIFT2 14 0 (SET BY PROGRAM)
3 WS+23
1 WS+21
5 WS+24
4 WS+23
1 WS+22
5 WS+25
9 ADD1
8 ;+2
ADD1 10 WS+24
0 WS+25
14 1
4 WS+24
14 8191
13 WS+17
5 WS+26
4 WS+28 (K>1)
2 =15 1
(=14 8193)
5 SHIFT3
0 +0
4 WS+26
SHIFT3 14 0 (SET BY PROGRAM)
3 WS+29
1 WS+32
5 WS+28
0 DLDIV
/8 1

N1 4 =14 8191
5 SHIFT1
4 =14 15
5 SHIFT2
4 +15
5 WS+28
8 EVALUATE



SQRT
LN
EXP
SIN
COS
ARCTAN +0
8 ERRF
[ QIN1  INBUF  TA  FOURIN  TAMARK  DNO  LEV4 ]
QIN1

+0
4 117;
5 125;
5 126;
5 127;
5 129;
4 117;
8 135;
7 6;
2 105;
7 14;
2 106;
7 15;
8 6;
10 125;
11 31;
8 38;
10 126;
8 15;
10 127;
4 129;
5 128;
0 117;
14 3
1 128;
1 128;
1 130;
5 129;
11 31;
8 38;
8 36;
+0
10 127;
4 115;
2 127;
9 20;
8 FAIL
8 36;
4 +1
8 135;
7 38;
2 118;
7 64;
2 107;
7 38;
1 108;
7 62;
1 109;
7 60;
1 110;
9 36;
1 111;
7 38;
2 112;
9 36;
2 113;
6 114;
5 130;
0 31;
/8 3
0 31;
/8 1
4 127;
7 38;
4 126;
7 92;
0 127;
/4 117;
5 124;
4 116;
2 127;
7 84;
4 129;
0 117;
13 124;
5 129;
4 125;
7 81;
4 129;
2 117;
8 82;
4 129;
0 0;
/8 1
4 130;
14 8191
1 128;
0 117;
14 8190
1 128;
8 74;
+0
4 129;
14 8189
5 91;
4 128;
0 117;
1 128;
1 130;
14 8189
1 128;
2 91;
7 76;
8 36;
+127
+45
+2
-3
-19
-14
-2
-79
-70
+57
+15
+7
+6
+0
+10
+100
+1000
+10000
+100000
+125000
+0
+0
+0
+0
+0
+0
+0
8 1;
4 131;
5 9
8 134;
5 ;+9
0 INBUF
/4 0
6 104;
10 INBUF
0 ;+4
/8 ;+1
8 8;
8 40;
+0

FAIL     4    +8
         5    TA
         4    +0
         5    FOURIN
         5    TAMARK+2
         4    -1
         5    TAMARK
         4    DNO
         5    TAMARK+1
         8    LEV4

[ QOUT1  OUT ]
QOUT1
+0
8 68;
5 101;
4 102;
5 103;
4 107;
5 130;
11 38;
8 39;
4 104;
7 25;
10 104;
4 101;
12 112;
3 101;
5 114;
7 28;
0 114;
/4 115;
10 130;
8 146;
10 103;
4 103;
7 36;
8 9;
4 125;
8 147;
8 11;
4 104;
9 31;
8 17;
4 130;
7 34;
8 17;
4 105;
8 20;
0 0;
/8 2
+0
0 0;
/4 1
9 55;
5 104;
4 105;
8 148;
8 149;
4 101;
9 64;
4 106;
8 150;
4 104;
2 107;
5 104;
0 38;
/8 1
14 1
14 8191
5 104;
4 100;
8 151;
4 126;
8 152;
4 107;
8 45;
2 107;
5 101;
4 127;
8 49;
5 101;
11 38;
8 39;
4 104;
2 102;
5 104;
4 107;
5 128;
5 129;
5 130;
0 128;
/4 108;
2 101;
9 85;
5 101;
10 129;
8 79;
4 104;
1 128;
10 128;
7 131;
4 130;
7 134;
0 129;
/4 115;
8 153;
4 107;
5 129;
4 128;
1 141;
9 78;
8 138;
+141
+0
-6
+0
+0
+160
+43
+0
+100000
+10000
+1000
+100
+10
+1
+0
+48
+177
+178
+51
+180
+53
+54
+183
+184
+57
+46
+10
+45
+0
+0
+0
4 125;
8 154;
8 136;
4 129;
7 142;
10 130;
8 91;
10 130;
7 78;
8 36;
-5
4 105;
8 155;
8 96;
+0
10 145;
10 145;
10 145;
10 145;
10 145;
10 145;
10 145;
10 145;
10 145;
11 OUT
8 OUT+1
4 +0
0 145;
5 145;
/8 ;+1
8 96;
8 133;
8 94;
8 62;
8 60;
8 50;
8 46;
8 149;
8 27;
8 21;
%
<! Halt !>