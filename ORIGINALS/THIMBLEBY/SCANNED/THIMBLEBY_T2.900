



PROGRAM HWT
SECTION XSEG IN 1
$ ZERO KEY VECTOR.
LDB L P191
EXT L 24
SBP L 2  $NO SUS
LDA L 130
MLS L 2
STA Y P03+1
LDB L 250
STB Y P03
ADB Y P03+1
STB Y P03+1
P88:LDA L 0
LDB Y P03
ADB L 1
STB Y P03
STA YB P11-250
SBB Y P03+1
TST L 32
ADP L 1
SBP L *-P88


P80:$ REMOVAL OF PARITY BIT FROM FIXED REPLIES!
LDB Y P82
SBB Y P81
TST L 32
ADP L P79-*

LDB Y P82
LDA YB 0
STA Y P04
LDB Y P04
LDA Y P84$ MASK BIT
CPY L 32+8+1+64
STB Y P04
LDA Y P04
LDB Y P82
STA YB 0
ADB L 1
STB Y P82
SBP L *-P80
P79:



LDB L P54 $COUNT CHARS
LDA L 0
STA ZB 0
SRE Y P140
LDA Y P05
SBA L 40
TST L 4+16
ADP L 8
SRE Y P142
SRE Y P141
SRE Y P140
LDA Y P05
SBA L 40
TST L 4+16
ADP L 1
SBP L 8
LDA Y P05
SBA L 94
TST L 4+16
SBP L 10
LDB Y P02
STB Y P29$BASE OF FREE STORE SET.
STB Y P61  $PERMANENT BASE


LDA L 128
MLS L 2
STA Y P03
LDA Y P02
LDB L 250
SBA YB P11-250
LDB L 0
DIV Y P03

$END OF HASHING ROUTINE!

LDB L P20 $NEW DEVICE
LDA L 0
STA ZB 0
STA ZB P54-P20
$INPUT TEXT AND CREATE KEYSTACK.


P190:LDB L P131
EXT L 28
SBP L 2
EXT L 4
P348:

SRE Y P148$ ZERO STACK.
SRE Y P144 $INPUT TEXT
SRE Y P146$CHAIN INPUT TEXT
P195:SRE Y P145$ISOLATES WORD & HASHKEY
SRE Y P149$SEARCH KEYWORD
SRE Y P151$ PLACES KEYWORD ON STACK
SBP L *-P195$ READ NEXT WORD.
P188:$END OF KEYWORD SEARCH



$DECOMPOSION SEARCH USING KEYSTACK AND SCRIPT!

LDA Y P18
ADA L 1
TST L 8// IS KEYSTACK EMPTY?
SRE Y P250$ YES USE MEMORY!
LDA Y P18
TST L 4+16
ADP L P211-*$TOP OF STACK IN USE

LDA L 15
STA Y P209
LDB L 0
STB Y P210$ LOOPING DEVICE
P117:
LDB Y P210
SBB L 1
LDA YB P18$ LOAD TABLE EMTRY
TST L 4+16$ TSET FOR NULL PTR
ADP L P212-*

STB Y P210
ADB Y P209
TST L 32
SBP L *-P117$ TEST NEXT ENTRY
SRE Y P250$ TABLE  EXHUASTED USE MEMORY!

P211:
LDB Y P18
SBB L 1
STB Y P18
ADB L 1$ TOP OF KEYSTACK REDUCED
LDA YB P18$ LOAD ENTRY

P212:
STA Y P213$ PTE STORE
LDA L 0
STA YB P18$ STORE NULL PTR IN ENTRY POSN

$KEYWORD PTR NOW IN P213
$NEXT BLOCK INITIATES DECOMPOSITION

P226:
LDB Y P213$ KEYWORD PTR
ADB L 1
STB Y P213
LDA YB 0
SBA Y P206$T,MY,
TST L 4+16
ADP L P227-*
LDB  Y P115
ADB L 1
LDA Y P19
STA YB P115
STB Y P115
LDA Y P02
STA Y P29$ INCREMENT BASE OF FREE STORE
$ LAST BLOCK OF CODE STORES THE POSN OF ANY TEXT
$ WHICH HAS  ' MY ' AS A REGNANT K3Y

P227:
LDB Y P213
STB Y P170
SRE Y P169$ UNPACK
LDB L 0


P119:
STB Y P252
LDA YB P165
SBA L 40$TEST FOR LEFT PAREN
TST L 4+16
ADP L P253-*

LDA Y P19
STA Y P202$ HEAD OF INPUT TEXT

STB Y P256$ BUFFER PTR
LDB Y P213
STB Y P214$ STORE PTR
LDA L 2
STA Y P201$ PAREN COUNT
SRE Y P312$ SEGMENT TABLE.
SRE Y P217$ SRE DECOMPOSITION

$ IF SRE SUCCEEDS RETURNS WITH 1 IN A

TST L 4+16
ADP L P255-*
SRE Y P272

P253:
LDA Y P252
SBA L 1
TST L 4+16
ADP L 4
LDB Y P213
ADB L 1
STB Y P213
SBP L *-P227
LDB Y P252
ADB L 1
SBP L *-P119

P255:
LDB Y P214
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
STB Y P254

P257:
LDA YB P165$ READ NEXT CHARACTER
SBA L 41$ RIGHT PAREN
TST L 8
ADP L P78-*
LDA Y P254
TST L 4+16
ADP L 3
ADB L 1
STB Y P254
SBP L *-P257

LDB Y P214
ADB L 1
STB Y P214
SBP L *-P255$ UNPACK NEXT TWO CHARACTERS

$ WHICH ASSEMBLY RULE
P78:
LDA Y P254
TST L 8
ADP L 7
LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P254

LDB Y P254
LDA YB P165$ READ NEXT CHARACTER
SBA L 32
TST L 4+16
ADP L 3
LDA L 0
STA Y P260$ ASSEMBLTY RULE
ADP L 2
LDA YB P165
STA Y P260

LDA Y P260
ADA L 1
STA YB P165
LDA Y P214
STA Y P170
SRE Y P171$ STORE NEW PTR

SRE Y P215
$ASSEMBLY RULE STARTS AT RULE NOS P260
$ OFFSET FROM P214+P254
P323:
SRE Y P287$ OUTPUT
LDP L P190+4

EXT L 16 $ END OF PROGRAM
Z
+0
P20:+10
+P54+1 $BUFFER
+40 $39 CHARS
+46 $. AS TERM CHAR
+0 $Z SEGMENT
+4
P54:  +0
P0=P0+40    $BUFFER AREA
P39:U,

HOW DO YOU DO.
MY NAME IS ELIZA.,
P191:+1
+P39
+P1
-1
+0
+0
P130: U, PLEASE TELL ME YOUR PROBLEM.

,
P131: +1
  +P130
  +P1
  -1
  +0
  +2
P120:+1$ OUTPUT BUFFER FOR ASSEMDLED TEXT.
+0000
+0000
-1
+1
+16


Y
+0,+0,+0,+0
+0
P04:+0$SRE STORE
P21:+0$I/O STORE
+0
P05:+0$CHARACTER STORE
P02:+P11+300$DUMMY PTR
P03:+0
+0
+0
+0
$DUMMY PTR!P02 STORAGE PTR
P07:+0$KEYWORD STORE
+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0

P115:+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0$MEMORY
P389:+P138$ MEMORY SCRIPT

P363:+P196+3
P342:+0
P44:+0$ START OF KEYWORD SCRIPT.
P256:+0$ OFFSET PTR.
P84:+J4+128
P82:+P220$ BEGINNING OF TEXT TO HAVE PARITY REMOVED.
P81:+P11$ END OF SAME.
P17:+0$BUFFER OFFSET IN EQUALITY SRE.
P202:+0$ HEAD OF STRING IN PARSING.
P201:+0$ PAREN COUNT.
P209:+0$ DUMMY PARM.
P210:+0$ N=C(P210)!
P213:+0$ KEYWORD PTR
P214:+0$ PROGRESS THRO SYNTAX RULE.
P216:+0$ FOR USE U IN SRE '0'
P240:+0$ COUNT
P252:+0
P254:+0$ DUMMY PARMS
P390:+0$LINK
P351:+0$RESET MARKER
P352:+0$RESET MARKER
P360:+0$FLAG
P361:+0$FLAG
P299:+P139$ SEE P139!

P393:+P196+3
P399:+0$MARKER
P314:+0$ LINK

$SRE PARAMETERS
P312:+P313$ SEGMENT TABLE.
P140:+P10$INPUT SRE
P141:+P30$STORAGE ALG.
P142:+P50$HASHING ALG.
P143:+P40$INPUT LIST
P144:+P199$INPUT TEXT9
P145:+P196$SELECTS NEXT WORD AND KEY
P146:+P197$CHAINS TEXT
P147:+P186$ANALYSIS OF ONE CHARACTER WORDS!
P148:+P83$ZERO KEY STACK
P149:+P192$TO DETECT IF KEYWORD
P150:+P194$EQUALITY
P151:+P187$$PLACE KEYWORD ON STACK
P152:+P182$TRANSFORMATION
P153:+P68$DLIST
P169:+P167$ UNPACK SUBROUTINE.
P171:+P172$ PACKING SUBROUTINE.
P242:+P223$ READ N WORDS
P250:+P251$ SRE MEMORY
P239:+P232$ DLIST SRE.
P233:+P230$ ASTERISK SRE.
P217:+P218$ SRE DECOMPOSITION.
P215:+P283$ SRE ASSEMBLY.
P272:+P273$ NEXT SYNTAX RULE.
P267:+P285$ ASSEMBLY EXCREPTIONS.
P287:+P286$ TEXT OUTPUT BUFFER UNPACKED.
P102:+P103$ SRE FOR MATCHING CONTIGUOUS STRINGS!
P366:+P55$ '='
P112:+P259
P338:+P224$ '('
$END OF SRE PARAMETERS.

P328:+0
P52:+0
P56:+0
P109:+0
P126:+0
P270:+0
P295:+0
P59:+0
P49:+0
P174:+0
P110:+0$ MARKER £1
P111:+0$ MARKER £2
P244:+0$ LINE LENGTH
P245:+0$ LINE COUNT
P280:+0$ OUTPUT BUFFER.
P289:+0$ PARM IN ASSENBLY SRE.
P290:+0$ SEGMENT EXIT.
P291:+0$ SEGMENT ENTRY
P262:+0$ PAREN COUNT.
P265:+0$ BUFFER PTR.
P266:+0$ CORE PTR.
P165:+0$ UNPACKED CHARACTER STORE.
P166:+0$ AS ABOVE^ .

P383:  +0  $LINK TO GETCHAR
P61: +0  $PERMANENT BASE OF FREE STORAGE
P322:+P323
P319:+0$ LINK SRE ASSEMBLY.
P333:+0$ END OF TEXT.
P260:+0$WHICH ASSEMBLY RULE.
P274:+0$ SRE BUFFER
P168:+0$ LINK FOR PACK & UNPACK SRE.
P170:+0$LOCATION OF PACKED TEXT.
P178:+0$DUMMY VARIABLE!
P305:+0$ DUMMY PARAMETER.
P304:+0
P346:+0
P133:+0$SET TO ONE ON END OF SCAN OF INPUT.
P33:-1$ BEGINNING OF KEYWORD.
P60:+0$ TRANSFORMATION COUNT.
P160:+0$BASE OF CHAIN
P14:+0
P19:+0$TAIL OF SEARCH
P13:+0

P16:+0$BASE OF KEYWORD TABLE.
+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0
P18:+0$KEYWORD TABLE.
+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0,+0

$ PARM FOR CONTIGUOUS MATCHING.
P100:+0
P105:+0$ PARAMETERS FOR CONTIG. MATCHING.

P101:+0
P122:+0

P69:+0,+0
P121:+0,+0
$WARNING THIS BLOCK CONTEXT SENSITIVE DO NOT SPLIT!
P29:+0$BASE OF FREE STORE
P06:+0$VAR IN P196 RESERVED
P12:+0
P15:-1
P24:+0
P25:+0
P34:+0$START OF KEYWORD CHAIN
P35:+0$END OF SAME
P163:+0
P161:+0
P22:+0$HEAD OF SEARCH
P23:+0
P08:+0$PARENTHESIS COUNT
P09:+0$HASH KEY


P62:+1,+P19,+0,+0,+0,+0,+0,+0,+0,+0,+0$SEGMENT TABLE.

$ DECOMPOSITION TABLES


P221:+P224
+P222
+P223
+P223
+P223
+P223
+P223
+P223
+P223
+P223
+P223
+P55
+P219
+0

P220:U,(,
U,0,
U,1,
U,2,
U,3,
U,4,
U,5,
U,6,
U,7,
U,8,
U,9,
U,=,
U, ,
+95

P98:+0

$ END OF DECOMPOSITION TABLES.
P206:T,MY,
P138:T,(0 YOUR 0)  (LET US DISCUSS FURTHER WHY YOUR 3)
(EARLIER YOU SAID YOUR 3)
(BUT YOUR 3)
(DOES THAT HAVE ANYTHING TO DO WITH THE
 FACT THAT YOUR 3)),
P139:T,(0) (I AM NOT SURE THAT I UNDERSTAND
 YOU FULLY)
(PLEASE GO ON)
(WHAT DOES THAT SUGGEST TO YOU)
(DO YOU FEEL STRONGLY ABOUT DISCUSSING SUCH THINGS)),
+0
P11:+0$KEY VECTOR OFFSET
X


P172:STB Y P168$ PACKING ROUTINE!

LDB Y P170$ CORE STORE PTR!
LDA Y P165$ LOAD FIRST CHARACTER
SFT L 16+8$ FIRST CHARACTER PACKED

ADA Y P166$SECOND CHARACTER PACKED

STA YB 0

LDP Y P168$EXIT



P167:STB Y P168$ UNPACK ROUTINE

LDB Y P170$ CORE STEOO PTR
LDA YB 0$ PACKED TEXT IN A

SFT L 16+8
SFT L 32+8
STA Y P166$SECOND CHARACTER STTORED

LDB Y P170
LDA YB 0
SFT L 32+8
STA Y P165$ FIRST CHARACTER STORED

LDP Y P168$ EXIT


P313:STB Y P314$ SEGMENT TABLE.

LDB L 0
P318:
ADB L 1
LDA YB P62
TST L 8
ADP L P317-*
LDA L 0
STA YB P62
SBP L *-P318
P317:
LDA L 2
STA Y P62

LDA Y P19
STA Y P62+1

LDP Y P314$END OF SRE.


P382:  $GET CHAR
  STB   Y P383
P385:
  LDB   L P54
  LDA  ZB 0
  TST   L 8
  ADP   L P384-*  $GET MORE
  LDA   L 39
  SBA  ZB 0
  CPY   L 1+192+32  $B=A
  LDA ZB P54+1  $LOAD NEXT CHAR
  STA   Y P21
  LDB   L 0
  LDA  ZB P54
  SBA   L 1
  STA  ZB P54
  LDA   Y P21
  SBA   L 46  $CHAECK FOR .
  TST   L 8
  STA  ZB P54
  LDP   Y P383  $EXIT

P384:  $READ MORE
  LDB   L P20
  EXT   L 24
  SBP   L 2
P132:
  EXT   L 4
  SBA   L 4
  TST   L 4+16
  SBP   L *-P132
  LDA   L 39
  LDB   L 0
  STA  ZB P54
  SBP   L *-P385  $GET CHAR



$INPUT SRE
P10:STB Y P03+3
LDA L 0
STA Y P05
P90:
SRE X P380-*
LDA Y P21
LDB L 127
CPY L 1+8+0+16
STA Y P05
SBA L 10
TST L 4+16
ADP L 1
SBP L *-P90
LDA Y P05
SBA L 13
TST L 4+16
ADP L 1
SBP L *-P90
LDP Y P03+3
P380:  +P382  $ENTRY ADDRESS OF GETCHAR S/R
$END OF INPUT SRE

$HASHING ALGORITHM
P50:STB Y P04
LDA L 0
STA Y P07
STA Y P09$KEYWORD STORAGE & HASHKEY
P92:SRE Y P140
LDA Y P05
SBA L 32$TEST FOR BLANK
TST L 4+16
ADP L 1
ADP L P93-*
LDA Y P05
LDB Y P07
ADB L 1
STA YB P07
STB Y P07
ADA Y P09
STA Y P09
SBP L *-P92
P93:
LDB Y P07
LDA Y P05
ADB L 1
STA YB P07
LDA Y P09
LDB L 0
DIV Y P07
STA Y P09
LDP Y P04
$END OF HASHING ALG. KEY IN P09

$STORAGE ALG.
P30:STB Y P04
LDB Y P09$HSAHKEY
ADB L 250
STB Y P09$HASH-KEY INCREMENTED.
LDA YB P11-250$KEY(P09)
TST L 4+16
ADP L P94-*
LDA Y P02
STA YB P11-250$PTR SET
LDB L 0
STB Y P07
LDB Y P02
P95:ADB L 1
STB Y P02
LDB Y P07
ADB L 1
STB Y P07
LDB Y P07
LDA YB P07$KEYWORD STORAGE

SBA L 32
TST L 8
ADP L P173-*
LDA YB P07

STA Y P165
ADB L 1
LDA YB P07
SBA L 32
TST L 8
ADP L P173-*+2
LDA YB P07
STA Y P166

STB Y P07

LDB Y P02
STB Y P170
SRE Y P171
SBP L *-P95
P173:
LDA L 32
STA Y P165
LDA L 32
STA Y P166
LDB Y P02
STB Y P170
SRE Y P171
LDB Y P02
ADB L 1
STB Y P02
ADP L P96-*


P94:LDA YB P11-250$STORAGE POSN
STA Y P03$OF KEY WORD SCRIPT
LDB Y P03
P97:ADB L 1
LDA YB 0
SBA L 64$END OF LIST!CHANGE *_&
TST L 4+16
SBP L *-P97
SBB L 1
LDA YB 0
TST L 4+16
ADP L P85-*
LDA Y P02
STA YB 0
ADB L 1
LDA L 64$!CHANGE *_&
STA YB 0
LDB L 0
STB Y P07
LDB Y P02
SBP L *-P95
P96:SRE Y P143
LDP Y P04
P85:LDA YB 0
STA Y P03
LDB Y P03
SBP L *-P97
$END OF STORAGE ALG.

$INPUT LIST
P40:STB Y P03+2
LDA L 1
STA Y P08
LDB L 0
STB Y P254

P91:SRE Y P140
LDA Y P05
LDB Y P254
STA YB P165

SBA L 41$TEST FOR )
TST L 4+16
ADP L P87-*
LDA Y P08$ () COUNT
SBA L 1
STA Y P08
TST L 8
ADP L P89-*
P87:LDA Y P05
SBA L 40$TEST FOR (
TST L 4+16
ADP L P86-*
LDA Y P08
ADA L 1
STA Y P08

P86:
SBB L 1
TST L 32
ADP L 3
LDB L 1
STB Y P254
SBP L *-P91

LDB Y P02
STB Y P170
SRE Y P171$PACK & STORE.
LDB Y P02
ADB L 1
STB Y P02
LDB L 0
STB Y P254
SBP L *-P91

P89:LDB Y P02
STB Y P170
LDB Y P254
TST L 4+16
ADP L 2
LDA L 32
STA Y P166
SRE Y P171
LDB Y P02
ADB L 1
STB Y P02
LDA L 95
STA YB 0
ADB L 1
LDA L 0
STA YB 0
ADB L 1
LDA L 64
STA YB 0
ADB L 1
STB Y P02
LDP Y P03+2
$END OF SRE

P199:STB Y P03$INPUT TEXT
LDB Y P02
STB Y P14
P198:
SRE X P381-*
LDA Y P21
LDB L 127
CPY L 1+8+0+16
STA Y P21
SBA L 95
TST L 20
ADP L P355-*
LDA Y P02
SBA Y P14
TST L 20
SBA L 1
ADA Y P14
STA Y P02
SBP L *-P198
P355:
LDA Y P21
SBA L 63
TST L 8
ADP L P356-*
LDA Y P21
SBA L 33
TST L 20
ADP L P357-*
P356:
LDA L 46
STA Y P21
P357:
LDA Y P21
SBA L 44
TST L 20
ADP L P248-*
LDA L 32
LDB Y P02
ADB L 1
STB Y P02
STA YB 0
ADP L P358-*
P248:
LDA Y P21
SBA L 10
TST L 8
SBP L *-P198
LDA Y P21
SBA L 13
TST L 4+16
ADP L P358-*
LDA L 32
STA Y P21
P358:
LDA Y P21
LDB Y P02
ADB L 1
STB Y P02
STA YB 0
SBA L 46$FULL-STOP TERMINATES INPUT!
TST L 4+16
SBP L *-P198
LDA L 32
LDB Y P02
ADB L 1
STA YB 0
ADB L 1
LDA L 46
STA YB 0
STB Y P02
LDP Y P03
P381:  +P382  $GET CHAR


P196:STB Y P03$ SELECTS NEXT & KEY
LDB Y P19
STB Y P22$ HEAD OF CHAIN.

P32:
LDA Y P133
TST L 4+16
LDP L P188$ END OF KEYWORD SEARCH.

LDB Y P35
STB Y P34
LDA L 0
STA Y P09
STA Y P04+1$ HASHKEY & DIGIT COUNT ZEROED.

P36:
LDB Y P35
LDA YB 0

SBA L 32$ SPACE
TST L 8
ADP L P279-*

LDA YB 0
SBA L 46$ FULL-STOP
TST L 8
ADP L P37-*

LDA YB 0
ADA Y P09
STA Y P09
LDA L 1
ADA Y P04+1
STA Y P04+1
LDB Y P35
LDA YB 1
STA Y P35
SBP L *-P36

P279:
LDA YB 1
STA Y P35
ADP L P268-*

P37:
LDA L 1
STA Y P133$ LAST WORD IN TEXT BEING PROCESSED.
LDB Y P35
STB Y P333
LDA Y P04+1
TST L 8
LDP L P188
P268:
LDB L 0
LDA Y P09
DIV Y P04+1
ADA L 250
STA Y P09$ HASH KEY IN P09
LDA Y P04+1
SBA L 1
TST L 8
SRE Y P147
$ SINGLE CHARACTER ANALYSIS.
LDP Y P03
$ END OF SRE.




P197:STB Y P03$CHAINS TEXT
LDB Y P02
ADB L 1
STB Y P35$ BEGINNING OF KEYWORD.
STB Y P02
STB Y P160
STB Y P19
ADB L 2
STB Y P04


LDB Y P14
ADB L 1
LDA YB 0
SBA L 32
TST L 8
SBP L 5
STB Y P14
$ REMOVES SPACES IN FRONT OF TEXT.


P297:
LDB Y P14
LDA YB 0
SBA L 32
TST L 4+16
ADP L 6
ADB L 1
LDA YB 0
SBA L 32
TST L 8
SBP L *-P297-1
SBB L 1
STB Y P14
LDA YB 0
LDB Y P02
STA YB 0

LDA Y P04
STA YB 1

LDB Y P14
LDA YB 0
SBA L 46
TST L 8
ADP L P184-*

LDB Y P02
ADB L 2
STB Y P02
ADB L 2
STB Y P04
LDB Y P14
ADB L 1
STB Y P14
SBP L *-P297

P184:
LDB Y P14
STB Y P333
LDB Y P02
ADB L 2
STB Y P02
LDP Y P03$ END OF SRE

$END OF SRE

P186:STB Y P03+2$ANALYSIS OF ONE CHAR. WORDS
LDB Y P34
LDA YB 0
SBA L 44$TEST FOR ',\
TST L 8
ADP L P180-*
LDA YB 0
SBA L 46$TEST FOR '.'
TST L 4+16
LDP Y P03+2
P180:LDA Y P18
ADA L 1
TST L 8
ADP L 3
LDA L 46
LDB Y P34
STA YB 0$DELETES FOLLOWING TEXT
LDP L P188$END OF SEARCH
ADB L 1
STB Y P34
STB Y P19$DELETES PRECEDING TEXT
LDP L P195

$END OF SRE

P83:STB Y P03$ SRE FOR ZEROING STACK.
LDA L 0
STA Y P133$ END OF TEXT MARKER.

LDB Y P29
STB Y P02$ BASE OF FREE STORE.
LDB L 0
LDA L 0
STA YB P18
STA YB P16
SBB L 15
TST L 32
ADP L 3
ADB L 16
STB Y P18
SBP L 9
LDA L 0
SBA L 1
STA Y P18$FLAG SET
STA Y P33
LDP Y P03
$END OF SRE



P192:STB Y P03$SRE TO DET IF KEYWORD.
LDA L 0
STA Y P15$ PRECEDENCE KEY SET TO ZERO
LDB Y P09
LDA YB P11-250$HASH TABLE.
TST L 8$IS POSN EMPTY!
LDP L P195$ YES! SELECT NEXT WORD!
STA Y P44$ START OF KEYWORD SCRIPT.
ADA L 1
STA Y P06
LDA L 0
STA Y P17$ UNPACKING BUFFER OFFSET.
LDA Y P34
STA Y P22

P181:SRE Y P150$TEST FOR EQUALITY.
TST L 8
ADP L P193-*$NOT EQUAL TRY NEXT.

P156:
LDA Y P06
STA Y P170
SRE Y P169
LDB L 0$ INITIAL UNPACK PROCEDURE.
ADP L 1
P159:
LDB L 1
STB Y P05
LDA YB P165
SBA L 32
TST L 8
ADP L P284-*
TST L 32
SBP L *-P159
LDA Y P06
ADA L 1
STA Y P06
SBP L *-P156
P154:
TST L 32
ADP L P157-*
P158:
LDB Y P06
ADB L 1
STB Y P06
STB Y P170
SRE Y P169$ UNPACK & PLACE IN BUFFER AT P165.
LDB L 0
ADP L 1
P157:
ADB L 1
P284:
STB Y P05

LDA Y P05
TST L 8
ADP L 7

LDA Y P06
ADA L 1
STA Y P06
STA Y P170
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P05


P341:
LDA YB P165
SBA L 61
TST L 4+16
ADP L P38-*
SRE Y P152$TRANSFORMATION.
LDA Y P35
STA Y P34
ADP L P347-*
P45:
LDA Y P05
TST L 8
ADP L 7

LDA Y P06
ADA L 1
STA Y P06
STA Y P170
SRE Y P169$ UNPACK
LDA L 0
ADP L 1
LDA L 1
STA Y P05


P347:
LDB Y P05

LDA YB P165
SBA L 40
TST L 8
LDP Y P03

LDA Y P165
SBA L 32
TST L 8
SBP L *-P45

LDA YB P165
SBA L 41
TST L 8
LDP L P195

LDA YB P165
SBA L 57
TST L 16
LDP Y P03

LDA Y P15
MLS L 10
STA Y P15

LDB Y P05
LDA YB P165
SBA L 48
ADA Y P15
STA Y P15
SBP L *-P45

P38:
LDB Y P05
LDA YB P165
SBA L 40
TST L 8
LDP Y P03$ END OF SRE.
LDA YB P165
SBA L 48
TST L 4
ADP L P67-*
LDA YB P165
SBA L 57
TST L 16
ADP L P67-*
LDA YB P165
SBA L 48
STA Y P342
LDA Y P15
MLS L 10
ADA Y P342
STA Y P15

P340:
LDB Y P05
TST L 32
ADP L P344-*
LDB Y P06
ADB L 1
STB Y P06
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
STB Y P05
SBP L *-P341
P344:
LDB L 1
STB Y P05
SBP L *-P341$ CARE LARGE ABSOLUTE JUMP

P67:
LDB Y P05
LDA YB P165
SBA L 32
TST L 8
SBP L *-P340
SRE Y P153$DLIST!
LDP Y P03



P193:LDB Y P06
LDA YB 0
SBA L 64$TEST FOR END OF CHAIN.
TST L 4+16
ADP L 1
ADP L 3
ADB L 1
STB Y P06
SBP L *-P193
SBB L 1
LDA YB 0
TST L 4+16$TEST FOR KEY ADDRESS.
ADP L 1
LDP L P195$PROCESS  NEXT WORD.
LDA YB 0
STA Y P44
ADA L 1
STA Y P06
LDA L 0
STA Y P17
LDA Y P34
STA Y P22
SBP L *-P181
$END OF SRE.




P68:STB Y P04$DLIST
LDA L 0
STA Y P15
LDP Y P04



P194:STB Y P03+1
$SRE TO TEST FOR EQUALITY OF STRINGS.
$P06(CONTIG.),P22(CHAINED).
LDB Y P06
STB Y P24
LDB Y P22
STB Y P25

LDA Y P24
STA Y P170
SRE Y P169

LDB Y P17
ADP L P177-*

P26:LDB Y P24
STB Y P170
SRE Y P169$ UNPACK
LDB L 0

P177:
LDA YB P165
STB Y P17

LDB Y P25
SBA YB 0
TST L 4+16
ADP L P27-*$STRINGS NOT EQUAL.
LDA YB 0
SBA L 32$TEST FOR END OF STRING.
TST L 8
ADP L P28-*$STRINGS EQUAL
LDB Y P25
LDA YB 1
STA Y P25

LDA Y P17
SBA L 1
TST L 4+16
ADP L 4
LDB Y P24
ADB L 1
STB Y P24
SBP L *-P26

LDB L 1
SBP L *-P177

P27:
LDB Y P17
LDA YB P165
SBA L 32$BLANK
TST L 4+16
ADP L P43-*
LDB Y P25
LDA YB 0
SBA L 46$TEST FOR END OF INPUT TEXT.
TST L 8
ADP L P28-*
P43:
LDA L 0$STRINGS NOT EQUAL!
LDP Y P03+1
P28:
LDA L 1
LDP Y P03+1
$END OF SRE.





P187:STB Y P03$PLACE KEYWORD ADDRESS ON STACK.
LDA Y P18
ADA L 1
TST L 8
STA Y P18
LDA Y P15$PREC KEY
SBA Y P33$TEST FOR POSN
TST L 16
ADP L P31-*$TOP OF STACK
LDB L 15
SBB Y P16
TST L 32
EXT L 40$STACK OVERFLOW
LDA Y P44$ADDRESS OF KEYWORD
STA YB P16$PLACED ON BOTTOM OF STACK
LDA Y P16
ADA L 1
STA Y P16
LDP Y P03
P31:LDA Y P15
STA Y P33$NEW PRECEDENCE KEY
LDB Y P18
ADB L 1
STB Y P18
SBB L 15
TST L 32
EXT L 40$STACK OVERFLOW
LDB Y P18
LDA Y P44
STA YB P18
LDP Y P03
$END OF SRE.





P182:STB Y P03+1$TRANSFORMATION
LDB Y P02
ADB L 1
STB Y P02
STB Y P161$HEAD OF NEW CHAIN

P345:
LDA Y P05
TST L 8
ADP L 7

LDB Y P06
ADB L 1
STB Y P06
STB Y P170
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P05

P324:
LDA YB P165
SBA L 32
TST L 8
SBP L *-P345

LDA YB P165
LDB Y P34
STA YB 0
LDA Y P161
STA YB 1

P310:
LDA Y P05
TST L 8
ADP L 7
LDB Y P06
ADB L 1
STB Y P06
STB Y P170
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P05

P325:
LDA YB P165
LDB Y P161
STA YB 0
SBA L 32
TST L 8
ADP L P311-*

P326:
LDB Y P05
LDA YB P165
SBA L 40
TST L 8
ADP L P311-*

LDA YB P165
SBA L 41
TST L 8
ADP L P311-*

LDB Y P161
LDA Y P161
ADA L 2
STA YB 1
STA Y P161
SBP L *-P310

P311:
LDA Y P35
STA YB 1

LDA Y P161
ADA L 2
STA Y P02

LDP Y P03+1
$ END OF SRE







$TO TEST PARSING RULE
P218:STB Y P04
LDA Y P256


P259:
LDA Y P256
TST L 8
ADP L 7
LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P256

LDA YB P165
SBA L 40
TST L 4+16
ADP L P302-*
LDA Y P256
SBP L *-259

P269:
LDA Y P256


P258:
TST L 8
ADP L 7$UNREAD CHARACTER IN BUFFER

LDB Y P214
ADB L 1
STB Y P214$ INCREMENT PTR
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P256$ BUFFER OFFSET

P302:
LDA YB P165$ READ NEXT CHARACTER
SBA L 32
TST L 8
SBP L *-P269
LDA YB P165
SBA L 41$ TEST FOR RIGHT PAREN
TST L 4+16
ADP L P237-*
LDA L 1
LDP Y P04$ END OF RULE

P237:
LDA YB P165$ REREAD CHARACTER
STA Y P210
STB Y P256
LDB L 0
SBB L 1

P225:
ADB L 1
LDA YB P220
SBA Y P210
TST L 4+16
ADP L P118-*
SRE YB P221$ JUMP TO GIVEN BY TABLE
P219:
LDA Y P256
SBP L *-P258$ READ NEXT CHARACTER
P118:
LDA YB P220
SBA L 95
TST L 4+16
SBP L *-P225
LDB Y P214$ MAIBN STORE OFFSET
STB Y P06
LDB Y P256
STB Y P17
LDB Y P202$ HEAD OF PASS THRO INPUT TEXT
P278:
LDB Y P202
LDA YB 0
SBA L 32
TST L 4+16
ADP L  P277-*
LDA YB 1
STA Y P202
SBP L *-P278
P277:
STB Y P202
STB Y P22
LDB Y P62$ SEGMENT TABLE.
LDA Y P202$ START OF SEGMENT.
STA YB P62
ADB L 1
STB Y P62$ INCREMENT PTR.

$NEXT INPUT WORD SET=UP.

SRE Y P150$ TEST FOR EQUALITY
TST L 4+16
ADP L 2$WORDS EQUAL

LDA L 0$ RULE BREAKS DOWN
ADP L P271-*$ IS THERE ANOTHER RULE

LDB Y P25
LDA YB 1
STA Y P202$ CHAIN PTR INCREMENTED

LDB Y P24
STB Y P214
$ RULE PTR INCREMENTED
LDA Y P17
SBP L *-P258$ READ NEXT PART OF RULE

P271:$IS THEIR ANOTHER RULE ASSOC WITH THIS KEY!
     $ IF THERE IS RETURN CONTROL TO FRONT OF THIS SRE
SRE Y P272$ TESTFOR ANOTHER ROULE
LDA L 0
LDP Y P04




P273:STB Y P274$ NEXT SYNTAX RULE.
LDA Y P19
STA Y P202

SRE Y P312$ SEGMENT TABLE.

LDA L 1
STA Y P201
LDA Y P252
STA Y P256
LDB Y P213
STB Y P214
LDB Y P214
STB Y P170
SRE Y P169

P330:
LDA Y P256
TST L 8
ADP L  7

LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P256

LDB Y P214
LDA YB 0
SBA L 64
TST L 8
LDP L P188$ READ NEXT WORD IN KEYSTACK.

LDB Y P256
LDA YB P165
SBA L 40
TST L 4+16
ADP L P331-*
LDA Y P201$PAREN COUNT
ADA L 1
STA Y P201
ADP L P275-*

P331:
LDA YB P165
SBA L 41
TST L 4+16
ADP L P275-*
LDA Y P201$ PAREN COUNT
SBA L 1
STA Y P201
TST L 8
ADP L P276-*

P275:
LDA Y P256
SBP L *-P330$ READ NEXT CHARACTER

P332:
LDA Y P214
STA Y P213
LDB Y P256
STB Y P252
SBP L *-P259

P276:
LDA Y P256
TST L 8
ADP L 7
LDA Y P214
ADA L 1
STA Y P214
STA Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P256

LDA YB P165
SBA L 40$START OF NEXT RULE
TST L 8
SBP L *-P332
LDA Y P256
SBP L *-P276
$END OF SRE


P224:STB Y P03$ CHARACTER=(
LDA Y P256
TST L 8
ADP L 7

LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P256

LDA YB P165$ READ NEXT CHARACTER
SBA L 47$ TES FOR DLIST
TST L 4+16
ADP L 2
SRE Y P239
LDP Y P03
LDA YB P165
SBA L 42$ TEST FOR ASTERISK
TST L 8
SRE Y P233$ COMPOSITE LISTING
LDP Y P03
$ END OF SRE


$ DUMMY SRE FOR DLIST
P232:STB Y P03+2$ DLIST
LDA L 0
LDP Y P04
$ END OF SRE



$ ASTERISK . COMPOSITE LISTING
P230:STB Y P390$ ASTERISK

LDA Y P256
STA Y P351
LDB Y P214
STB Y P352

LDB Y P202
STB Y P399

LDB Y P202
LDA YB 1
STA Y P202$NEXT WORD OF INPUT SET-UP.

P235:LDA Y P256
TST L 8
ADP L 7

LDA Y P214
ADA L 1
STA Y P214
STA Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P256

LDA YB P165$ READ NEXT CHARACTER
SBA L 32
TST L 8
SBP L *-P235$ READ NEXT CHARACTER

LDA YB P165
SBA L 41
TST L 20
ADP L P359-*
LDA Y P360
TST L 8
LDP Y P04

LDA L 0
STA Y P360
LDA Y P351
STA Y P256
LDB Y P352
STB Y P214
LDA Y P399
STA Y P202
LDP Y P390
P359:

STB Y P254
STB Y P17
LDA Y P214
STA Y P06
LDB Y P202
STB Y P22$ CHAIN PTR SET
SRE Y P150$ TEST FOR EQUALITY
TST L 4+16
ADP L P234-*$ EQUAL

P335:
LDA Y P256
TST L 8
ADP L 7

LDB Y P214
ADB L 1
STB Y P170
STB Y P214
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P256

LDA YB P165
SBA L 32
TST L 8
SBP L *-P235
SBP L *-P335

P234:
LDB Y P62
LDA Y P202
STA YB P62
ADB L 1
STB Y P62
$ SEGMENT TABLE INCREMENTED.
LDB Y P25
LDA YB 1
STA Y P202
LDA Y P24
STA Y P214
$ NEXT WORD IN INPUT STRING AET-UP

P281:
LDA Y P256
TST L 8
ADP L 7

LDA Y P214
ADA L 1
STA Y P214
STA Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1

LDA Y P214
STB Y P256
LDA YB P165
SBA L 41
TST L 4+16
SBP L *-P281
LDA L 1
LDP Y P390$ PARSING RULE FAILS CORRECTIO SUCCEEDS THIS FAR


$ END OF SRE


P223:STB Y P03+3$DELETE N WORDS
LDA Y P210
SBA L 48
STA Y P210$ INTEGER N


LDA Y P361
TST L 20
ADP L P362-*
LDA Y P202
LDB Y P62$ INPUT SEGMENTATION TABLE.
STA YB P62
STB Y P62
ADB L 1
STB Y P62
P362:
LDA L 0
STA Y P361
LDA Y P210
TST L 8
LDP Y P03+3

P53:
LDB Y P202
LDA YB 0
SBA L 32$ TEST FOR END OF WORD
TST L 4+16
ADP L P249-*
LDA Y P210
SBA L 1
STA Y P210
TST L 8
LDP Y P03+3$ NTH WORD PASSED

P51:
STB Y P52
LDA YB 1
STA Y P202
SBP L *-P53$READ NEXT CHARACTER

P249:
LDA YB 0
SBA L 46$TEST FOR END OF TEXT
TST L 4+16
SBP L *-P51$ READ NEXT CHARACTER
LDA Y P210
SBA L 1
TST L 4+16
ADP L 2
LDA L 0
LDP Y P04

LDB Y P52
STB Y P202
LDP Y P03+3
LDP Y P03+3$ NTH WORD PASSED


$ TYPE '0'
P222:STB Y P03+2
LDA L 0
STA Y P328$FLAG
STA Y P216
LDB Y P202
STB Y P346

LDB Y P62
LDA Y P202
STA YB P62
ADB L 1
STB Y P62

P243:
LDA Y P346
STA Y P202
LDA Y P216
ADA L 48
STA Y P210
LDA L 1
STA Y P361
SRE Y P242
$READ N WORDS

LDA Y P216
TST L 20
ADP L P320-*

LDA Y P202
STA Y P22
ADP L P327-*

P320:
LDB Y P202
LDA YB 1
STA Y P22
P327:
LDB Y P22

LDA YB 0
SBA L 46
TST L 8
LDP Y P03+2

LDA Y P328
TST L 4+16
ADP L P329-*
LDA L 1
STA Y P328

P64:
LDA Y P256
TST L 8
ADP L 7

LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P256
LDA YB P165
SBA L 40
TST L 4+16
ADP L P339-*
LDA L 1
STA Y P360
SRE Y P338
TST L 8
SBP L *-P320
LDP Y P03+2


P339:
LDA YB P165
SBA L 32
TST L 8
SBP L *-P64
LDA YB P165
SBA L 41
TST L 4+16
ADP L P113-*
LDA L 1
LDP Y P04// LOGIC DUUBIOUS?
P113:
LDB Y P256
STB Y P17
LDA Y P214
STA Y P06

P329:
LDA Y P214
STA Y P06
LDB Y P256
STB Y P17
LDB Y P62
LDA Y P22
STA YB P62
SRE Y P150$ EQUALITY
TST L 4+16
ADP L P349-*

LDA Y P216
ADA L 1
STA Y P216
SBP L *-P243

P349:
 LDB Y P62
 ADB L 1
STB Y P62
LDA Y P17
STA Y P256

LDA Y P24
STA Y P214

LDA Y P25
STA Y P202


LDA L 1
LDP Y P03+2$END OF SRE

P55:STB Y P56$ SRE FOR MATCHING CONTG STRINGS!

LDA Y P256
STA Y P270
LDA Y P214
STA Y P295

LDA L 0
STA Y P59$ TOTAL
STA Y P49$ COUNT.

P58:
LDB Y P256
LDA YB P165
SBA L 61
TST L 8
ADP L P66-*

LDA YB P165
SBA L 41
TST L 8
ADP L P47-*

LDA YB P165
ADA Y P59
STA Y P59
LDA Y P49
ADA L 1
STA Y P49

P57:
LDA Y P256
TST L 8
ADP L 7

LDA Y P214
ADA L 1
STA Y P214
STA Y P170
SRE Y P169$ UNPACK.
LDA L 0
ADP L 1
LDA L 1
STA Y P256
SBP L *-P58

P47:
LDB L 0
LDA Y P59
DIV Y P49
STA Y P59
LDB Y P59
ADB L 250
LDA YB P11-250
P200:
ADA L 1
STA Y P174
LDB L 0
STB Y P100
STA Y P101
LDA Y P295
STA Y P122
LDA Y P270
STA Y P105

SRE Y P102$ MATCH.

TST L 8
ADP L P77-*
LDA Y P174
SBA L 1
STA Y P213
LDP L P226$ PROCESS NEW WORD THRO' M/C.

P77:
LDB Y P174
LDA YB 0
SBA L 64
TST L 4+16
ADP L P308-*
SBB L 1
LDA YB 0
TST L 8
LDP L P188

SBP L *-P200

P308:
LDB Y P174
ADB L 1
STB Y P174
SBP L *-P77

P66:
LDA Y P256
TST L 8
ADP L P303-*

LDA Y P214
ADA L 1
STA Y P295
LDA L 0
STA Y P270
SBP L *-P57

P303:
ADA L 1
STA Y P270
LDA Y P214
STA Y P295
SBP L *-P57

$ END OF SRE.




P251:STB Y P04$ MEMORY & CONTEXT FREE REPLIES
$ADP L P241-*$CONTIN. CODE BUG IN LOOP  SORRY MREMORY CUSES LOOP
$TO FIND THIS ERROR REMOVE THIS LAST LINE OF CODE.
LDA Y P115+1$ FIRST IN
TST L 8
ADP L P241-*$ USE CONTEXT FREE DEVICE
STA Y P35
LDA Y P389$ MEMORY RULE STARTS HERE
SBA L 1
STA Y P214$ NORMAL ANALYSIS M/C WILL NOW WORK!
LDA L 1
STA Y P256
LDA Y P35
STA Y P202
LDB L 0
P296:
ADB L 1
LDA YB P115+1
STA YB P115
TST L 20
SBP L *-P296
LDB Y P115
SBB L 1
STB Y P115

SRE Y P312 $RESET SEGMENT TABLE
SRE Y P217
LDA Y P389
ADA L 5
STA Y P214
LDA L 1
STA Y P256
LDA Y P214
STA Y P170
SRE Y P169
LDB L 1
ADP L P392-*


P241:
  LDA   Y P61  $NO MEMORY IN USE SO RETURN STORAGE
  STA   Y P29  $BASE OF FREE STORE
  LDB   Y P299   $  +P139
ADB L 1
STB Y P170
SRE Y P169
LDB L 1
STB Y P256
P392:
LDA YB P165
SBA L 32
TST L 8
ADP L P41-*
LDA YB P165
STA Y P260
ADA L 1
ADP L P46-*
P42:
LDA Y P256
STA Y P254
LDB Y P170
STB Y P214
SRE Y P215$ ASSEMBLY SRE.
P41:
LDA L 0
STA Y P260
LDA L 1
P46:
STA YB P165
SRE Y P171
SBP L *-P42

$ END OF SRE.





$ ASSEMBLY RULE.

P283:STB Y P319$ASSEMBLY ULE.

LDB Y P214
STB Y P110$ MARKER £1
LDA Y P254
STA Y P111$ MARKER £2

LDB L 0
STB Y P262$ COUNT
P99:
LDA Y P254
TST L 8
ADP L 7

LDA Y P214
ADA L 1
STA Y P214
STA Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P254

LDA YB P165
SBA L 40
TST L 4+16
SBP L *-P99


LDA L 1
STA Y P262

P263:
LDA Y P260
TST L 8
ADP L P261-*

P264:
LDA Y P254
TST L 8
ADP L 7

LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169$ UNPACK
LDB L 0
ADP L 1
LDB L 1
STB Y P254

LDA YB P165
SBA L 40
TST L 4+16
ADP L 4
LDA Y P262
ADA L 1
STA Y P262$ INCREMENT COUNT.
SBP L *-P263

LDA YB P165
SBA L 41
TST L 4+16
ADP L P48-*
LDA Y P262
SBA L 1
STA Y P262
TST L 4+16
ADP L P48-*
LDA Y P260
SBA L 1
STA Y P260

P48:
LDA Y P262
ADA L 1
TST L 4+16
SBP L *-P264

$ RESET ASSEMBLY RULE COUNT

LDA L 0
STA Y P260
LDA Y P110  $MARKER £1
STA Y P170
STA Y P214
  SRE   Y P169  $UNPACK THE WORD CONTAINGIN THE COUNT AGAIN
LDB Y P111 $MARKER £2
STB Y P254
LDA L 1
STA YB P165
SRE Y P171
SRE Y P215$ SSEMBLY RULE.



P261:
LDB Y P254
STB Y P265
LDA Y P214
STA Y P266
SRE Y P267$ TEST FOR NEWKEY £ PRE!
LDA Y P02
STA Y P280
LDB Y P02
LDA L 13
STA YB 0
ADB L 1
LDA L 10
STA YB 0
ADB L 1
STA YB 0
ADB L 1
STB Y P02
$BUFFER LOCATION SET.
LDA L 50
STA Y P244
$MIN LINE LENGTH.
LDA L 0
STA Y P245
$ CHARACTER COUNT.
P298:
LDA Y P254
TST L 8
ADP L 7

LDB Y P214
ADB L 1
STB Y P214
STB Y P170
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P254

LDA YB P165
SBA L 48
TST L 4
ADP L P294-*

LDA YB P165
SBA L 57
TST L 16
ADP L P288-*

P293:
LDA YB P165
SBA L 48
STA Y P289
LDB Y P289
LDA YB P62+1
STA Y P291$ ENTRY
ADB L 1
LDA YB P62+1
TST L 8
ADP L P321-*
STA Y P290$EXIT
ADP L P292-*

P321:
LDA Y P333$ END OF TEXT.
STA Y P290$ EXIT.

$IGNORE LEADING SPACE
  LDA Y P291
SBA Y P290
TST L 8
SBP L *-P298
LDB Y P291
LDA YB 0
SBA L 32
TST L 8
ADP L P236-* $IGNORE INITIAL SPACE
P292:
LDA Y P291$ ENTRY
SBA Y P290$ EXIT
TST L 8
SBP L *-P298

LDB Y P291
LDA YB 0
SBA L 32
TST L 4+16
ADP L P246-*

LDA Y P245
SBA Y P244
TST L 4
ADP L P246-*

LDB Y P02
LDA L 13
STA YB 0
ADB L 1
LDA L 10
STA YB 0
ADB L 1
STB Y P02
LDA L 0
STA Y P245
ADP L P236-*

P246:
LDB Y P291
LDA YB 0
SBA L 46
TST L 8
SBP L *-P298
LDA YB 0
LDB Y P02
STA YB 0
ADB L 1
STB Y P02
LDB Y P245
ADB L 1$ INCREMENT LINE COUNT
STB Y P245


P236:
LDB Y P291
LDA YB 1
STA Y P291
SBP L *-P292


P294:
LDA YB P165
SBA L 32
TST L 8
ADP L P247-*
LDA YB P165
SBA L 41
TST L 4+16
SBP L *-P298

LDA L 46
LDB Y P02
STA YB 0
ADB L 1
LDA L 10
STA YB 0
ADB L 1
LDA L 13
STA YB 0
ADB L 1
STB Y P02
SRE Y P287
LDP L P348$ END OF CYCLE.


P247:
LDA Y P245
SBA Y P244
TST L 4
ADP L P288-*

LDB Y P02
LDA L 13
STA YB 0
ADB L 1
LDA L 10
STA YB 0
ADB L 1
STB Y P02
LDB Y P245
LDA L 0
STA Y P245



P288:
LDA YB P165
LDB Y P02
STA YB 0
ADB L 1
STB Y P02
LDB Y P245
ADB L 1
STB Y P245
SBP L *-P298

$ END OF SRE





P286:STB Y P03+1$ OUTPUT ASSEMBLED TEXT,

LDB L P120
LDA Y P280
STA ZB 1

LDA Y P02
SBA Y P280
STA ZB 2

EXT L 24
EXT L 40
EXT L 4

LDA Y P280
STA Y P02

LDP Y P03+1
$ END OF SRE

P285:STB Y P304$ EXCEPTIONS TO ASSEMBLY RULE.

P107:
LDB Y P265
LDA YB P165
SBA L 40
TST L 8
ADP L P104-*

LDA YB P165
SBA L 35$ 'N'
TST L 4+16
ADP L P365-*
LDP L P188

P104:
LDA Y P265
TST L 8
ADP L 7

LDB Y P266
ADB L 1
STB Y P266
STB Y P170
SRE Y P169
LDB L 0
ADP L 1
LDB L 1
STB Y P265
SBP L *-P107

P365:
LDA YB P165
SBA L 61
TST L 20
ADP L P367-*

LDB Y P254
STB Y P256
LDA Y P266
STA Y P214
SRE Y P366
P367:
LDP Y P304


P103:STB Y P109$ MATCHING OF CONTIGUOUS STRINGS!

LDA Y P101
STA Y P170
SRE Y P169
LDA Y P165
STA Y P69
LDA Y P166
STA Y P69+1

LDA Y P122
STA Y P170
SRE Y P169
LDA Y P165
STA Y P121
LDA Y P166
STA Y P121+1
P128:
LDB Y P100
LDA YB P69
LDB Y P105
SBA YB P121
TST L 4+16
ADP L P175-*

LDB Y P100
LDA YB P69
SBA L 32
TST L 8
ADP L 4

LDA YB P69
SBA L 41
TST L 4+16
ADP L P123-*

LDA L 1
LDP Y P109

P175:

LDB Y P100
LDA YB P69
SBA L 32
TST L 4+16
ADP L P125-*
LDB Y P105
LDA YB P121
SBA L 41
TST L 8
ADP L P306-*
P125:
LDA L 0
LDP Y P109$ FAIL

P306:
LDA L 1
LDP Y P109$ MATCH!

P123:
LDB L 0
STB Y P126
P129:
LDA YB P100
TST L 8
ADP L P127-*

LDA YB P101
ADA L 1
STA YB P101
STA Y P170
SRE Y P169$ UNPACK
LDA Y P126
MLS L 2
STA Y P305
LDB Y P305
LDA Y P165
STA YB P69
LDA Y P166
STA YB P69+1
LDA L 0
ADP L 1
P127:
LDA L 1
LDB Y P126
STA YB P100
TST L 32
ADP L 1
SBP L *-P128
LDB L 1
STB Y P126
SBP L *-P129

$ END OF SRE.


P137=P0
P0=2048-4
+P137,+0,+0,+0




ENDPROGRAM

***V

***F

<! Halt !>(NOTHING ((0)
(WHAT THINGS ARE IMPORTANT TO YOU)
(PLEASE TELL ME MORE ABOUT YOURSELF)
(PLEASE TELL ME MORE ABOUT YOUR PROBLEMS)(£)))
(TWIT 2 (=KNICKERS))
(FUCK 2 (=KNICKERS))
(BUM 2 (=KNICKERS))
(COW 2 (=KNICKERS))
(IMBECILE 2 (=KNICKERS))
(FOOL 2 (=KNICKERS))
(GET 10 ((0 GET LOST 0) (6)) ((0) (=NOTHING)))
(GOODBYE 52 ((0) (GOODBYE)))
(CHEERIO 52 (=GOODBYE))
(KNICKERS 1 ((0)
(SAME TO YOU MATE)
(YOUR CONVERSATIONAL POWERS ARE RATHER LIMITED)
(IF YOU HAVE NOTHING BETTER TO SAY GET LOST)
(ANY MORE BAD LANGUAGE AND I WILL LEAVE)
(6)))
(ELIZA ((0)
(WE ARE HERE TO TALK ABOUT YOUR PROBLEMS NOT MINE)
(KINDLY STICK TO THE POINT WHICH IS YOU)
(YOU SEEM TO PREFER TALKING ABOUT ME RATHER THAN YOURSELF)
(THIS LINE OF CONVERSATION IS GETTING US NOWHERE)
(PLEASE TELL ME MORE ABOUT YOURSELF)))
(YOUR'RE = I'AM ((0 I'AM 0)
(WHAT MAKES YOU THINK I AM 3)
(DOES IT PLEASE YOU TO BELIEVE I AM 3)
(DO YOU SOMETIMES WISH YOU WERE 3)
(PERHAPS YOU WOULD LIKE TO BE 3)))
(I'M = YOU'RE ((0 YOU'RE 0 (*SAD UNHAPPY DEPRESSED SICK ) 0)
(I AM SORRY TO HEAR YOU ARE 4)
(DO YOU THINK COMING HERE WILL HELP YOU NOT TO BE 4)
(I AM SURE IT IS NOT PLEASANT TO BE 4)
(CAN YOU EXPLAIN WHAT MADE YOU 4) )
(0 YOU'RE 0 (*HAPPY ELATED GLAD BETTER ) 0)
 (HOW HAVE I HELPED YOU TO BE 4)
(HAS YOUR TREATMENT MADE YOU 4)
(WHAT MAKES YOU 4 JUST NOW)
(CAN YOU EXPLAIN WHY YOU ARE SUDDENLY 4) ) )

(SORRY ((0) (PLEASE DON'T APOLOGIZE)
(APOLOGIES ARE NOT NECESSARY) (WHAT FEELINGS
 DO YOU HAVE WHEN YOU APOLOGIZE) (I'VE TOLD YOU
THAT APOLOGIES ARE NOT REQUIRED)))
(DONT = DON'T )
(WONT = WON'T )
(REMEMBER 5
((0 YOU REMEMBER 0) (DO YOU OFTEN THINK OF 4)
(DOES THINKING OF 4 BRING ANYTHING ELSE TO MIND)
(WHAT ELSE DO YOU REMEMBER)
(WHY DO YOU REMEMBER 4 JUST NOW)
(WHAT IN THE PRESENT SITUATION REMINDS YOU OF 4)
(WHAT IS THE CONNECTION BETWEEN ME AND 4))
((0 DO I REMEMBER 0) (DID YOU THINK I WOULD FORGET 5)
(WHY DO YOU THINK I SHOULD RECALL 5 NOW)
(WHAT ABOUT 5) (=WHAT) (YOU MENTIONED 5))
((0) (£)))
(IF 3 ((0 IF 0) (DO YOU THINK ITS LIKELY THAT 3) (DO YOU WISH THAT 3)
(WHAT DO YOU THINK ABOUT 3) (REALLY, 2 3)))
(DREAMT 4 ((0 YOU DREAMT 0)
(REALLY, 4) (HAVE YOU EVER IMAGINED 4 WHILE YOU WERE AWAKE)
(HAVE YOU DREAMT 4 BEFORE) (=DREAM)) ((0) (£)))
(DREAMED = DREAMT 4 (=DREAMT))
(DREAM 3 ((0) (WHAT DOES THAT DREAM SUGGEST TO YOU)
(DO YOU DREAM OFTEN) (WHAT PERSONS APPEAR IN YOUR DREAMS)
(DON'T YOU BELIEVE THAT DREAM HAS SOMETHING TO DO WITH
 YOUR PROBLEM) (£)))
(DREAMS = DREAM 3 (=DREAM))
(HOW (=WHAT))
(WHEN (=WHAT))
(ALIKE 10 (=DIT))
(SAME 10 (=DIT))
(CERTAINLY (=YES))
(PERHAPS ((0) (YOU DON'T SEEM QUITE CERTAIN)
(WHY THE UNCERTAIN TONE)
(CAN'T YOU BE MORE POSITIVE)
(YOU AREN'T SURE) (DON'T YOU KNOW)))
(MAYBE (=PERHAPS))
(NAME 15 ((0) (I AM NOT INTERESTED IN NAMES)
(I'VE TOLD YOU BEFORE, I DON'T CARE ABOUT NAMES -
PLEASE CONTINUE)) )
(DEUTSCH (=XFREMD))
(FRANCAIS (=XFREMD))
(ITALIANO (=XFREMD))
(ESPANOL (=XFREMD))
(XFREMD ((0) (I AM SORRY, I SPEAK ONLY ENGLISH)))
(HELLO ((0) (HOW DO YOU DO.  PLEASE STATE YOUR PROBLEM)))
(COMPUTER 50 ((0) (DO COMPUTERS WORRY YOU)
(WHY DO YOU MENTION COMPUTERS) (WHAT DO YOU THINK MACHINES
 HAVE TO DO WITH YOUR PROBLEM) (DON'T YOU THINK COMPUTERS CAN
 HELP PEOPLE) (WHAT ABOUT MACHINES WORRIES YOU) (WHAT
 DO YOU THINK ABOUT MACHINES)))
(MACHINE 50 (=COMPUTER))
(MACHINES 50 (=COMPUTER))
(COMPUTERS 50 (=COMPUTER))
(AM = ARE ((0 are you 0) (DO YOU BELIEVE YOU ARE 4)
(WOULD YOU WANT TO BE 4) (YOU WISH I WOULD TELL YOU YOU ARE 4)
(WHAT WOULD IT MEAN IF YOU WERE 4) (=WHAT))
((0) (WHY DO YOU SAY 'AM') (I DON'T UNDERSTAND THAT)))
(ARE ((0 ARE I 0)
 (WHY ARE YOU INTERESTED IN WHETHER I AM 4 OR NOT)
(WOULD YOU PREFER IF I WEREN'T 4) (PERHAPS I AM 4 IN YOUR
 IMAGINATION) (DO YOU SOMETIMES THINK I AM 4) (=WHAT))
((0 ARE NOT 0) (WHAT PROMPTS YOU TO SAY THAT)
(WHY DO YOU THINK NOT 4)
(HOW DID YOU REACH THIS CONCLUSION)
(NOT 4 ARE YOU SURE))
((0 I ARE 0)
 (WHAT MAKES YOU THINK I AM 4)
(DOES IT PLEASE YOU TO BELIEVE I AM 4)
(DO YOU SOMETIMES WISH YOU WERE 4)
(PERHAPS YOU WOULD LIKE TO BE 4)
)
((0 ARE 0) (DID YOU THINK THEY MIGHT NOT BE 3)
(WOULD YOU LIKE IT IF THEY WERE NOT 3) (WHAT IF THEY WERE NOT 3)
(POSSIBLY THEY ARE 3)) )
(YOUR = MY ((0 MY 0) (WHY ARE YOU CONCERNED OVER MY 3)
(WHAT ABOUT YOUR OWN 3) (ARE YOU WORRIED ABOUT SOMEONE ELSES 3)
(REALLY, MY 3)))
(WAS 2 ((0 WAS YOU 0 )
 (WHAT IF YOU WERE 4) (DO YOU THINK YOU WERE 4)
(WERE YOU 4) (WHAT WOULD IT MEAN IF YOU WERE 4)
(WHAT DOES ' 4 ' SUGGEST TO YOU) (=WHAT))
((0 YOU WAS 0)
 (WERE YOU REALLY) (WHY DO YOU TELL ME YOU WERE 4 NOW)
(PERHAPS I ALREADY KNEW YOU WERE 4) )
((0 WAS I 0) (WOULD YOU LIKE TO BELIEVE I WAS 4)
(WHAT SUGGESTS THAT I WAS 4)
(WHAT DO YOU THINK) (PERHAPS I WAS 4)
(WHAT IF I HAD BEEN 4))
((0) (£)) )
(WERE = WAS (=WAS))
(ME = YOU )
(MYSELF = YOURSELF )
(YOURSELF = MYSELF )
(I = YOU
((0 YOU (* WANT NEED ) 0) (WHAT WOULD IT MEAN TO YOU IF YOU GOT 4)
(WHY DO YOU WANT 4) (SUPPOSE YOU GOT 4 SOON) (WHAT
 IF YOU NEVER GOT 4) (WHAT WOULD GETTING 4 MEAN TO
 YOU) (WHAT DOES WANTING 4 HAVE TO DO WITH THIS DISCUSSION))
((0 YOU ARE 0 (*SAD UNHAPPY DEPRESSED SICK ) 0)
(I AM SORRY TO HEAR YOU ARE 5) (DO YOU THINK COMING HERE
 WILL HELP YOU NOT TO BE 5) (I'M SURE ITS NOT PLEASANT TO
BE 5) (CAN YOU EXPLAIN WHAT MADE YOU 5))
((0 YOU ARE 0 (*HAPPY ELATED GLAD BETTER ) 0)
(HOW HAVE I HELPED YOU TO BE 5)
(HAS YOUR TREATMENT MADE YOU 5) (WHAT MAKES YOU 5 JUST
 NOW) (CAN YOU EXPLAIN WHY YOU ARE SUDDENLY 5))
((0 YOU WAS 0) (=WAS))
((0 YOU (* WISH FEEL THINK BELIEVE ) YOU 0)
(DO YOU REALLY THINK SO)
(BUT YOU ARE
NOT SURE YOU 5) (DO YOU REALLY DOUBT YOU 5))
((0 YOU 0 (*WISH FEEL THINK BELIEVE) 0 I 0) (=YOU))
((0 YOU ARE) (PLEASE ELABORATE) (TELL ME MORE))
((0 YOU ARE 0)
 (IS IT BECAUSE YOU ARE 4 THAT YOU CAME TO ME)
(HOW LONG HAVE YOU BEEN 4)
(DO YOU BELIEVE IT NORMAL TO BE 4)
(DO YOU ENJOY BEING 4))
((0 YOU (* CAN'T CANNOT ) 0) (HOW DO YOU KNOW YOU CAN'T 5)
(HAVE YOU TRIED)
(PERHAPS YOU COULD 5 NOW)
(DO YOU REALLY WANT TO BE ABLE TO 5))
((0 YOU DON'T 0) (DON'T YOU  REALLY 4)(WHY DON'T YOU 4)
(DO YOU WISH TO BE ABLE TO 4) (DOES THAT TROUBLE YOU))
((0 YOU FEEL 0) (TELL ME MORE ABOUT SUCH FEELINGS)
(DO YOU OFTEN FEEL 4)
(DO YOU ENJOY FEELING 4)
(DOES FEELING 4 REMIND YOU OF ANYTHING))
((0 YOU 0 I 0) (PERHAPS IN YOUR IMAGINATION WE3EACH OTHER)
(DO YOU WISH TO3ME)
(YOU SEEM TO NEED TO3ME)
(DO YOU3ANYONE ELSE))
((0) (WHY DO YOU SAY THAT)
(CAN YOU ELABORATE ON THAT) (DID YOU SAY THAT FOR SOME SPECIAL REASON)
(THAT'S INTERESTING)))
(YOU = I
((0 I 0 YOU) (WHY DO YOU THINK I 3 YOU)
(YOU LIKE THINKING I 3 YOU DONT YOU)
(WHAT MAKES YOU THINK I 3 YOU))
((0 I 0) (WE WERE DISCUSSING YOU NOT ME)
(PERHAPS I 3)
(WHAT ARE YOUR FEELINGS NOW)))
(YES ((0) (YOU SEEM QUITE POSITIVE) (YOU ARE SURE)
(I SEE)(TELL ME MORE) (I UNDERSTAND)))
(NO ((0) (ARE YOU SAYING 'NO' JUST TO BE NEGATIVE)
(YOU ARE BEING NEGATIVE) (PLEASE EXPLAIN FURTHER)
(WHY NOT) (WHY 'NO')))
(MY = YOUR 2 ((0 YOUR 0 (*FAMILY MOTHER FATHER MUM DAD
SISTER BROTHER DAUGHTER SON WIFE HUSBAND ) 0)
(TELL ME MORE ABOUT YOUR FAMILY) ( WHO ELSE IN YOUR FAMILY
 5) (YOUR 4) (WHAT ELSE COMES TO MIND WHEN YOU THINK OF
 YOUR 4))
((0 YOUR 0) (YOUR 3) (WHY DO YOU SAY YOUR 3)
(TELL ME ABOUT SOMETHING ELSE BELONGING TO YOU)
(IS IT
IMPORTANT TO YOU THAT 2 3)))
(CANT = CAN'T )
(CAN ((0 CAN I 0) (YOU BELIEVE I CAN 4 DON'T YOU) (=WHAT)
(YOU WANT ME TO BE ABLE TO 4) (PERHAPS YOU WOULD LIKE TO BE
 ABLE TO 4 YOURSELF)) ((0 CAN YOU 0) (WHETHER OR NOT YOU CAN 4
 DEPENDS ON YOU MORE THAN ON ME) (DO YOU WANT TO BE ABLE TO 4)
(PERHAPS YOU DON'T WANT TO 4) (=WHAT)))
(WHAT ((0) (WHY DO YOU ASK) (DOES THAT QUESTION INTEREST YOU)
(WHAT IS IT YOU REALLY WANT TO KNOW)
(ARE SUCH QUESTIONS MUCH ON YOUR MIND)
(WHAT ANSWER WOULD PLEASE YOU MOST)
(WHAT DO YOU THINK) (WHAT COMES TO YOUR MIND WHEN YOU ASK THAT)
(HAVE YOU ASKED SUCH QUESTIONS BEFORE)
(HAVE YOU ASKED ANYONE ELSE)))
(BECAUSE ((0) (IS THAT THE REAL REASON) (DON'T ANY OTHER REASONS
 COME TO MIND) (DOES THAT SEEM TO EXPLAIN ANYTHING ELSE)
(WHAT OTHER REASONS MIGHT THERE BE)))
(WHY ((0 WHY DON'T I 0) (DO YOU BELIEVE I COULDN'T 5) (PERHAPS I
 WILL 5 IN GOOD TIME) (SHOULD YOU 5 YOURSELF) (YOU REALLY WANT ME TO 5)
(=WHAT))
((0 WHY CAN'T YOU 0) (DO YOU THINK YOU SHOULD BE ABLE TO 5)
(DO YOU WANT TO BE ABLE TO 5) (DO YOU BELIEVE THIS WILL HELP YOU
 TO 5) (HAVE YOU ANY IDEA WHY YOU CAN'T 5) (=WHAT))
(=WHAT))
(EVERYONE 2 ((0 EVERYONE 0) (REALLY 2) (SURELY NOT 2) (=BLAH)))
(NOBODY 2 ((0 NOBODY 0) (REALLY 2) (SURELY NOT 2) (=BLAH)))
(NOONE 2 ((0 NOONE 0) (REALLY 2) (SURELY NOT 2) (=BLAH)))
(BLAH 2 ((0) (CAN YOU THINK OF ANY ONE IN PARTICULAR)
(WHO FOR EXAMPLE )
(YOU ARE THINKING OF A SPECIAL PERSON)
(WHO MAY I ASK)
(SOMEONE SPECIAL PERHAPS)
(YOU HAVE A PARTICULAR PERSON IN HAVEN'T YOU)
(WHO DO YOU THINK YOU ARE TALKING ABOUT)))
(ALWAYS 1 ((0) (CAN YOU THINK OF A SPECIFIC EXAMPLE) (WHEN)
(WHAT INCIDENT ARE YOU THINKING OF) (REALLY, ALWAYS)))
(LIKE 10 ((0 (*AM IS ARE WAS ) 0 LIKE 0) (=DIT))
((0) (£)))
(DIT ((0) (IN WHAT WAY) (WHAT RESEMBLANCE DO YOU SEE)
(WHAT DOES THAT SIMILARITY SUGGEST TO YOU)
(WHAT OTHER CONNECTIONS DO YOU SEE)
(WHAT DO YOU SUPPOSE THAT RESEMBLANCE MEANS)
(WHAT IS THE CONNECTION, DO YOU SUPPOSE)
(COULD THERE REALLY BE SOME CONNECTION)
(HOW)))^













***V

***F


<! Halt !>