









($PASS2/COMPOOL)

"DEFINE"AND(MACX,MACY)
'"BEGIN""VALUE""INTEGER"MACX;"CODE""BEGIN"6,+MACY"END""END"@;
"DEFINE"ADDRESSPART(MACZ)
'"BEGIN""VALUE""INTEGER"MACZ;"CODE""BEGIN"6,+8191"ENDEND"@;
"DEFINE"BOTTOM(MACU)
'"BEGIN""VALUE""INTEGER"MACU;"CODE""BEGIN"6,+127"ENDEND"@;
"DEFINE"LMIN'8191@;"DEFINE"LMAX'10391@;
"DEFINE"TOP(MACV)
'"BEGIN""VALUE""INTEGER"MACV;"CODE""BEGIN"14,8185"ENDEND"@;
"DEFINE"INTMARK'2304@;
"DEFINE"DATABASE'576@;"DEFINE"PROGBASE'448@;
"DEFINE"CONSTBASE'512@;"DEFINE"LIBRBASE'64@;"DEFINE"POOLBASE'384@;
"DEFINE"MODULEBASE'256@;
"DEFINE"AUXPOOL'6@;"DEFINE"AUXLIB'1@;"DEFINE"AUXPROG'7@;
"DEFINE"AUXDATA'9@;
"DEFINE"MODMARK'16@;"DEFINE"INDMARK'32@;
"DEFINE"STOP'"CODE""BEGIN"8,"SELF""END"@;
"DEFINE"OUT(OUT1,OUT2,OUT3,OUT4)
'"BEGIN"BASE:=OUT2;A1:=OUT3;A2:=OUT4;OUT0(OUT1)"END"@;
"DEFINE"OUTD(OUTD1,OUTD2,OUTD3)
'"BEGIN"B:=OUTD2;C:=OUTD3;OUTD0(OUTD1)"END"@;
"DEFINE"PUTOUT(PUTOUT1,PUTOUT2)
'"BEGIN"FU:=PUTOUT1;PUTOUT0(PUTOUT2)"END"@;
"DEFINE"GOUT(GOUT1,GOUT2)
'"BEGIN"GOUTAD:=GOUT2;GOUT0(GOUT1)"END"@;
"DEFINE"ROUT(ROUT1,ROUT2)
'"BEGIN"RELAD:=ROUT2;ROUT0(ROUT1)"END"@;
"DEFINE"ADD(ADD1,ADD2)
'"BEGIN"INCR:=ADD2;ADD0(ADD1)"END"@;
"DEFINE"SUBTRACT(SUBTRACT1,SUBTRACT2)
'ADDRESSPART(TL[SUBTRACT1]-TL[SUBTRACT2])@;
"DEFINE"HASHSIZE'7@;





















"LABEL"( "PROCEDURE" (3) COPY("VALUE INTEGER"); "PROCEDURE" (13) WAIT;"INTEGER""PROCEDURE"(64)PUNCH("VALUE""INTEGER");
"PROCEDURE"(8)WRITE("VALUE""INTEGER");"INTEGER""PROCEDURE"(65)QOUT("VALUE INTEGER");
"INTEGER" "PROCEDURE"(66)QIN("VALUE INTEGER");
"FIXED"(0,0)"PROCEDURE"(12)ABS("VALUE""FIXED"(0,0)));

"COMPOOL"("INTEGER"TI,TT,STAK,STAKBOT;
"INTEGER""ARRAY"POOLAREA,PROGAREA,NUMCONST,MAXSTORE,
STOREUSED,DATAREA,STORESIZE[0:15];
"INTEGER""ARRAY"TCONST,FCONST[1:20],IDS[0:9];
"INTEGER"VAL,FIRST,RR,L,I,J,INTEG,NOD,N,INCR,
WRONG,ACCPOS,TYREQ,TYPEACC,ANSWERT,NPAR,RER,OCTAL,TNEXT,PPP,
FAULT1,HERE,STOREQ,COUNT,LIT,NEXTID,OUTPAGE,
MODIFIER,DEPTH,DUMP,BASE,A1,A2,B,C,FU,GOUTAD,RELAD,CCSPEC,
INTEG1,FRAC,FRACOUNT,MSDIG,OPERATOR,HASH,TRIGGER;
(LIST)"INTEGER"SS,LT,LTT,ACC,EXL,PROGADD,
DATADD,ORCHAIN,CONSTADD,PROCD,JUMPOVER,MODULEADDR;
"INTEGER""ARRAY"CURRENT,DECLIST[0:HASHSIZE];
"INTEGER"PARS,DOCHAIN1,REPEAT,STEPF,NEXT,DEST,ANDCHAIN,PROCADD,
         BREG,PRESETADD,
DUP,DOCHAIN2,GRABLIST,ACCDUMP,ADUMP,QDUMP,PULLLIST;

"INTEGER ARRAY"<1>HD,TL[8192:LMAX];
"INTEGER"<1>PAGE,LINECOUNT,NEXTCONST;

"INTEGER""ARRAY"<1>PAGENAME[0:11],BCONST,CCONST[0:100];


"PROCEDURE"<1>FLT("VALUE""INTEGER");
"PROCEDURE"<1>AUXINFO("VALUE""INTEGER");
"PROCEDURE"<1>INITIALISE,CLEARUP;
"PROCEDURE"G1,G2,G3,G4,G5,G6,G7,G8,G9,G10,
G11,G12,G13,G14,G15,G16,G17,G18,G19,G20,
G21,G22,G23,G24,G25,GG,G26,G27,G28,G29,
G31,G32,G33,G34,G35,G36,G37,G38,G39,G40,
G41,G42,G43,G44,G45,G46,G47,G48,G49,G50,
G51,G52,G53,G54,
G61,G63,G64,G65,G66,G67,G68,G70,
G71,G72,G73,G74,G75,G76,G78,G79,G80,
G81,G82,G83,G84,G85,
G101,G102,G103,G104,G105,G106,

F1,F2,F3,F8,F10,
F11,F12,F14,F15,F16,F17,F18,F19,F20,
F21,F22,F23,F24,F25,F26,F27,F28,F29,F30,
F31,F32,F33,F40,
F41,F42,F43,F45,F46,F47,F48,F49,F50,
F51,F52,F53,F54,

R1,R2,R3,R4,R5,R7,R8,

D4,

C2,

PULL;















"PROCEDURE" RITE("VALUE INTEGER");
"PROCEDURE" STAK DUMP;
"PROCEDURE"<1> PRINTI ("VALUE INTEGER");
"PROCEDURE"<1> BLANKTAPE ("VALUE INTEGER");
"PROCEDURE"<1> OUTPAGENAME;
"PROCEDURE" ENTERFLT ("VALUE INTEGER");
"PROCEDURE" SETUP;
"INTEGER PROCEDURE" AUXC("VALUE INTEGER");
"INTEGER PROCEDURE" FORMBASE("VALUE INTEGER");
"INTEGER" LASTCODE,SUMCHECK;
"PROCEDURE" OUT0("VALUE INTEGER");
"DEFINE" DIAG(AAA)'@;
"INTEGER PROCEDURE" CONS("VALUE INTEGER","VALUE INTEGER");
"INTEGER PROCEDURE" UNPACK("VALUE INTEGER");
"INTEGER PROCEDURE" BRAC("VALUE INTEGER");
"PROCEDURE" ABSCOUT("VALUE INTEGER");
"PROCEDURE" COUT("VALUE INTEGER");
"PROCEDURE" OUTD0("VALUE INTEGER");
"INTEGER PROCEDURE" ADD0("VALUE INTEGER");
"INTEGER PROCEDURE" DUPL("VALUE INTEGER");
"PROCEDURE" SETBASE("VALUE INTEGER");
"INTEGER PROCEDURE" GRAB("VALUE INTEGER");
"INTEGER PROCEDURE" PUSH("VALUE INTEGER");
"INTEGER PROCEDURE" PACK("VALUE INTEGER");
"PROCEDURE"<1> DUMPCONSTS;
"INTEGER PROCEDURE"<1> FINDC("VALUE INTEGER");
"INTEGER PROCEDURE"<1> LITERAL("VALUE INTEGER");
"PROCEDURE" DECHAIN("VALUE INTEGER");
"INTEGER PROCEDURE" CHAIN("LOCATION INTEGER");
"PROCEDURE" PUTOUT0("VALUE INTEGER");
"PROCEDURE" ATOB;
"PROCEDURE" DUMPACC("VALUE INTEGER");
"PROCEDURE" GETACC("VALUE INTEGER");
"INTEGER PROCEDURE" GOUT0("VALUE INTEGER");
"PROCEDURE" ROUT0("VALUE INTEGER");
"INTEGER PROCEDURE" ADRESS("VALUE INTEGER");
"PROCEDURE"<1> CONRED("VALUE INTEGER","VALUE INTEGER");
"PROCEDURE" OUTOP("VALUE INTEGER","VALUE INTEGER");
"INTEGER PROCEDURE" EVALUATE("VALUE INTEGER","VALUE INTEGER");
"PROCEDURE" GF;
"PROCEDURE"<1> PARAMETERS;

(END OF SEGMENT 1 PROCEDURES)

"PROCEDURE" FIND;
"PROCEDURE"<1> SUBR("VALUE INTEGER");
"INTEGER PROCEDURE" SUBMOD("VALUE INTEGER","VALUE INTEGER"));
"HALT"
<! Halt !>