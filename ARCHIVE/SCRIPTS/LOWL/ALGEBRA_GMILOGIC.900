
 	:PRGST,<'ALGEBRA'>;
 	:NB,<'ALGEBRA PROGRAM  APR 9 1973'>;

 	:NB,<'Minor edits by Andrew Herbert 3 August 2015'>;
 	:NB,<'To make compatible with Elliott MASIR'>;


 	:NB,<'VARIABLES DESCRIBING THE CURRENT SYMBOL'>;
 	:NB,<'SET BY GETSYM ROUTINE'>;

 	:DCL,IDPT;
 	:DCL,IDLEN;
 	:DCL,ENDSPT;

 	:NB,<'MISCELLANEOUS TEMPORARIES'>;

 	:DCL,PARNM;
 	:DCL,TEMPT;
 	:DCL,DICTPT;
 	:DCL,VALUE;
 	:DCL,NUOPPT;
 	:DCL,TEMP;
 	:DCL,TEM1PT;
 	:DCL,TEM2PT;
 	:DCL,TYPE;
 	:DCL,COUNT;

 	:NB,<'POINTERS TO FSTACK, BSTACK AND TEMPSTACK'>;

 	:DCL,FFPT;
 	:DCL,INFFPT;
 	:DCL,VALNPT;
 	:DCL,VARNPT;
 	:DCL,OPCHPT;
 	:DCL,VARVPT;
 	:DCL,LFPT;
 	:DCL,INLFPT;
 	:DCL,TSFFPT;
 	:DCL,TSTKPT;
 	:DCL,TSMXPT;

 	:NB,<'MISCELLANEOUS'>;

 	:DCL,IBFPT;
 	:DCL,ISTABL;
 	:DCL,ISUNRY;
 	:DCL,VALCT;
 	:DCL,VARCT;
 	:DCL,SRCPT;
 	:DCL,DSTPT;
 	:DCL,LOTEMP;







 	:NB,<'FIRST ASK FOR VALUES TO BE DEFINED'>;

:LABEL,BEGIN; 	:LAL,0;
 	:STV,VARNPT,P;
 	:STV,OPCHPT,P;
 	:STV,INFFPT,X;
 	:LAV,FFPT,X;
 	:STV,TSTKPT,P;
 	:AAL,:OF,50*LNM,50;;
 	:STV,TSMXPT,P;
 	:STV,VALNPT,P;
 	:STV,FFPT,P;
 	:CAV,LFPT,A;
 	:GOGE,ERLSO,617,X,X;
:LABEL,ASKVAL; 	:LAV,VALNPT,X;
 	:STV,FFPT,X;
 	:LAL,0;
 	:FSTK;
 	:CLEAR,VALCT;
 	:QMESS,<'VALUES='>;
 	:GOSUB,MDLINE,X;
 	:GO,GIVEUP,606,X,C;
:LABEL,VALOOP; 	:GOSUB,TSTSYM,556;
 	:GO,ENVAL,15,X,C;
 	:GO,ERLCLA,604,X,C;
 	:GO,OK1,1,X,C;
 	:GO,ERLCLA,602,X,X;
:LABEL,OK1; 	:GOSUB,TESTCH,530;
 	:GO,OK2,2,X,C;
 	:GO,OK2,1,X,C;
 	:GO,ERLILL,602,X,X;
:LABEL,OK2; 	:LAV,FFPT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,FFPT,X;
 	:GOSUB,STKSYM,506;
 	:LAL,0;
 	:FSTK;
 	:BUMP,VALCT,1;
 	:GO,VALOOP,-17,X,X;

 	:NB,<'END OF LIST OF VALUES'>;

:LABEL,ENVAL; 	:LAV,VALCT,X;
 	:CAL,0;
 	:GOEQ,ERLINC,595,X,X;
 	:LAV,FFPT,X;
 	:STV,INFFPT,X;
 	:LAV,LFPT,X;
 	:STV,INLFPT,X;



 	:NB,<'MAIN SCANNING ROUTINE'>;
 	:NB,<'READS A LINE AND THEN GOES TO ...'>;
 	:NB,<'...ROUTINE TO ANALYSE STATEMENT'>;

:LABEL,NEXTLN;
        :QMESS,<': '>;
 	:GOSUB,MDLINE,X;
 	:GO,GIVEUP,580,X,C;
 	:GOSUB,GETSYM,421;
 	:GO,NEXTLN,-4,X,C;
 	:CLEAR,VARNPT;
 	:LAV,INFFPT,X;
 	:STV,FFPT,X;
 	:LAV,INLFPT,X;
 	:STV,LFPT,X;
 	:CLEAR,ISTABL;
 	:LCI,IDPT,X;
 	:CCL,<'O'>;
 	:GONE,GL1,4,X,X;
 	:LBV,IDPT;
 	:LCM,:OF,LCH,1;;
 	:CCL,<'P'>;
 	:GOEQ,OP,13,X,X;
:LABEL,GL1; 	:LCI,IDPT,X;
 	:CCL,<'T'>;
 	:GONE,ERLSTA,569,X,X;
 	:BUMP,IDPT,:OF,LCH,1;;
 	:LCI,IDPT,X;
 	:CCL,<'R'>;
 	:GOEQ,TABTRY,116,X,X;
 	:LAL,1;
 	:STV,ISTABL,X;
 	:LCI,IDPT,X;
 	:CCL,<'A'>;
 	:GOEQ,TABTRY,111,X,X;
 	:GO,ERLSTA,559,X,X;



 	:NB,<'PROCESSING OF OPERATOR STATEMENT'>;

:LABEL,OP; 	:GOSUB,TSTSYM,502;
 	:GO,ERLINC,559,X,C;
 	:GO,ERLCLA,550,X,C;
 	:GO,OPOK,3,X,C;
 	:LAV,TYPE,X;
 	:CAL,2;
 	:GOGE,ERLCLA,546,X,X;
:LABEL,OPOK; 	:GOSUB,CHKEND,342;
 	:GO,ERLILL,548,X,C;
 	:LAV,FFPT,X;
 	:STV,NUOPPT,X;
 	:LAV,OPCHPT,X;
 	:FSTK;
 	:GOSUB,STKSYM,451;
:LABEL,FNUNB; 	:CLEAR,ISUNRY;
 	:QMESS,<'UNARY OR BINARY='>;
 	:GOSUB,MDLINE,X;
 	:GO,GIVEUP,534,X,C;
 	:GOSUB,GETSYM,375;
 	:GO,EHUNB,18,X,C;
 	:GOSUB,CHKEND,329;
 	:GO,EHUNB,16,X,C;
 	:LCI,IDPT,X;
 	:CCL,<'B'>;
 	:GONE,GL2,4,X,X;
 	:LBV,IDPT;
 	:LCM,:OF,LCH,1;;
 	:CCL,<'I'>;
 	:GOEQ,STKUNB,11,X,X;
:LABEL,GL2; 	:LAL,1;
 	:STV,ISUNRY,X;
 	:LCI,IDPT,X;
 	:CCL,<'U'>;
 	:GONE,EHUNB,4,X,X;
 	:LBV,IDPT;
 	:LCM,:OF,LCH,1;;
 	:CCL,<'N'>;
 	:GOEQ,STKUNB,2,X,X;
:LABEL,EHUNB; 	:MESS,<'EH$'>;
 	:GO,FNUNB,-26,X,X;

 	:NB,<'STACK UNARY OR BINARY MARKER AND FIND PRECEDENCE'>;

:LABEL,STKUNB; 	:LAV,ISUNRY,X;
 	:FSTK;
:LABEL,FNPREC; 	:QMESS,<'PRECEDENCE='>;
 	:GOSUB,MDLINE,X;
 	:GO,GIVEUP,507,X,C;
 	:GOSUB,GETSYM,348;
 	:GO,EHPREC,7,X,C;
 	:GOSUB,LOGNUM,538;
 	:GO,EHPREC,5,X,C;
 	:GOSUB,CHKEND,300;
 	:GO,EHPREC,3,X,C;
 	:LAV,VALUE,X;
 	:FSTK;
 	:GO,GTVALS,2,X,X;
:LABEL,EHPREC; 	:MESS,<'EH$'>;
 	:GO,FNPREC,-14,X,X;

 	:NB,<'NOW GO THROUGH ALL POSSIBLE VALUE COMBINATIONS'>;

:LABEL,GTVALS; 	:LAV,VALNPT,X;
 	:STV,TEM2PT,P;
 	:STV,TEM1PT,X;
:LABEL,REASK; 	:LAV,ISUNRY,X;
 	:CAL,0;
 	:GONE,UNOPT,3,X,X;
 	:LAV,TEM1PT,X;
 	:GOSUB,LOQLID,575;
 	:QMESS,<' '>;
:LABEL,UNOPT; 	:LAV,NUOPPT,X;
 	:AAL,:OF,LNM,1;;
 	:GOSUB,LOQLID,571;
 	:QMESS,<' '>;
 	:LAV,TEM2PT,X;
 	:GOSUB,LOQLID,568;
 	:QMESS,<'='>;
 	:GOSUB,MDLINE,X;
 	:GO,GIVEUP,478,X,C;
 	:GOSUB,TSTSYM,428;
 	:GO,EHVAL,2,X,C;
 	:GO,OKVAL,3,X,C;
 	:GO,EHVAL,0,X,C;
:LABEL,EHVAL; 	:MESS,<'EH$'>;
 	:GO,REASK,-21,X,X;

:LABEL,OKVAL; 	:GOSUB,CHKEND,269;
 	:GO,EHVAL,-4,X,C;
 	:LAV,VALUE,X;
 	:FSTK;
 	:LAI,TEM2PT,X;
 	:AAV,TEM2PT;
 	:AAL,:OF,LNM,1;;
 	:ALIGN;
 	:STV,TEM2PT,X;
 	:LAI,TEM2PT,X;
 	:CAL,0;
 	:GONE,REASK,-33,X,X;
 	:LAV,ISUNRY,X;
 	:CAL,0;
 	:GONE,ENDVLS,10,X,X;
 	:LAV,VALNPT,X;
 	:STV,TEM2PT,X;
 	:LAI,TEM1PT,X;
 	:AAV,TEM1PT;
 	:AAL,:OF,LNM,1;;
 	:ALIGN;
 	:STV,TEM1PT,X;
 	:LAI,TEM1PT,X;
 	:CAL,0;
 	:GONE,REASK,-46,X,X;

 	:NB,<'SUCCESSFUL DEFINITION. NOW ADD OPERATOR TO CHAIN'>;

:LABEL,ENDVLS; 	:LAV,FFPT,X;
 	:STV,INFFPT,X;
 	:LAV,NUOPPT,X;
 	:STV,OPCHPT,X;
 	:GO,NEXTLN,-140,X,X;



 	:NB,<'PROCESSING OF TABLE AND TRY STATEMENTS'>;
 	:NB,<'FIRST CONVERT EXPRESSION TO POLISH POSTFIX'>;
 	:NB,<'ALL VARIABLE NAMES ARE STACKED END TO END'>;
 	:NB,<'POLISH STRING IS BUILT UP ON BSTACK'>;

:LABEL,TABTRY; 	:LAV,TSTKPT,X;
 	:STV,TSFFPT,X;
 	:LAV,FFPT,X;
 	:STV,VARNPT,X;
 	:LAL,0;
 	:FSTK;
 	:CLEAR,VARCT;


 	:NB,<'STATE 1 -- EXPECTING OPERAND'>;

:LABEL,OPRAND; 	:GOSUB,TSTSYM,385;
 	:GO,ERLINC,442,X,C;
 	:GO,VAL,21,X,C;
 	:GO,NEW,6,X,C;
 	:GOADD,TYPE;
 	:GO,ERLWB,446,X,T;
 	:GO,STKOP,23,X,T;
 	:GO,LPAR,21,X,T;
 	:GO,ERLPAR,439,X,T;
 	:GO,VAR,9,X,T;

 	:NB,<'NEW VARIABLE'>;

:LABEL,NEW; 	:LAV,VARCT,X;
 	:STV,VALUE,X;
 	:BUMP,VARCT,1;
 	:LAV,FFPT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,FFPT,X;
 	:GOSUB,STKSYM,331;
 	:LAL,0;
 	:FSTK;

 	:NB,<'EXISTING VARIABLE -- ADD TO POLISH STRING'>;

:LABEL,VAR; 	:LAL,0;
 	:BSTK;
 	:LAV,VALUE,X;
 	:BSTK;
 	:GO,OPRATE,13,X,X;

 	:NB,<'VALUE -- ADD TO POLISH STRING'>;

:LABEL,VAL; 	:LAL,1;
 	:BSTK;
 	:LAV,VALUE,X;
 	:BSTK;
 	:GO,OPRATE,8,X,X;

 	:NB,<'LEFT PARENTHESIS -- ADD MARKER TO TEMPSTACK'>;

:LABEL,LPAR; 	:CLEAR,DICTPT;

 	:NB,<'UNARY OPERATOR -- ADD TO TEMPSTACK'>;

:LABEL,STKOP; 	:LAV,DICTPT,X;
 	:STI,TSFFPT,X;
 	:BUMP,TSFFPT,:OF,LNM,1;;
 	:LAV,TSFFPT,X;
 	:CAV,TSMXPT,A;
 	:GOGE,ERLCMP,414,X,X;
 	:GO,OPRAND,-37,X,X;


 	:NB,<'STATE 2 -- EXPECTING OPERATOR'>;

:LABEL,OPRATE; 	:GOSUB,TSTSYM,348;
 	:GO,ENDST,27,X,C;
 	:GO,ERLVLO,418,X,C;
 	:GO,ERLVRO,415,X,C;
 	:GOADD,TYPE;
 	:GO,BINOP,8,X,T;
 	:GO,ERLWU,410,X,T;
 	:GO,ERLPAR,403,X,T;
 	:GO,RPAR,1,X,T;
 	:GO,ERLVRO,409,X,T;

 	:NB,<'RIGHT PAREN -- MOVE OPERATORS ...'>;
 	:NB,<'...FROM TEMPSTACK TO POLISH STRING'>;

:LABEL,RPAR; 	:GOSUB,GETTS,254;
 	:GO,ERLPAR,399,X,C;
 	:GO,OPRATE,-13,X,C;
 	:GO,RPAR,-4,X,X;

 	:NB,<'BINARY OPERATOR -- COMPARE PRECEDENCE WITH ...'>;
 	:NB,<'...TOP OF TEMPSTACK UNTIL GREATER'>;

:LABEL,BINOP; 	:GOSUB,GETTS,250;
 	:GO,STKOP,-23,X,C;
 	:GO,BIN1,10,X,C;
 	:LAI,TSFFPT,X;
 	:STV,TEM1PT,X;
 	:LBV,TEM1PT;
 	:LAM,:OF,LNM,1;;
 	:STV,LOTEMP,X;
 	:LBV,DICTPT;
 	:LAM,:OF,LNM,1;;
 	:CAV,LOTEMP,X;
 	:GOLE,BINOP,-12,X,X;

 	:NB,<'UNDO PREVIOUS GETTS'>;
 	:NB,<'ADD NEW OPERATOR TO TEMPSTACK'>;

 	:BUMP,LFPT,:OF,LNM+LNM,2;;
:LABEL,BIN1; 	:BUMP,TSFFPT,:OF,LNM,1;;
 	:GO,STKOP,-36,X,X;

 	:NB,<'END OF STATEMENT -- CLEAR TEMPSTACK'>;

:LABEL,ENDST; 	:GOSUB,GETTS,235;
 	:GO,FIN,2,X,C;
 	:GO,ERLPAR,379,X,C;
 	:GO,ENDST,-4,X,X;

 	:NB,<'ADD END MARKER TO POLISH STRING'>;

:LABEL,FIN; 	:LAL,3;
 	:BSTK;

 	:NB,<'NOW EVALUATE POLISH STRING'>;
 	:NB,<'CYCLE THROUGH ALL POSSIBLE VALUES OF VARIABLES'>;
 	:NB,<'USE TOP OF FSTACK TO STORE CURRENT SET OF VALUES'>;
 	:NB,<'FIRST SET ALL TO ZERO'>;

 	:LAV,FFPT,X;
 	:STV,VARVPT,X;
 	:CLEAR,COUNT;
:LABEL,STLOOP; 	:LAV,COUNT,X;
 	:CAV,VARCT,X;
 	:GOEQ,STL1,4,X,X;
 	:LAL,0;
 	:FSTK;
 	:BUMP,COUNT,1;
 	:GO,STLOOP,-7,X,X;

 	:NB,<'INITIALIZE VALUE TO -1 [ MEANING UNDEFINED]'>;

:LABEL,STL1; 	:LAL,0;
 	:SAL,1;
 	:STV,VALUE,X;
 	:LAV,ISTABL,X;
 	:CAL,0;
 	:GOEQ,EVAL,38,X,X;
 	:LAV,VARCT,X;
 	:CAL,0;
 	:GOEQ,ERLNOV,355,X,X;

 	:NB,<'PRINT OUT TABLE HEADING'>;
 	:RMESS,<'$'>;
 	:LAV,VARNPT,X;
 	:STV,TEM1PT,X;
:LABEL,HDLOOP; 	:LAI,TEM1PT,X;
 	:CAL,0;
 	:GOEQ,ENDHD,10,X,X;
 	:LAV,TEM1PT,X;
 	:GOSUB,LORLID,403;
 	:LAV,TEM1PT,X;
 	:GOSUB,PRTAB,218;
 	:LAI,TEM1PT,X;
 	:AAV,TEM1PT;
 	:AAL,:OF,LNM,1;;
 	:ALIGN;
 	:STV,TEM1PT,X;
 	:GO,HDLOOP,-13,X,X;

:LABEL,ENDHD; 	:RMESS,<': VALUE$'>;
 	:CLEAR,COUNT;
:LABEL,UNDLP; 	:RMESS,<'------  '>;
 	:BUMP,COUNT,1;
 	:LAV,COUNT,X;
 	:CAV,VARCT,X;
 	:GONE,UNDLP,-5,X,X;
 	:RMESS,<':------$'>;

 	:NB,<'NOW PRINT OUT LINE OF TABLE'>;

:LABEL,PTLINE; 	:LAV,VARVPT,X;
 	:STV,TEM1PT,X;
:LABEL,PLLOOP; 	:LAV,TEM1PT,X;
 	:CAV,FFPT,A;
 	:GOEQ,EVAL,6,X,X;
 	:LAI,TEM1PT,X;
 	:GOSUB,PRVAL,208;
 	:LAV,DICTPT,X;
 	:GOSUB,PRTAB,195;
 	:BUMP,TEM1PT,:OF,LNM,1;;
 	:GO,PLLOOP,-9,X,X;

 	:NB,<'EVALUATE POLISH STRING FOR CURRENT SET OF VALUES'>;

:LABEL,EVAL; 	:LAV,INLFPT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,TEM1PT,X;
:LABEL,EVLOOP; 	:LAI,TEM1PT,X;
 	:STV,TEMP,X;
 	:LAV,TEM1PT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,TEM1PT,X;
 	:GOADD,TEMP;
 	:GO,PLVAR,3,X,T;
 	:GO,PLVAL,9,X,T;
 	:GO,PLOP,16,X,T;
 	:GO,PLEND,45,X,T;

 	:NB,<'CASE OF VARIABLE'>;

:LABEL,PLVAR; 	:LAI,TEM1PT,X;
 	:MULTL,:OF,LNM,1;;
 	:AAV,VARVPT;
 	:STV,TEM2PT,X;
 	:LAI,TEM2PT,X;
 	:STV,TEMP,X;
 	:GO,PLV1,2,X,X;

 	:NB,<'CASE OF VALUE'>;

:LABEL,PLVAL; 	:LAI,TEM1PT,X;
 	:STV,TEMP,X;
:LABEL,PLV1; 	:LAV,TEM1PT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,TEM1PT,X;
:LABEL,PLV2; 	:LAV,TEMP,X;
 	:FSTK;
 	:GO,EVLOOP,-25,X,X;

 	:NB,<'CASE OF OPERATOR -- APPLY TO ITEMS AT STACK TOP'>;

:LABEL,PLOP; 	:LAI,TEM1PT,X;
 	:STV,TEM2PT,X;
 	:LAV,TEM1PT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,TEM1PT,X;
 	:GOSUB,GETEMP,135;
 	:LAV,TEMP,X;
 	:MULTL,:OF,LNM,1;;
 	:STV,TEMP,P;
 	:AAV,TEM2PT;
 	:AAL,:OF,LNM+LNM,2;;
 	:STV,DICTPT,X;
 	:LAI,TEM2PT,X;
 	:CAL,0;
 	:GONE,PLUNOP,12,X,X;

 	:NB,<'BINARY OPERATOR -- GET LEFT OPERAND'>;

 	:GOSUB,GETEMP,125;
 	:CLEAR,COUNT;
 	:LAV,TEMP,X;
 	:MULTL,:OF,LNM,1;;
 	:STV,TEMP,X;
:LABEL,MULLP; 	:LAV,DICTPT,X;
 	:AAV,TEMP;
 	:STV,DICTPT,X;
 	:BUMP,COUNT,1;
 	:LAV,COUNT,X;
 	:CAV,VALCT,X;
 	:GONE,MULLP,-7,X,X;
:LABEL,PLUNOP; 	:LAI,DICTPT,X;
 	:STV,TEMP,X;
 	:GO,PLV2,-33,X,X;

 	:NB,<'END OF EVALUATION'>;

:LABEL,PLEND; 	:GOSUB,GETEMP,110;
 	:LAV,ISTABL,X;
 	:CAL,0;
 	:GONE,TABVAL,11,X,X;
 	:LAV,VALUE,X;
 	:CAL,0;
 	:GOGE,VALSET,3,X,X;

 	:NB,<'FIRST SETTING OF EXPRESSION VALUE'>;

 	:LAV,TEMP,X;
 	:STV,VALUE,X;
 	:GO,NEXVAL,9,X,X;

 	:NB,<'COMPARE CURRENT VALUE WITH PREVIOUS ONE'>;

:LABEL,VALSET; 	:LAV,TEMP,X;
 	:CAV,VALUE,X;
 	:GOEQ,NEXVAL,6,X,X;
 	:RMESS,<'IS A CONTINGENCY$$'>;
 	:GO,NEXTLN,-346,X,X;

 	:NB,<'CASE OF TABLE -- PRINT VALUE'>;

:LABEL,TABVAL; 	:RMESS,<': '>;
 	:LAV,TEMP,X;
 	:GOSUB,PRVAL,128;
 	:RMESS,<'$'>;

 	:NB,<'PROCEED TO NEXT SET OF VALUES'>;

:LABEL,NEXVAL; 	:LAV,FFPT,X;
 	:STV,TEM1PT,X;
:LABEL,NXLOOP; 	:LAV,TEM1PT,X;
 	:CAV,VARVPT,A;
 	:GOEQ,COMPLT,16,X,X;
 	:LAV,TEM1PT,R;
 	:SAL,:OF,LNM,1;;
 	:STV,TEM1PT,X;
 	:LAI,TEM1PT,X;
 	:AAL,1;
 	:STI,TEM1PT,X;
 	:LAI,TEM1PT,X;
 	:CAV,VALCT,X;
 	:GONE,NX1,3,X,X;
 	:LAL,0;
 	:STI,TEM1PT,X;
 	:GO,NXLOOP,-15,X,X;
:LABEL,NX1; 	:LAV,ISTABL,X;
 	:CAL,0;
 	:GOEQ,EVAL,-97,X,X;
 	:GO,PTLINE,-109,X,X;

 	:NB,<'CASE WHERE EVALUATION IS COMPLETE'>;

:LABEL,COMPLT; 	:LAV,ISTABL,X;
 	:CAL,0;
 	:GONE,COMTAB,4,X,X;
 	:RMESS,<'= '>;
 	:LAV,VALUE,X;
 	:GOSUB,PRVAL,100;
 	:RMESS,<'$'>;
:LABEL,COMTAB; 	:RMESS,<'$'>;
 	:GO,NEXTLN,-380,X,X;








 	:SUBR,CHKEND,X,2;

 	:NB,<'HAS 2 EXITS AND NO PARAMETER'>;
 	:NB,<'CHECKS IF IBFPT IS AT THE END OF INPUT BUFFER'>;
 	:NB,<'IF NOT USES EXIT 1'>;
 	:NB,<'IF SO USES EXIT 2'>;

:LABEL,CREDO; 	:GOSUB,TESTCH,130;
 	:GO,CHKOK,2,X,C;
 	:GO,CREDO,-3,X,C;
 	:EXIT,1,CHKEND;
:LABEL,CHKOK; 	:EXIT,2,CHKEND;




 	:SUBR,CMPARE,PARNM,2;

 	:NB,<'HAS 2 EXITS AND A POINTER PARAMETER'>;
 	:NB,<'COMPARES CURRENT SYMBOL WITH LID ...'>;
 	:NB,<'...POINTED AT BY PARAMETER'>;
 	:NB,<'IF A MATCH USES EXIT 1, OHERWISE USES EXIT 2'>;

 	:LAV,IDLEN,X;
 	:CAI,PARNM,X;
 	:GOEQ,GL4,1,X,X;
 	:EXIT,2,CMPARE;
:LABEL,GL4; 	:LAV,IDPT,X;
 	:STV,TEMPT,X;
 	:BUMP,PARNM,:OF,LNM,1;;
:LABEL,CMLOOP; 	:LAV,TEMPT,X;
 	:CAV,ENDSPT,A;
 	:GONE,GL5,1,X,X;
 	:EXIT,1,CMPARE;
:LABEL,GL5; 	:LCI,TEMPT,X;
 	:CCI,PARNM;
 	:GOEQ,GL6,1,X,X;
 	:EXIT,2,CMPARE;
:LABEL,GL6; 	:BUMP,TEMPT,:OF,LCH,1;;
 	:BUMP,PARNM,:OF,LCH,1;;
 	:GO,CMLOOP,-11,X,X;




 	:SUBR,CMPLST,PARNM,2;

 	:NB,<'HAS 2 EXITS AND A POINTER PARAMETER'>;
 	:NB,<'PARAMATER POINTS AT LIST OF LIDS - END TO END'>;
 	:NB,<'LIST IS TERMINATED BY ZERO LENGTH'>;
 	:NB,<'CURRENT SYMBOL IS COMPARED WITH THE LIST'>;
 	:NB,<'USES EXIT 2 IF NO MATCH'>;
 	:NB,<'ELSE USES EXIT 1 AND SETS VALUE=0 IF MATCH ...'>;
 	:NB,<'...IS FIRST LID, =1 IF SECOND, ETC.'>;

 	:CLEAR,VALUE;
 	:LAV,PARNM,X;
 	:STV,DICTPT,X;
:LABEL,CTLOOP; 	:LAI,DICTPT,X;
 	:CAL,0;
 	:GONE,GL7,1,X,X;
 	:EXIT,2,CMPLST;
:LABEL,GL7; 	:LAV,DICTPT,X;
 	:GOSUB,CMPARE,-29;
 	:GO,GOTIT,7,X,C;
 	:BUMP,VALUE,1;
 	:LAI,DICTPT,X;
 	:AAV,DICTPT;
 	:AAL,:OF,LNM,1;;
 	:ALIGN;
 	:STV,DICTPT,X;
 	:GO,CTLOOP,-14,X,X;

:LABEL,GOTIT; 	:EXIT,1,CMPLST;




 	:SUBR,GETSYM,X,2;

 	:NB,<'HAS 2 EXITS AND NO PARAMETERS'>;
 	:NB,<'GETS A SYMBOL FROM THE INPUT BUFFER'>;
 	:NB,<'IGNORES ANY SEPARATORS AT THE START'>;
 	:NB,<'USES EXIT 1 IF TERMINATOR IS FOUND'>;
 	:NB,<'ELSE USES EXIT 2 AND SETS VARIABLES AS FOLLOWS'>;
 	:NB,<'SETS IDPT TO POINT AT FIRST CHARACTER OF SYMBOL'>;
 	:NB,<'SETS ENDSPT TO POINT BEYOND LAST CHAR OF SYMBOL'>;
 	:NB,<'SETS IDLEN AS LENGTH OF SYMBOL'>;

:LABEL,REDO; 	:LAV,IBFPT,X;
 	:STV,IDPT,X;
 	:LCI,IDPT,X;
 	:GOPC,ISPUNC,4,X,X;
:LABEL,GTLOOP; 	:BUMP,IBFPT,:OF,LCH,1;;
 	:LCI,IBFPT,X;
 	:GOPC,ENDSYM,4,X,X;
 	:GO,GTLOOP,-4,X,X;

:LABEL,ISPUNC; 	:GOSUB,TESTCH,78;
 	:GO,GTEXIT,6,X,C;
 	:GO,REDO,-11,X,C;
:LABEL,ENDSYM; 	:LAV,IBFPT,X;
 	:STV,ENDSPT,P;
 	:SAV,IDPT;
 	:STV,IDLEN,X;
 	:EXIT,2,GETSYM;

:LABEL,GTEXIT; 	:EXIT,1,GETSYM;




 	:SUBR,GETEMP,X,1;

 	:NB,<'HAS 1 EXIT AND NO PARAMETER'>;
 	:NB,<'UNSTACKS NUMBER FROM FSTACK AND PUTS IT IN TEMP'>;

 	:LAV,FFPT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,FFPT,X;
 	:LAI,FFPT,X;
 	:STV,TEMP,X;
 	:EXIT,1,GETEMP;




 	:SUBR,GETTS,X,3;

 	:NB,<'HAS 3 EXITS AND NO PARAMETER'>;
 	:NB,<'UNSTACKS POINTER FROM TOP OF TEMPORARY STACK'>;
 	:NB,<'IF STACK EMPTY USES EXIT1'>;
 	:NB,<'IF POINTER IS NULL [MEANING LEFT PAREN] USES ...'>;
 	:NB,<'EXIT 2. ELSE ADDS POINTER TO ...'>;
 	:NB,<'...POLISH STRING AND USES EXIT 3'>;

 	:LAV,TSFFPT,X;
 	:CAV,TSTKPT,A;
 	:GONE,GL8,1,X,X;
 	:EXIT,1,GETTS;
:LABEL,GL8; 	:LAV,TSFFPT,X;
 	:SAL,:OF,LNM,1;;
 	:STV,TSFFPT,X;
 	:LAI,TSFFPT,X;
 	:CAL,0;
 	:GONE,GL9,1,X,X;
 	:EXIT,2,GETTS;
:LABEL,GL9; 	:LAL,2;
 	:BSTK;
 	:LAI,TSFFPT,X;
 	:BSTK;
 	:EXIT,3,GETTS;




 	:SUBR,PRTAB,PARNM,1;

 	:NB,<'HAS 1 EXIT AND POINTER PARAMETER'>;
 	:NB,<'PARAM POINTS AT LID THAT HAS JUST BEEN PRINTED'>;
 	:NB,<'PRINTS ENOUGH SPACES TO GIVE AN 8-COLUMN TAB'>;

 	:LAI,PARNM,X;
 	:STV,TEMP,X;
 	:RMESS,<'  '>;
:LABEL,PRTLP; 	:LAV,TEMP,X;
 	:CAL,:OF,6*LCH,6;;
 	:GOLT,GL10,1,X,X;
 	:EXIT,1,PRTAB;
:LABEL,GL10; 	:BUMP,TEMP,:OF,LCH,1;;
 	:RMESS,<' '>;
 	:GO,PRTLP,-7,X,X;




 	:SUBR,PRVAL,PARNM,1;

 	:NB,<'HAS 1 EXIT AND NUMERICAL PARAMETER'>;
 	:NB,<'PRINTS NAME OF N-TH VALUE ...'>;
 	:NB,<'...WHERE N+1 IS VALUE OF PARAMETER'>;

 	:LAV,VALNPT,X;
 	:STV,DICTPT,X;
:LABEL,PRVLP; 	:LAV,PARNM,X;
 	:CAL,0;
 	:GOEQ,NMFND,9,X,X;
 	:LAV,PARNM,R;
 	:SAL,1;
 	:STV,PARNM,X;
 	:LAI,DICTPT,X;
 	:AAV,DICTPT;
 	:AAL,:OF,LNM,1;;
 	:ALIGN;
 	:STV,DICTPT,X;
 	:GO,PRVLP,-12,X,X;

:LABEL,NMFND; 	:LAV,DICTPT,X;
 	:GOSUB,LORLID,155;
 	:EXIT,1,PRVAL;




 	:SUBR,STKSYM,X,1;

 	:NB,<'HAS 1 EXIT AND NO PARAMETERS'>;
 	:NB,<'STACKS CURRENT SYMBOL ON FORWARDS STACK'>;

 	:LAV,IDLEN,X;
 	:FSTK;
 	:LAV,FFPT,X;
 	:STV,TEM2PT,P;
 	:AAV,IDLEN;
 	:ALIGN;
 	:STV,FFPT,P;
 	:CAV,LFPT,A;
 	:GOGE,ERLSO,80,E,X;
 	:LAV,IDPT,X;
 	:STV,SRCPT,X;
 	:LAV,TEM2PT,X;
 	:STV,DSTPT,X;
 	:LAV,IDLEN,X;
 	:FMOVE;
 	:EXIT,1,STKSYM;




 	:SUBR,TESTCH,X,3;

 	:NB,<'HAS 3 EXITS AND NO PARAMETERS'>;
 	:NB,<'GETS AND CLASSIFIES NEXT INPUT CHARACTER'>;
 	:NB,<'IF A TERMINATOR USES EXIT 1'>;
 	:NB,<'IF A SEPARATOR ADVANCES IBFPT AND USES EXIT 2'>;
 	:NB,<'OTHERWISE ADVANCES IBFPT AND USES EXIT 3'>;


 	:LCI,IBFPT,X;
 	:CCL,<';'>;
 	:GOEQ,TS1,14,X,X;
 	:LCI,IBFPT,R;
 	:CCN,NLREP;
 	:GOEQ,TS1,11,X,X;
 	:LCI,IBFPT,R;
 	:CCN,SPREP;
 	:GOEQ,TS2,9,X,X;
 	:LCI,IBFPT,R;
 	:CCL,<','>;
 	:GOEQ,TS2,6,X,X;
 	:LCI,IBFPT,R;
 	:CCN,TABREP;
 	:GOEQ,TS2,3,X,X;
 	:BUMP,IBFPT,:OF,LCH,1;;
 	:EXIT,3,TESTCH;

:LABEL,TS1; 	:EXIT,1,TESTCH;

:LABEL,TS2; 	:BUMP,IBFPT,:OF,LCH,1;;
 	:EXIT,2,TESTCH;




 	:SUBR,TSTSYM,X,4;

 	:NB,<'HAS 4 EXITS AND NO PARAMETER'>;
 	:NB,<'GETS AND CLASSIFIES NEXT INPUT SYMBOL'>;
 	:NB,<'USES EXIT 1 IF TERMINATOR IS FOUND'>;
 	:NB,<'USES EXIT 2 IF SYMBOL IS A VALUE'>;
 	:NB,<'USES EXIT 3 IF SYMBOL IS UNDEFINED'>;
 	:NB,<'OHERWISE USES EXIT 4 AND SETS TYPE AS FOLLOWS'>;
 	:NB,<'TYPE=0 MEANS SYMBOL IS A BINARY OPERATOR'>;
 	:NB,<'TYPE=1 MEANS SYMBOL IS A UNARY OPERATOR'>;
 	:NB,<'TYPE=2 MEANS SYMBOL IS A LEFT PARENTHESIS'>;
 	:NB,<'TYPE=3 MEANS SYMBOL IS A RIGHT PARENTHESIS'>;
 	:NB,<'TYPE=4 MEANS SYMBOL IS UNDEFINED'>;
 	:NB,<'IF SYMBOL IS A VARIABLE OR VALUE THEN VALUE ...'>;
 	:NB,<'...IS SET AS FOR CMPLST. IF SYMBOL IS AN ...'>;
 	:NB,<'...OPERATOR THEN DICTPT IS SET TO POINT ...'>;
 	:NB,<'...AT THE INFORMATION AFTER ITS LID'>;

 	:GOSUB,GETSYM,-111;
 	:GO,NOSYM,43,X,C;
 	:LAL,2;
 	:STV,TYPE,X;
 	:LCI,IDPT,X;
 	:CCL,<'('>;
 	:GOEQ,USE4,37,X,X;
 	:LAL,3;
 	:STV,TYPE,X;
 	:LCI,IDPT,X;
 	:CCL,<')'>;
 	:GOEQ,USE4,32,X,X;
 	:LAV,VALNPT,X;
 	:GOSUB,CMPLST,-143;
 	:GO,ISVAL,31,X,C;
 	:LAL,4;
 	:STV,TYPE,X;
 	:LAV,VARNPT,X;
 	:CAL,0;
 	:GOEQ,GL11,3,X,X;
 	:LAV,VARNPT,R;
 	:GOSUB,CMPLST,-151;
 	:GO,USE4,21,X,C;
:LABEL,GL11; 	:LAV,OPCHPT,X;
 	:STV,DICTPT,X;
:LABEL,OPLOOP; 	:LAV,DICTPT,X;
 	:CAL,0;
 	:GONE,GL12,1,X,X;
 	:EXIT,3,TSTSYM;
:LABEL,GL12; 	:LAV,DICTPT,X;
 	:AAL,:OF,LNM,1;;
 	:GOSUB,CMPARE,-180;
 	:GO,ISOP,3,X,C;
 	:LAI,DICTPT,X;
 	:STV,DICTPT,X;
 	:GO,OPLOOP,-11,X,X;

 	:NB,<'CASE OF OPERATOR'>;

:LABEL,ISOP; 	:BUMP,DICTPT,:OF,LNM,1;;
 	:LAI,DICTPT,X;
 	:AAV,DICTPT;
 	:AAL,:OF,LNM,1;;
 	:ALIGN;
 	:STV,DICTPT,X;
 	:LAI,DICTPT,X;
 	:STV,TYPE,X;
:LABEL,USE4; 	:EXIT,4,TSTSYM;

:LABEL,NOSYM; 	:EXIT,1,TSTSYM;
:LABEL,ISVAL; 	:EXIT,2,TSTSYM;








:LABEL,ERLSYS; 	:MESS,<'SOFTWARE ERROR$'>;
:LABEL,GIVEUP; 	:GOSUB,MDQUIT,X;

:LABEL,ERLCLA; 	:MESS,<'ERROR -- CLASHING USE OF SYMBOL$'>;
 	:GO,ERLCOM,27,X,X;

:LABEL,ERLSO; 	:MESS,<'$ERROR -- INSUFFICIENT WORKSPACE$'>;
 	:GO,GIVEUP,-5,X,X;

:LABEL,ERLILL; 	:MESS,<'ERROR -- ILLEGAL SYMBOL$'>;
 	:GO,ERLCOM,23,X,X;

:LABEL,ERLSTA; 	:MESS,<'ERROR -- UNRECOGNIZED STATEMENT$'>;
 	:GO,ERLCOM,21,X,X;

:LABEL,ERLINC; 	:MESS,<'ERROR -- INCOMPLETE LINE$'>;
 	:GO,ERLCOM,19,X,X;

:LABEL,ERLNOV; 	:MESS,<'ERROR -- NO VARIABLES$'>;
 	:GO,ERLCOM,17,X,X;

:LABEL,ERLPAR; 	:MESS,<'ERROR IN USE OF PARENTHESES$'>;
 	:GO,ERLCOM,15,X,X;

:LABEL,ERLCMP; 	:MESS,<'ERROR -- EXPRESSION TOO COMPLICATED$'>;
 	:GO,ERLCOM,13,X,X;

:LABEL,ERLWB; 	:MESS,<'ERROR IN USE OF BINARY OPERATOR '>;
 	:GO,ERLNAM,5,X,X;

:LABEL,ERLWU; 	:MESS,<'ERROR IN USE OF UNARY OPERATOR '>;
 	:GO,ERLNAM,3,X,X;
:LABEL,ERLVRO; 	:MESS,<'ERROR IN USE OF VARIABLE '>;
 	:GO,ERLNAM,1,X,X;

:LABEL,ERLVLO; 	:MESS,<'ERROR IN USE OF VALUE '>;

 	:NB,<'PRINT NAME OF OFFENDING SYMBOL'>;

:LABEL,ERLNAM; 	:LAV,FFPT,X;
 	:STV,TEM1PT,X;
 	:GOSUB,STKSYM,-114;
 	:LAV,TEM1PT,X;
 	:GOSUB,LOELID,24;
 	:MESS,<'$'>;

 	:NB,<'COMMON ACTION AFTER ERROR'>;

:LABEL,ERLCOM; 	:LAV,INFFPT,X;
 	:CAL,0;
 	:GOEQ,ASKVAL,-647,X,X;
 	:GO,NEXTLN,-616,X,X;


 	:NB,<'SPECIAL ADDITIONAL CODE FOR LOWL ALGEBRA'>;


 	:SUBR,LOGNUM,X,2;

 	:NB,<'PERFORMS CHARACTER TO NUMERICAL CONVERSION'>;
 	:CLEAR,VALUE;
 	:LAV,IDPT,X;
 	:AAL,:OF,3*LCH,3;;
 	:CAV,ENDSPT,A;
 	:GOLT,NUMEX,12,X,X;
:LABEL,NUMLP; 	:LCI,IDPT,X;
 	:GOND,NUMEX,10,X,X;
 	:STV,TEMP,X;
 	:LAV,VALUE,X;
 	:MULTL,10;
 	:AAV,TEMP;
 	:STV,VALUE,X;
 	:BUMP,IDPT,:OF,LCH,1;;
 	:LAV,IDPT,X;
 	:CAV,ENDSPT,A;
 	:GONE,NUMLP,-11,X,X;
 	:EXIT,2,LOGNUM;

:LABEL,NUMEX; 	:EXIT,1,LOGNUM;


 	:SUBR,LOELID,PARNM,1;
 	:NB,<'OUTPUTS A LID ON THE ERROR STREAM'>;

 	:LAI,PARNM,X;
 	:AAV,PARNM;
 	:AAL,:OF,LNM,1;;
 	:STV,LOTEMP,X;
 	:BUMP,PARNM,:OF,LNM,1;;
:LABEL,LOELP; 	:LAV,PARNM,X;
 	:CAV,LOTEMP,A;
 	:GOEQ,LOEEX,4,X,X;
 	:LCI,PARNM,X;
 	:GOSUB,MDERCH,X;
 	:BUMP,PARNM,:OF,LCH,1;;
 	:GO,LOELP,-7,X,X;

:LABEL,LOEEX; 	:EXIT,1,LOELID;


 	:SUBR,LORLID,PARNM,1;
 	:NB,<'OUTPUTS A LID ON RESULTS STREAM'>;

 	:LAI,PARNM,X;
 	:STV,LOTEMP,P;
 	:CAL,:OF,6*LCH,6;;
 	:GOLE,NOTRUN,2,X,X;
 	:LAL,:OF,6*LCH,6;;
 	:STV,LOTEMP,X;
:LABEL,NOTRUN; 	:LAV,LOTEMP,X;
 	:AAV,PARNM;
 	:AAL,:OF,LNM,1;;
 	:STV,LOTEMP,X;
 	:BUMP,PARNM,:OF,LNM,1;;
:LABEL,LORLP; 	:LAV,PARNM,X;
 	:CAV,LOTEMP,A;
 	:GOEQ,LOREX,4,X,X;
 	:LCI,PARNM,X;
 	:GOSUB,MDRCH,X;
 	:BUMP,PARNM,:OF,LCH,1;;
 	:GO,LORLP,-7,X,X;

:LABEL,LOREX; 	:EXIT,1,LORLID;


 	:SUBR,LOQLID,PARNM,1;
 	:NB,<'OUTPUTS A LID ON QUESTION STREAM'>;

 	:LAI,PARNM,X;
 	:AAV,PARNM;
 	:AAL,:OF,LNM,1;;
 	:STV,LOTEMP,X;
 	:BUMP,PARNM,:OF,LNM,1;;
:LABEL,LOQLP; 	:LAV,PARNM,X;
 	:CAV,LOTEMP,A;
 	:GOEQ,LOQEX,4,X,X;
 	:LCI,PARNM,X;
 	:GOSUB,MDQCH,X;
 	:BUMP,PARNM,:OF,LCH,1;;
 	:GO,LOQLP,-7,X,X;

:LABEL,LOQEX; 	:EXIT,1,LOQLID;

 	:PRGEN;

<! Halt !>