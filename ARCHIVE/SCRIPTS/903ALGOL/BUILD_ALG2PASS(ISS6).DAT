C Build 2-Pass ALGOL System (Issue 6)

c The two pass system consists of three tapes:
c TAPE1 (sumchecked binary)  contains the ALGOL translator
c TAPE2 (sumchecked binary)  contains the ALGOL interpreter
c TAPE3 (relocatable binary) contains the ALGOL library.
c
c The SIR code for the translator and the interpreter was
c recovered from Don Hunter's paper tape collection.
c Other parts of the ALGOL system were recovered by 
c dissassembling the corresponding Issue 6 ALGOL tapes.
c
c When built by this script the resulting tapes load
c identical contents into store, demonstrating the
c SIR sources are indeed those of Elliott ALGOL Issue 6. 


on 903 8K

c construct images of TAPE 1 and TAPE 2 for verifying results
at ptr file ../../MASTERS/903ALGOL/ALG1(ISS6).BIN
j 8181
st 8171
du 8192 ALG1(ISS6).IMG
at ptr file ../../MASTERS/903ALGOL/ALG2(ISS6).BIN
j 8181
st 8171
du 8192 ALG2(ISS6).IMG

C **********TAPE 1 / TRANSLATOR**********

c TAPE 1 contains four components:
c
c The assembled translator  in locations    8-6084
c A pre-loaded symbol table in locations 7732-8000
c The ALGOL dump utility    in locations 8001-8101
c The ALGOL T23 loader      in locations 8135-8179
c
c The preloaded symbol table contains entries for
c all the built-in ALGOL procedures and functions.
c
c The dump utility allows a new TAPE 1 to be made after
c additional procedures have been built-in to the symbol
c table.  It outputs a binary clear store, then a T23 like 
c loader followed by a store image in T22-23 like format. The
c dump utility is essentially a specialized version of T22.
c 
c The build sequence is as follows:
c
c 1.	Assemble the translator using SIR in high store and 
c 	dump out as binary using T22-23.
c 2.	Assemble the symbol table, ALGOL T23 loader and dump 
c	utility using SIR in high store.
c 3.	Dump out the T23 loader and dump utility 
c	as binary using QBINOUT
c 4.	Load in sequence, translator, symbols, dump, loader
c		Note the symbols, dump and loader binary will
c		overwrite the RLB loader used to load the
c		translator.
c 5.	Enter at 8001 to run the DUMP utility and produce a
c	new TAPE 1. 
c
c Note we zealously clear store before each assembly etc to
c ensure the result is a clean translator.

c Merge translator paper tapes into one file.
c (this would not be feasible on a real machine as the
c source code is too long for a single reel of tape)

at ptr file ../../MASTERS/ACDUTILITIES/BOWDLER.BIN
j 8181
st 8175
at ptp file errors.txt legible
c steering tape
c CHE - copy to next halt code, exclusive
c WAI - wait
at ptr inline
RTS *+8
*+9^%,
CHE
WAI
CHE
WAI
CHE
WAI
COP
<! halt !><!!>
j 13
de ptp
print errors.txt
st 490
at ptp file TRANSLAT(ISS6).900
at ptr file ../../MASTERS/903ALGOL/TRANSLAT(ISS6)(SRC1).900
j 9
st 822
at ptr file ../../MASTERS/903ALGOL/TRANSLAT(ISS6)(SRC2).900
j 10
st 822
at ptr file ../../MASTERS/903ALGOL/TRANSLAT(ISS6)(SRC3).900
j 10
st 822
at ptr file ../../MASTERS/903ALGOL/TRANSLAT(ISS6)(SRC4).900
j 10
de ptp
st 1274

c assemble translator
c load SIR assembler
at ptr file ../../MASTERS/903SIR/SIR(ISS6)(5500).BIN
j 8181
st 8171
at ptp file TRANSLAT.BIN
at ptr file TRANSLAT(ISS6).900
j 8
de ptp
st 6239

c load translator
clear
at ptr file TRANSLAT.BIN
j 8181
st 7815

c dump out with t22-23
at ptr file ../../MASTERS/903UTILITIES/T22_23(ISS3).BIN
at ptp file TRANSLAT.BIN
j 8181
st 8070
at ptr inline
+2
+6100
<! halt !><!!>
j 8179
de ptp
st 8113

c build ALGOL symbol table, dump and loader
c  using SIR in low store & QBINOUT

clear
at ptr file ../../MASTERS/903SIR/SIR(ISS6)(512).BIN
j 8181
select out tty
at ptr inline

^4096
*35		( dictionary below program, load & go, labels )
<! halt !><!!>
j 8
st 1939
at ptr file ../../MASTERS/903UTILITIES/QBINOUT(ISS1).900
j 9
st 1939
at ptr inline

( set up QBINOUT parameters)
^QBINOUT+39
	-448		( size = 8180-7732  )	
	+7732		( symbol table base )

^8177	8	8177

%
<! halt !><!!>
j 9
st 1939
at ptr inline

^4096 (put dictionary under QBINOUT)
*35
<! halt !> <!!>
j 8
st 1939
at ptr file ../../MASTERS/903ALGOL/ALG1_SYMBOLS.900
j 9
st 1939
at ptr inline

%
<! halt !><!!>
j 9
st 1939
at ptr inline

^4096 ( put dictionary under QBINOUT )
*35

<! halt !><!!>
j 8
st 1939
at ptr inline

<! halt !><!!>
j 9
st 1939
at ptr file ../../MASTERS/903ALGOL/ALG_8K_DUMP.900
j 9
st 1939
at ptr inline

^4096 (put dictionary under QBINOUT)
*35

<! halt !><!!>
j 8
st 1939
at ptr file ../../MASTERS/903ALGOL/ALG_8K_T23.900
j 9
st 1939
at ptr inline

%
<! halt !><!!>
j 9
st 1939

c output package using QBINOUT
select out auto
at ptp file ALG1_TOS.BIN
j 4096
st 4114
de ptp

c load compiled translator, symbol table, dump utility and loader
clear
at ptr file TRANSLAT.BIN
j 8181
st 8171
at ptr file ALG1_TOS.BIN
nonstop on
j 8181
c runs off tape
nonstop on

c the following is just to fool the dump utility 
c to output locations 2-7 to match ALGOL Issue 6 TAPE 1
e 3 +4096
e 4 +15212
e 5 +5415
e 6 +15976
e 7 +6721
c e 8175 &242137
c e 8176 &765473

c make tape using ALGOL dump utility
at ptp file ALG1(ISS6).BIN
j 8001
st 8097
de ptp

c load new tape 1 and verify
clear
at ptr file ALG1(ISS6).BIN
j 8181
st 8171
vi ALG1(ISS6).IMG

C **********TAPE 2**********

c TAPE 2 contains five components:
c
c The assembled interpreter in locations    8-3959
c The built-in library      in locations 3960-4539
c A RLB loader              in locations 7542-8000
c The ALGOL dump utility    in locations 8001-8101
c The ALGOL T23 loader      in locations 8135-8179
c
c The dump utility allows a new TAPE 2 to be made after
c additional procedures have been loaded into the library
c table.  It outputs a binary clear store, then a T23 like 
c loader followed by a store image in T22-23 like format. The
c dump utility is essentially a specialized version of T22.
c 
c The build sequence is as follows:
c
c 1.	Assemble the RLB loader, dump utility and ALGOL T23 
c 	loader using SIR in low store.
c 2.	Dump out the loaders and dump as binary using QBINOUT
c 3.	Assemble the interpreter using SIR in high store and
c	output as RLB (the interpreter is too big to assemble
c	'load and go').  Specify that an RLB loader is to
c	be punched first on the tape.
c 2.	Assemble the built-in library to RLB using SIR in
c	high store.
c 5.	Load in sequence, interpreter, RLB loader, dump, T23
c	loader
c		Note the symbols, dump and loader binary will
c		overwrite the RLB loader used to load the
c		translator.
c 6.	Load the built-in library at 12
c 7.	Enter at 14 to run the dump utility and produce a
c	new TAPE 2. 
c
c Note we zealously clear store before each assembly etc to
c ensure the result is a clean translator.

C **********LOADER**********

c use DO-ALL-4 to convert 920 ALGOL Loader to 900 telecode

at ptr file ../../MASTERS/ACDUTILITIES/DOALL4.BIN
j 8181
st 8175
at ptp file LOADER(920).900
at ptr file ../../MASTERS/920ALGOL/LOADER.920
c set 903 telecode output for ALGOL
j 19
st 68
c set unclean
j 12
st 74
c read 920 loader
j 16
st 96
c output halt code
j 18
st 57
de ptp

c edit loader to use issue 6 interpreter locations
at ptr file ../../MASTERS/ACDUTILITIES/BOWDLER.BIN
j 8181
st 8175
at ptp file errors.txt legible
c steering tape
at ptr file EDIT_LOADER(ISS6).900
j 13
de ptp
print errors.txt
st 490
at ptr file LOADER(920).900
at ptp file LOADER(ISS6).900
j 9
de ptp
st 1274

c build ALGOL dump and loader using SIR in low 
c store & QBINOUT
clear 
at ptr file ../../MASTERS/903SIR/SIR(ISS6)(512).BIN
j 8181
st 8171
at ptr inline

^4096
*35
<! halt !><!!>
j 8
st 1939
at ptr file ../../MASTERS/903UTILITIES/QBINOUT(ISS1).900
j 9
st 1939
at ptr inline

( set up QBINOUT parameters)
^QBINOUT+39
	-638		( size = 8180-7542  )	
	+7542		( symbol table base )

%
<! halt !><!!>
j 9
st 1939
at ptr inline

%
<! halt !><!!>
j 9
st 1939
at ptr file LOADER(ISS6).900
j 8
st 1939
at ptr inline

^4096 (put dictionary under QBINOUT)
*35
^8001

<! halt !><!!>
j 8
st 1939
at ptr file ../../MASTERS/903ALGOL/ALG_8K_DUMP.900
j 9
st 1939
at ptr inline

^4096 (put dictionary under QBINOUT)
*35
^8124

<! halt !><!!>
j 8
st 1939
at ptr file ../../MASTERS/903ALGOL/ALG_8K_T23.900
j 9
st 1939
at ptr inline

%
<! halt !><!!>
j 9
st 1939
c output package using QBINOUT
at ptp file ALG2_TOS.BIN
j 4096
st 4114
de ptp

C **********INTERPRETER**********

c use BOWDLER to merge paper tapes into one file.

at ptr file ../../MASTERS/ACDUTILITIES/BOWDLER.BIN
j 8181
st 8175
at ptp file errors.txt legible
c steering tape
c CHE - copy to next halt code, exclusive
c WAI - wait
at ptr inline

RTS *+8
*+9^%,
CHE
WAI
CHE
WAI
CHE
WAI
CHE
WAI
CHE
WAI
COP
<! halt !><!!>
j 13
de ptp
print errors.txt
st 490
at ptp file INTERPR(ISS6).900
at ptr file ../../MASTERS/903ALGOL/INTERPR(ISS6)(SRC1).900
j 9
st 822
at ptr file ../../MASTERS/903ALGOL/INTERPR(ISS6)(SRC2).900
j 10
st 822
at ptr file ../../MASTERS/903ALGOL/INTERPR(ISS6)(SRC3).900
j 10
st 822
at ptr file ../../MASTERS/903ALGOL/INTERPR(ISS6)(SRC4).900
j 10
st 822
at ptr file ../../MASTERS/903ALGOL/INTERPR(ISS6)(SRC5).900
j 10
st 822
at ptr file ../../MASTERS/903ALGOL/INTERPR(ISS6)(SRC6).900
j 10
de ptp
st 1274

c assemble ALGOL interpreter
at ptr file ../../MASTERS/903SIR/SIR(ISS6)(5500).BIN
j 8181
st 8171
at ptp file INTERPR.BIN
at ptr file INTERPR(ISS6).900
j 8
de ptp
st 6239

c load tape2 contents: interpreter, library, loader and dictionary
c load compiled interpreter
clear
at ptr file INTERPR.BIN
j 8181
st 7815
c load ALGOL loader - runs off tape
at ptr file ALG2_TOS.BIN
nonstop on
j 8181
nonstop off
c load ALGOL library
at ptr file ../../MASTERS/903ALGOL/LIBRARY(ISS6).RLB

j 12
st 7943
c the following is just to fool the dump utility 
c to output locations 2-7 to match ALGOL Issue 6 TAPE 2
e 2 +0
e 3 +4096
e 4 +25994
e 5 +5415
e 6 +25996
e 7 +8192

c use interpreter dump facility to create a new tape 2
at ptp file ALG2(ISS6).BIN
j 14
de ptp

sh t

c load new tape 2 and verify
at ptr file ALG2(ISS6).BIN
j 8181
st 8171
vi ALG2(ISS6).IMG

delete ALG1(ISS6).IMG
delete ALG2(ISS6).IMG
delete INTERPR.BIN
delete TRANSLAT.BIN
delete LIBRARY(ISS6).RLB
delete errors.txt
delete temp.txt


