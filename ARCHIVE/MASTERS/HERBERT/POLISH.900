
C  D. D. MCCRACKEN "A GUIDE TO FORTRAN PROGRAMMING" CASE STUDY 14
C TRANSLATING ALGEBRAIC EXPRESSIONS TO POLISH NOTATION
C
C THE VARIABLE NAMES ARE THEIR MEANINGS ARE AS FOLLOWS:
C    SOURCE      THE INPUT STRING, IN NORMAL AGEBRAIC FORM
C    SHIER       ARRAY CONTAINING THE HIERARCHY NUMBERS OF THE INPUT
C    OPSTCK      'OPERATOR STACK': THE OPERATORS OF THE INPUT
C    OHIER       ARRAY CONTAINING THE HIERARCHY NUMBERS OF THE OPERATORS
C    POLISH      THE OUTPUT ARRAY IN POLISH NOTATION
C
C    L           DO INDEX USED IN INITIALIZING 
C    M           DO INDEX USED IN SEEING UP SHIER ARRAY
C    I           POINTER TO INPUT STRING (SOURCE AND SHIER)
C    J           POINTER TO OPERATOR STACK (OPSTCK AND OHIER)
C    K           POINTER TO OUTPUT STRING (POLISH)
C
C    THE OTHER VARIABLES ARE ACTUALLY CONSTANTS, AND ARE 
C    DEFINED IN THE DATA STATEMENT.
C
C
      INTEGER SOURCE(80), SHIER(80), OPSTCK(80), OHIER(80)
      INTEGER POLISH(80)    
      INTEGER BLANK, LPAREN, RPAREN, PLUS, MINUS, ASTRSK
      INTEGER SLASH, SEMICO
      DATA BLANK/1H /, LPAREN/1H(/, RPAREN/1H)/, PLUS/1H+/
      DATA MINUS/1H-/, ASTRSK/1H*/, SLASH/1H//, SEMICO/1H;/
C
C PRINT TITLE
      WRITE (3, 900)
 900  FORMAT (39HALGEBRAIC TO POLISH NOTATION CONVERSION//
     1        46HUSE ; OR SPACE TO TERMINATE EACH LINE OF INPUT//)
C
C INITIALIZE ARRAYS TO ZERO OR BLANK AS APPROPRIATE
  10  DO 20 L      = 1, 80
         SOURCE(L) = BLANK
         SHIER(L)  = 0
         OHIER(L)  = 0
         OPSTCK(L) = BLANK
         POLISH(L) = BLANK
  20  CONTINUE
C
C PROMPT USER
      WRITE (3, 910)
 910  FORMAT (19HENTER EXPRESSION:  )
C BUILD A 'DATA' CARD -- USE BLANK OR SEMICOLON AS RECORD SEPERATOR
      DO 35 L = 1, 80
         READ (3, 30) SOURCE(L)
  30     FORMAT(A1)
C        ... BLANK TERMINATES INPUT EXPRESSION 
C        ... (EMBEDDED BLANKS NOT ALLOWED)
         IF ( SOURCE(L) .EQ. BLANK  ) GO TO 25
         IF ( SOURCE(L) .EQ. SEMICO ) GO TO 25
  35  CONTINUE
C
C IN THE FOLLOWING DO-LOOP, M POINTS TO CARD COLUMNS, FROM LEFT TO RIGHT
C FIRST BLANK SIGNALS END OF STRING (EMBEDDED BLANKS ARE NOT ALLOWED)
C IT IS ASSUMED THAT IF A CHARACTER IS NOT AN OPERATOR OR A
C   PARENTHESIS, IT IS A VARIABLE
  25  SOURCE(L) = BLANK
      DO 40 M = 1, 80
         IF ( SOURCE(M) .EQ. BLANK ) GO TO 60
C
C SET SHIER(M0 TO ZERO, THEN CHANGE IT IF CHARACTER IS AN OPERATOR
         SHIER(M) = 0
         IF (      SOURCE(M) .EQ. LPAREN ) SHIER(M) = 1
         IF (      SOURCE(M) .EQ. RPAREN ) SHIER(M) = 2
         IF (      SOURCE(M) .EQ. PLUS
     1        .OR. SOURCE(M) .EQ. MINUS  ) SHIER(M) = 3
         IF (      SOURCE(M) .EQ. ASTRSK 
     1        .OR. SOURCE(M) .EQ. SLASH  ) SHIER(M) = 4
  40  CONTINUE
C
C IF NORMAL EXIT IS TAKEN, THE CARD DID NOT CONTAIN A BLANK
      WRITE (3, 50)
  50  FORMAT (30HDATA CARD IN ERROR - NO BLANKS)
      GO TO 10
C
C IF SOURCE-STRING POINTER = 1 ON EXIT FROM DO, CARD WAS ALL BLANK)
  60  IF ( M .EQ. 1 ) STOP
C
C OTHERWISE PROCEED TO TRANSLATION
C INITIALIZE HIERARCHY NUMBERS TO GET STARTED PROPERLY
      SHIER(M) = 0
      OHIER(1) = -1
C
C INITIALIZE POINTERS
      I = 1
      J = 2
      K = 1
C
C CHECK FOR OPERAND
  70  IF ( SHIER(I) .EQ. 0 ) GO TO 90
C
C CHECK FOR RIGHT PARENTHESIS
      IF ( SHIER(I) .EQ. 2 ) GO TO 80
C
C SOME OTHER OPERATOR HERE -- MOVE TO OPERATOR STACK
      OPSTCK(J) = SOURCE(I)
      OHIER(J)  = SHIER(I)
C
C ADVANCE POINTERS
      I = I + 1
      J = J + 1
      GO TO 70
C
C DELETE CORRESPONDING LEFT PARENTHESIS
  80  I = I + 1
      J = J - 1
      GO TO 100
C
C MOVE OPERAND TO POLISH STRING
  90  POLISH(K) = SOURCE(I)
      I = I + 1
      K = K + 1
C
C CHECK HIERARCHY RANKINGS
 100  IF ( OHIER(J-1) .GE. SHIER(I) ) GO TO 110
C
C CHECK FOR END OF SOURCE STRING
      IF ( I .EQ. M ) GO TO 120
      GO TO 70
C
C MOVE OPERATOR TO POLISH STRING
 110  POLISH(K) = OPSTCK(J-1)
      K = K + 1
      J = J - 1
      GO TO 100
C
C WRITE SOURCE AND POLISH STRINGS
 120  WRITE (3, 130) (SOURCE(N), N = 1, L)
      WRITE (3, 130) (POLISH(N), N = 1, K)
      WRITE (3, 135)
 130  FORMAT (80A1)
 135  FORMAT (/)
      GO TO 10  
      END
<! Halt !>