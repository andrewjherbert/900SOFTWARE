<! Legible Header  OOOO     OOOOO    OOOOO    OOOOO    OOOOO    OOOO    OOOOOOO            O     OOOO            O     OOO      OOOO            O    OOOO      OOO      O     OOOO             OOOO    OOO   OOOOO  !>
<! Legible Header O    O   O     O   O    O   O    O   O       O    O      O              OO    O    O          O     O   O    O    O          O    O    O    O   O    OO    O    O           O    O    O    O    O !>
<! Legible Header O        O     O   O    O   O    O   O       O           O               O    O    O         O     O     O        O         O          O   O     O    O         O           O         O    O    O !>
<! Legible Header O        O     O   OOOOO    OOOOO    OOOO    O           O               O     OOOOO       O       O     O     OOO        O          O     O     O    O       O              OOOO     O    OOOOO  !>
<! Legible Header O        O     O   O O      O O      O       O           O               O         O      O        O     O        O      O          O      O     O    O      O                   O    O    O O    !>
<! Legible Header O        O     O   O  O     O  O     O       O           O               O         O     O         O     O        O     O          O       O     O    O     O                    O    O    O  O   !>
<! Legible Header O    O   O     O   O   O    O   O    O       O    O      O               O    O    O    O           O   O    O    O    O          O         O   O     O    O                O    O    O    O   O  !>
<! Legible Header  OOOO     OOOOO    O    O   O    O   OOOOO    OOOO       O              OOO    OOOO    O             OOO      OOOO    O           OOOOOO     OOO     OOO   OOOOOO            OOOO    OOO   O    O !>

*17

((UTILITY FOR CORRECTING PAPER TAPES)
((VERSION: 19/03/12 - A.J. HERBERT  )

(
Expects as input from tty a control file consisting of
a sequence of pairs of integers first being a position 
and the second an edit instruction for that position.  
The sequence is terminated by a "position" of -1 and the
"edit" gives the count of rows to be read from the input
tape.  Otherwise, if the edit is less that 256 then the 
value should be output as a character before punching the 
character at the specified position.  If the edit is greater 
than or equal to 256, the value less 256 should substituted 
for the character at the specified position.
)


[CORRECT RUNOUT QIN1 QOUT1 QDIN QDOUT QERROR QPAUSE BUFFER]

(read control tape)
CORRECT	4	+3		(set tty output)
	5	QDOUT
	4	+1
	5	QDIN		(set paper tape input)
	4	+0		(initialize command list)
	5	CMDLEN
	5	NXTCMD	

L1	11	QIN1		(read position)
	8	QIN1+1
	0	CMDLEN
	/5	CMD
	9	ENDCMD		(negative position terminates list)
	11	QIN1		(read edit command)
	8	QIN1+1
	0	CMDLEN
	/5	CMD+1		
	10	CMDLEN		(advance index in command list)
	10	CMDLEN
	4	CMDLEN
	2	MAXCMD
	7	ERR1          	(error if command buffer full)
	8	L1		(read in next command)


ERR1	4	+1
ERR	11	QERROR
	8	QERROR+1
	0	ERRB
	8	;+0

ERR2	4	+2
	8	ERR
ERRB  	0 QERROR
	+1
	\COR

(command input complete)	
ENDCMD	11	QIN1		(read index of last row of input)
	8	QIN1+1
	9	ERR2		(no input data required)
	5	IPMAX	

	4	+141		(type OK on a newline)
	15	6148
	4	+10
	15	6148
	4	+207
	15	6148
	4	+75
	15	6148

	11	QPAUSE		(pause, retrigger at 9)
	8	QPAUSE+1	
	
	11	RUNOUT		(punch tape leader)
	8	RUNOUT+1

(housekeeping)	
	4	+0
	5	IPPOS		(position in input tape)
	5	OPPOS		(position in output tape)
	5	BUFIN
	5	NXTCMD
	5	BUFOUT

(skip initial blanks)
	4	+0
	15	2048		(skip blanks)
	7	;-1

NEWBUF	5	BUFFER		(first non-blank)

(fill buffer from paper tape)
RDNEXT	4	BUFIN		(see if buffer is full)
	2	BUFMAX
	7	BUFFUL		(deal with commands for this buffer)
	4	IPPOS
	2	IPMAX
	7	BUFFUL		(deal with commands for partial buffer)
	9 ;+0
	10	IPPOS
	10	BUFIN
	4	+0		(read a character)
	15	2048
	0 	BUFIN		(store in buffer)
	/5 	BUFFER
	8	RDNEXT		(space in buffer and data on tape)

(buffer is full, or all tape read)
BUFFUL
CHKCMD	0	NXTCMD
	/4	CMD
	9	OUT1		(command list all done)
	2	OPPOS		(see if at right position)
	7	ACT
OUT1	0	BUFOUT
	/4	BUFFER
OUT2	15	6144
	10	OPPOS
	4	BUFOUT		(see if more data in buffer)
	2	BUFIN
	7	FILBUF		(need to refill buffer)
	10	BUFOUT
	8	CHKCMD		(do next command)

(all input processed)
EXIT	11	RUNOUT		(punch trailing runout)
	8	RUNOUT+1
	4	+141		(type END on a newline)
	15	6148
	4	+10
	15	6148
	4	+197
	15	6148
	4	+78
	15	6148
	4	+68
	15 	6148
	4	+141
	15	6148
	4	+10
	15	6148
STOP	8	;+0	

(buffer emptied)
FILBUF	4	BUFIN		(see last buffer was complete)
	2	BUFMAX
	7	;+2		(yes, so need to read more)
	8	EXIT		(no, all done)
	4	+0		(reset buffer pointers)
	5	BUFIN
	5	BUFOUT
	10	IPPOS
	15	2048
	8	NEWBUF

(at position to edit)
ACT	0	NXTCMD		(output position and command code)
	/4	CMD		
	11	QOUT1		
	8	QOUT1+1
	/0 0
	0	NXTCMD
	/4 	CMD+1
	11	QOUT1
	8	QOUT1+1
	0 0
	0 	NXTCMD
	10	NXTCMD		(advance command index)	
	10	NXTCMD
	/4	CMD+1		(command)
	1	-256		
	9	INSERT

(swap command)
SWAP	/4	CMD+1		(command)
	1	-256
	8	OUT2

(insert command)
INSERT	/4	CMD+1		(restore edit)
	15	6144		(insert byte)
	10	OPPOS		(two rows output)
	8	OUT1

BUFIN  	>1			(next location for buffer input)
BUFOUT	>1			(next location for buffer output)
IPMAX	>1			(last index of input tape)
IPPOS	>1			(current position on input tape)
OPPOS	>1			(current position on output tape)

BUFFER=1000			(4096 word buffer, from 1024)
BUFMAX	+7000

CMD	>20
CMDLEN	>1			(count of commands read)
MAXCMD  +20
NXTCMD	>1			(index of next command to obey)		


(output 18" of runout)
[RUNOUT]

RUNOUT	+0			(link)
	4	-180
	5	COUNT
LOOP	4	+0		(punch blank)
	15	6144
	10	COUNT
	4	COUNT
	9	LOOP		(more to punch)
	0	RUNOUT		(exit)
	/8	1

COUNT	>1

(QIN1 - input integrs and single length fractions)

 [QIN1 QDIN QCHIN QERROR]
QIN1  +0
  8  ;+2
SCALE  +0
  4  DEVICE
  5  QDIN
  4  +0
  5  NUMBER
  5  NOMARK
  5  DECMARK
  5  ERROR
  5  SIGN
  10  SIGN
Q   11  QCHIN
  8  QCHIN+1
D  5  CHAR
 1 -16
 9 ;+3
 1 -10
 9 ASSEMB

  4  CHAR
  2  +13
  7  MINUS
  1  +1
  7  POINT
  4  NOMARK
  7  ;+2
  8  NE
  10  SIGN
  5  DECMARK
  8  Q
ASSEMB
4  DECMARK
7  RET
4  PLACES
 1 -5
 7 PL5
RET    0  DECMARK
   /4  NUMBER
  5  SOFAR
2  +13107
9  TOOBIG
4  SOFAR
14  3
1  SOFAR
1  SOFAR
1  -16

  1  CHAR
  /5  NUMBER
  9  TOOBIG
  10  NOMARK
  10  PLACES
  8  Q
TOOBIG  4  DECMARK
  7  ;+2
  8  SKIP
  10  ERROR
  4  +2
8  ERS
MINUS  4  NOMARK
  7  ;+2
  8  NE
  5  SIGN
Q2  11  QCHIN
  8  QCHIN+1
  7  Q2
  8  D
POINT  4  DECMARK
  7  SETMK
  10  ERROR
  4  +1
ERS  11  QERROR
  8  QERROR+1
  0  DATAREA
  8  SKIP
SETMK  5  PLACES
  5  FRACT
  4  +1
  5  DECMARK
  8  Q
PL5
 4 CHAR
 1 -21
 9 SKIP
 10 FRACT (ROUND UP,DIGIT=>5)
 4 FRACT
 2 +100000
 7 ONE


SKIP
Q3  11  QCHIN
  8  QCHIN+1
 1 -14
 7 Q3 (IGNORE  POINT)
 1 -2
 9 ;+3
 1 -10
 9 Q3 (IGNORE DIGITS)

  4  ERROR
  7  NE
  8  QIN1+1

NE  4  DECMARK
  7  CHKSGN
OK  4  PLACES
  11  POWER
  8  POWER+1
  4  FRACT
  11  QSCALE
  8  QSCALE+1
  5  FRACT

  4  SCALE
  9  NEGSCL
  11  POWER
  8  POWER+1
 4  FACTOR
2  NUMBER
9  ;+2
8  OFLO
 4  FRACT
  11  QSCALE
  8  QSCALE+2
  5  NUMBER

CHKSGN  4  SIGN
  7  NEG
  4  NUMBER
 8 EXIT
PLACES +0
NUMBER +0
FRACT +0 (MUST FOLLOW NUMBER)

FACTOR +0

DECMARK +0 ( QIN1+125)
DEVICE +1 (+3 FOR TELEPRINTER)
CHAR +0
SIGN  +0
NOMARK  +0
ERROR +0
HP  +0

SOFAR +0

NEG  4  NUMBER
  2  +0
EXIT  0  QIN1
  /8  1
NEGSCL  4  +4
  11  QERROR
  8  QERROR+1
  0  DATAREA
  8  EXIT
DATAREA  0  QIN1
  0  1
    \QIN

ONE
 10 NUMBER
 4 +0
 5 FRACT
 8 SKIP


RESULT +0
QSTORE +0
QN +0
QR +0


QSCALE +0
 8 S2
 14 8175
 4 NUMBER
 8 S3
S2 0 +0
S3
 5 QSTORE
 3 QN
 13 FACTOR
 5 RESULT
 12 FACTOR
 3 QR
 2 QSTORE
 9 REDUCE
 7 ;+2
 8 INCR
 4 QR
 2 QN
9 TBQ
 2 HP
 9 INCR
NEAR
 4 RESULT
 8 EXACT+1
TBQ
 1 HP
 9 REDUCE
 8 NEAR

INCR
 4 +1
 8 ;+2
REDUCE
 4 -1
EXACT
 1 RESULT
 0 QSCALE
/8 1

POWER +0
 5 QR
 2 +5
 9 NEGSCL  (SCALE FACTOR>5)
 0 QR
/4 TABL
 5 FACTOR
 14 8191
 5 HP

 0 POWER
/8 1
TABL +1
  +10
 +100
+1000
+10000
+100000

OFLO  4  +3
  11  QERROR
  8  QERROR+1
  0  DATAREA
  8  QIN1+1


(903 SSYS SIR ISSUE 1)

[ QCHOP QCHIN QDOUT QDIN
   QERROR QPAUSE  ]
QDIN +1
QDOUT +1
PW +0
PW1 +0
CH +0

PARITY
 +0
 0 +0
 3 PW
P1
 7 P2
 10 PW
 5 PW1
 1 -1
 6 PW1
 8 P1
P2
 4 PW
 0 PARITY ( PARITY BIT IS L.S. ACC)
/8 1


QCHOP
 +0
 8 ;+1
 6 =/0 255
 9 SPEC  ( OUTPUT BINARY PATTERN )
 1 -1
 7 NL ( TEST FOR NEWLINE )
 1 +33
 5 CH
 11 PARITY
 8 PARITY+1
 14 7
 6 +128
 1 CH ( ADD CORRECT PARITY BIT )
SPEC
 5 CH
 4 QDOUT
 1 -3
 7 PTP ( JUMP IF TELEPRINTER REQIRED )
 4 CH
 15 6144 ( OUTPUT TO PUNCH)
EXIT
 0 QCHOP
 6 &377400
/7 1
 14 8184
 1 -1 ( FORM NEXT CHARACTER IN NEWLINE SEQUENCE)
 8 SPEC
PTP
 4 CH
 15 6148 (TELEPRINTER)

 8 EXIT
NL
 4 &205615 ( SEQUENCE FOR NEWLINE )

 8 SPEC


CHAR +0
QCHIN +0 ( INPUT INTERNAL CODE CHAR )
 4 QDIN
 1 -3
 7 TPIN ( JUMP IF TELEPRINTER INPUT)
 4 +0
 15 2048
GOT
 5 CHAR
 11 PARITY
 8 PARITY+1
 6 +1
 7 EVPAR ( CORRECT PARITY )

INERR
 4 CHAR
 11 QERROR
 8 QERROR+1
 0 DATA
 4 +0
 8 EXIT2
TPIN
 15 2052 ( TELEPRINTER INPUT)
 8 GOT
EVPAR
 4 CHAR
 6 +127
 1 -32
 9 LESS
 1 -64
 9 KCODE
 1 -27
 9 LOWCAS ( LOWER CASE CHARS )
 1 -4
 7 QCHIN+1 ( ERASE )
 8 INERR
LOWCAS 1 +58
NWLF 1 -63 ( ADD 1 )
KCODE 1 +64 (ADD 64 )
EXIT2
 0 QCHIN
/8 1

LESS
 1 +22
 7 NWLF ( NEWLINE )
 1 +1
 7 EXIT2 ( TAB )
 1 -4
 7 QCHIN+1 ( CARRIAGE RETURN)
 1 -7
 7 HALT
 4 CHAR
 7 QCHIN+1 ( BLANK )
 8 INERR

HALT
 11 QPAUSE
 8 QPAUSE+1
 8 QCHIN+1

DATA
 0 QCHIN
 0 1
 \CHN


[ QPAUSE QSTOP ]

QPAUSE +0
 11 W
 14 18
 6 =7 0
 2 +0    ( FOR ONE MODULE THIS )
 5 W     ( COULD BE  :  )
 2 +0   ( 4 QPAUSE)
 1 QPAUSE (1 +1 )

 1 +1     ( 5 20 )
 0 W
/5 20    ( 8 ;+0 )
4 W
9 QSTOP
 4 CONT
 5 9
QSTOP
 8 ;+0
W +0
CONT 8 ;+1

 4 20
 5 6
 15 7168
 8 ;-1 (DUMMY LEVEL 1 PROGRAM )




[QERROR QCHOP QDOUT QPAUSE ]
W +0
W1 +0
PA +0
SAFE +0

QERROR
 +0
 5 W
 4 QDOUT
 5 SAFE
 4 +3 (SET TELEPRINTER OUTPUT )
 5 QDOUT
 4 +1
 11 QCHOP ( OUTPUT NEWLINE )
 8 QCHOP+1
 4 +10
 11 QCHOP ( OUTPUT * )

 8 QCHOP+1
 0 QERROR
/0 1
/4 2
PNAM
 5 W1
 14 8180
 6 +63 (OUTPUT 3 INTERNAL CODE CHARS)

 11 QCHOP
 8 QCHOP+1

 4 W1
 0 +0
 14 6
 7 ;+2
8 PNAM
 11 QCHOP ( SPACE )
 8 QCHOP+1
 4  -5
 5 W1
OCTAL
 4 W
 14 3
 5 W
 14 8177
 6 +7
 1 +16
 11 QCHOP
 8 QCHOP+1
 10 W1
 4 W1
 9 OCTAL
 11 QCHOP ( SPACE )
 8 QCHOP+1

ADDRES
 4 -6
 5 W1
 0 QERROR
/0 1
/0 0
/4 0
 6 =3 8191
 5 W
LOOP
 4 +16
 5 PA  ( SET ZERO CHARACTER)
 0 W1
 /4 T+6 (DIVIDE BY REPEATED SUBTRACTION)
 2 W
 9 RR
 10 PA
 5 W
 8 ;-5

T
+100000
+10000
+1000
+100
+10
+1
RR
 4 PA
 11 QCHOP
 8 QCHOP+1
 10 W1
 4 W1
 9 LOOP


 4 SAFE
 5 QDOUT
 11 QPAUSE
 8 QPAUSE+1
 0 QERROR
/8 2

(QOUT1 - Output single length fractions and integers)


[QOUT1 QCHOP QERROR]
QOUT1  +0
 8 INT
 5 NUMBER
 4 +0
IPLINK 5 SCALE
 5 TYPMK
 0 QOUT1
 /4 1
 6 +8191
 1 SCALE
 9 ;+2
 2 +0
 5 SCALE
 /4 1
 9 NL
 4 +0
 8 QCH
NLRET 6 =15 0
 14 8179
 1 -6
 5 DC
 4 +0
 5 DIGMK
 4 NUMBER
 9 CHKSGN
 4 PLUS
SGNRET 5 SIGN
LOOP2 4 +0
 5 DIGIT
 4 SCALE
 7 OPDECPT
COMP 4 TYPMK
 7 CALCFR
DPRET 0 DC
 4 NUMBER
LOOP1 /1 CONST
 9 CONTIN
 10 DIGIT
 8 LOOP1
CALCFR 4 NUMBER
 12 +10
 3 NUMBER
 5 DIGIT
 8 FRDTCC
CONTIN /2 CONST
 2 +0
SETNN
 5 NUMBER
FRDTCC 4 DIGIT
 7 OPSPCE
 2 +9
 9 ERROR
TESTDC 4 DC
 7 EXIT
 4 DIGMK
 7 OPSIGN
OPDGT 4 DIGIT
 1 +16
 11 QCHOP
 8 QCHOP+1
 10 DIGMK
RETURN 10 DC
 10 SCALE
 8 LOOP2
INT 5 NUMBER
 4 -6
 5 TYPMK
 8 IPLINK
NL 4 +1
QCH 11 QCHOP
 8 QCHOP+1
 0 QOUT1
 /4 1
 8 NLRET
CHKSGN 2 +0
 5 NUMBER
 4 +13
 8 PATCH2
OPDECPT 4 TYPMK
 9 ;+2
 8 ;+3
 4 DC
 7 EXIT
 4 DIGMK
 7 OPS
DPOPUT 4 +14
 11 QCHOP
 8 QCHOP+1
 10 DIGMK
 8 COMP
OPSPCE 4 DIGMK
 7 ;+2
 8 TESTDC
 4 DC
 1 +1
 7 OPSIGN
 4 +0
 11 QCHOP
 8 QCHOP+1
 8 RETURN

OPS 4 SIGN
 11 QCHOP
 8 QCHOP+1
 8 DPOPUT
OPSIGN 4 SIGN
 11 QCHOP
 8 QCHOP+1
 8 OPDGT
EXIT 4 TYPMK
 2 SCALE
 9 ERROR
OUT 0 QOUT1
 /8 2
ERROR 4 +10
 11 QCHOP
 8 QCHOP+1
 4 +0
 11 QERROR
 8 QERROR+1
 0 ERRDTA
 8 OUT
ERRDTA 0 QOUT1
 0 1
  \QO1
  -100000
  -10000
  -1000
  -100
  -10
  -1
CONST  -1
SIGN  +0
NUMBER  +0
SCALE  +0
DC  +0
DIGIT  +0
PLUS  +0 ( 0 FOR <SPACE>: INSERT  +11 FOR <PLUS> )
DIGMK  +0
TYPMK  +0

PATCH2
 5 SIGN
 4 NUMBER
 9 ;+2
 8 LOOP2
 4 +1
 5 DIGIT
 4 TYPMK
 7 FM1
 4 +31072
 8 SETNN

FM1
 4 -1
 1 SCALE
 5 SCALE
 4 +0
 8 SETNN

%
<! Halt !>







	
	
