COUNTDOWN NUMBERS GAME SOLVER;

"BEGIN" "INTEGER" A,B,C,D,SP;
"INTEGER" "ARRAY" STACK[0:32];
"INTEGER" "ARRAY" NUMBER[0:5];
"INTEGER" TARGET,LENGTH;

"INTEGER" "PROCEDURE" OP(O,A,B);
"VALUE" O,A,B;
"INTEGER" O,A,B;
"BEGIN" "SWITCH" OPS := ADD,SUB,BUS,MUL,DV,VD,DONE;
   "GOTO" OPS[O+1];
   ADD:  OP := A + B;
         "GOTO" DONE;
   SUB:  OP := A - B;
         "GOTO" DONE;
   BUS:  OP := B - A;
         "GOTO" DONE;
   MUL:  OP := A * B;
         "GOTO" DONE;
   DV:  OP := A "DIV" B;
         "GOTO" DONE;
   VD:  OP := B "DIV" A;
         "GOTO" DONE;
DONE:
"END";

"PROCEDURE" PUSH(A,O,B,R);
"VALUE" A,O,B,R;
"INTEGER" A,O,B,R;
"BEGIN" "INTEGER" N;
    "IF" O = 2 "OR" O = 5 "THEN"
    "BEGIN"
       STACK[SP] := B;    SP := SP + 1;
       STACK[SP] := O;    SP := SP + 1;
       STACK[SP] := A;    SP := SP + 1;
    "END"
    "ELSE"
    "BEGIN"
       STACK[SP] := A;    SP := SP + 1;
       STACK[SP] := O;    SP := SP + 1;
       STACK[SP] := B;    SP := SP + 1;
    "END";
    STACK[SP] := R;    SP := SP + 1;
"END";

"PROCEDURE" PRNT;
"BEGIN" "INTEGER" A,B,O,R,S;
"SWITCH" OPS := ADD,SUB,BUS,MUL,DV,VD,DONE;
    S := 0;
    "FOR" S := S + 1 "WHILE" (SP > 0) "DO"
    "BEGIN"
       SP := SP - 1;    R := STACK[SP];
       SP := SP - 1;    B := STACK[SP];
       SP := SP - 1;    O := STACK[SP];
       SP := SP - 1;    A := STACK[SP];
      "GOTO" OPS[O+1];
      ADD:  "PRINT" A,SAMELINE,' + `,B,' = `,R;
            "GOTO" DONE;
      SUB:
      BUS:  "PRINT" A,SAMELINE,' - `,B,' = `,R;
            "GOTO" DONE;
      MUL:  "PRINT" A,SAMELINE,' * `,B,' = `,R;
            "GOTO" DONE;
      DV:
      VD:   "PRINT" A,SAMELINE,' / `,B,' = `,R;
DONE:
    "END";
"END";

"INTEGER" "PROCEDURE" MOD(X, Y);
"VALUE" X, Y;
"INTEGER" X, Y;
   "IF" Y = 0
   "THEN" MOD := X
   "ELSE" MOD := X - (X "DIV" Y) * Y;

"INTEGER" "PROCEDURE" SOLVE2(LEVELS);
"VALUE" LEVELS;
"INTEGER" LEVELS;
"BEGIN"
   "INTEGER" I,J,K,O,NI,NJ,RESULT;
   "SWITCH" SS := CONT,EXIT;
   DIGITS(4);
   SOLVE2 := 0;
   "IF" LEVELS "NE" 0 "THEN"
   "BEGIN"
      "FOR" I := 0 "STEP" 1 "UNTIL" LENGTH-1 "DO"
      "BEGIN"
         NI := NUMBERS[I];
         "FOR" J := I + 1 "STEP" 1 "UNTIL" LENGTH-1 "DO"
         "BEGIN"
            NJ := NUMBER[J];
            LENGTH := LENGTH - 1;
            "FOR" K := J "STEP" 1 "UNTIL" LENGTH-1 "DO"
                NUMBER[K] := NUMBER[K+1];
            "FOR" O := 0 "STEP" 1 "UNTIL" 5 "DO"
            "BEGIN"
                "IF" (O = 4) "AND" (NJ = 0 "OR" MOD(NI,NJ) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 5) "AND" (NI = 0 "OR" MOD(NJ,NI) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 1) "AND" (NJ > NI) "THEN" "GOTO" CONT;
                "IF" (O = 2) "AND" (NI > NJ) "THEN" "GOTO" CONT;
                NUMBER[I] := RESULT := OP(O,NI,NJ);
                "IF" (RESULT = TARGET) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE2 := 1;
                    "GOTO" EXIT;
                "END";
CONT:
            "END";
            "FOR" K := LENGTH "STEP" -1 "UNTIL" J+1 "DO"
               NUMBER[K] := NUMBER[K-1];
            NUMBER[J] := NJ;
            LENGTH := LENGTH + 1;
         "END";
         NUMBER[I] := NI;
      "END";
   "END";
EXIT:
"END";

"INTEGER" "PROCEDURE" SOLVE3(LEVELS);
"VALUE" LEVELS;
"INTEGER" LEVELS;
"BEGIN"
   "INTEGER" I,J,K,O,NI,NJ,RESULT;
   "SWITCH" SS := CONT,EXIT;
   DIGITS(4);
   SOLVE3 := 0;
   "IF" LEVELS "NE" 0 "THEN"
   "BEGIN"
      "FOR" I := 0 "STEP" 1 "UNTIL" LENGTH-1 "DO"
      "BEGIN"
         NI := NUMBERS[I];
         "FOR" J := I + 1 "STEP" 1 "UNTIL" LENGTH-1 "DO"
         "BEGIN"
            NJ := NUMBER[J];
            LENGTH := LENGTH - 1;
            "FOR" K := J "STEP" 1 "UNTIL" LENGTH-1 "DO"
                NUMBER[K] := NUMBER[K+1];
            "FOR" O := 0 "STEP" 1 "UNTIL" 5 "DO"
            "BEGIN"
                "IF" (O = 4) "AND" (NJ = 0 "OR" MOD(NI,NJ) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 5) "AND" (NI = 0 "OR" MOD(NJ,NI) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 1) "AND" (NJ > NI) "THEN" "GOTO" CONT;
                "IF" (O = 2) "AND" (NI > NJ) "THEN" "GOTO" CONT;
                NUMBER[I] := RESULT := OP(O,NI,NJ);
                "IF" (RESULT = TARGET) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE3 := 1;
                    "GOTO" EXIT;
                "END";
                "IF" (SOLVE2(LEVELS-1) = 1) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE3 := 1;
                    "GOTO" EXIT;
                "END";
CONT:
            "END";
            "FOR" K := LENGTH "STEP" -1 "UNTIL" J+1 "DO"
               NUMBER[K] := NUMBER[K-1];
            NUMBER[J] := NJ;
            LENGTH := LENGTH + 1;
         "END";
         NUMBER[I] := NI;
      "END";
   "END";
EXIT:
"END";

"INTEGER" "PROCEDURE" SOLVE4(LEVELS);
"VALUE" LEVELS;
"INTEGER" LEVELS;
"BEGIN"
   "INTEGER" I,J,K,O,NI,NJ,RESULT;
   "SWITCH" SS := CONT,EXIT;
   DIGITS(4);
   SOLVE4 := 0;
   "IF" LEVELS "NE" 0 "THEN"
   "BEGIN"
      "FOR" I := 0 "STEP" 1 "UNTIL" LENGTH-1 "DO"
      "BEGIN"
         NI := NUMBERS[I];
         "FOR" J := I + 1 "STEP" 1 "UNTIL" LENGTH-1 "DO"
         "BEGIN"
            NJ := NUMBER[J];
            LENGTH := LENGTH - 1;
            "FOR" K := J "STEP" 1 "UNTIL" LENGTH-1 "DO"
                NUMBER[K] := NUMBER[K+1];
            "FOR" O := 0 "STEP" 1 "UNTIL" 5 "DO"
            "BEGIN"
                "IF" (O = 4) "AND" (NJ = 0 "OR" MOD(NI,NJ) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 5) "AND" (NI = 0 "OR" MOD(NJ,NI) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 1) "AND" (NJ > NI) "THEN" "GOTO" CONT;
                "IF" (O = 2) "AND" (NI > NJ) "THEN" "GOTO" CONT;
                NUMBER[I] := RESULT := OP(O,NI,NJ);
                "IF" (RESULT = TARGET) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE4 := 1;
                    "GOTO" EXIT;
                "END";
                "IF" (SOLVE3(LEVELS-1) = 1) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE4 := 1;
                    "GOTO" EXIT;
                "END";
CONT:
            "END";
            "FOR" K := LENGTH "STEP" -1 "UNTIL" J+1 "DO"
               NUMBER[K] := NUMBER[K-1];
            NUMBER[J] := NJ;
            LENGTH := LENGTH + 1;
         "END";
         NUMBER[I] := NI;
      "END";
   "END";
EXIT:
"END";

"INTEGER" "PROCEDURE" SOLVE5(LEVELS);
"VALUE" LEVELS;
"INTEGER" LEVELS;
"BEGIN"
   "INTEGER" I,J,K,O,NI,NJ,RESULT;
   "SWITCH" SS := CONT,EXIT;
   DIGITS(4);
   SOLVE5 := 0;
   "IF" LEVELS "NE" 0 "THEN"
   "BEGIN"
      "FOR" I := 0 "STEP" 1 "UNTIL" LENGTH-1 "DO"
      "BEGIN"
         NI := NUMBERS[I];
         "FOR" J := I + 1 "STEP" 1 "UNTIL" LENGTH-1 "DO"
         "BEGIN"
            NJ := NUMBER[J];
            LENGTH := LENGTH - 1;
            "FOR" K := J "STEP" 1 "UNTIL" LENGTH-1 "DO"
                NUMBER[K] := NUMBER[K+1];
            "FOR" O := 0 "STEP" 1 "UNTIL" 5 "DO"
            "BEGIN"
                "IF" (O = 4) "AND" (NJ = 0 "OR" MOD(NI,NJ) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 5) "AND" (NI = 0 "OR" MOD(NJ,NI) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 1) "AND" (NJ > NI) "THEN" "GOTO" CONT;
                "IF" (O = 2) "AND" (NI > NJ) "THEN" "GOTO" CONT;
                NUMBER[I] := RESULT := OP(O,NI,NJ);
                "IF" (RESULT = TARGET) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE5 := 1;
                    "GOTO" EXIT;
                "END";
                "IF" (SOLVE4(LEVELS-1) = 1) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE5 := 1;
                    "GOTO" EXIT;
                "END";
CONT:
            "END";
            "FOR" K := LENGTH "STEP" -1 "UNTIL" J+1 "DO"
               NUMBER[K] := NUMBER[K-1];
            NUMBER[J] := NJ;
            LENGTH := LENGTH + 1;
         "END";
         NUMBER[I] := NI;
      "END";
   "END";
EXIT:
"END";

"INTEGER" "PROCEDURE" SOLVE6(LEVELS);
"VALUE" LEVELS;
"INTEGER" LEVELS;
"BEGIN"
   "INTEGER" I,J,K,O,NI,NJ,RESULT;
   "SWITCH" SS := CONT,EXIT;
   DIGITS(4);
   SOLVE6 := 0;
   "IF" LEVELS "NE" 0 "THEN"
   "BEGIN"
      "FOR" I := 0 "STEP" 1 "UNTIL" LENGTH-1 "DO"
      "BEGIN"
         NI := NUMBERS[I];
         "FOR" J := I + 1 "STEP" 1 "UNTIL" LENGTH-1 "DO"
         "BEGIN"
            NJ := NUMBER[J];
            LENGTH := LENGTH - 1;
            "FOR" K := J "STEP" 1 "UNTIL" LENGTH-1 "DO"
                NUMBER[K] := NUMBER[K+1];
            "FOR" O := 0 "STEP" 1 "UNTIL" 5 "DO"
            "BEGIN"
                "IF" (O = 4) "AND" (NJ = 0 "OR" MOD(NI,NJ) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 5) "AND" (NI = 0 "OR" MOD(NJ,NI) "NE" 0) "THEN" "GOTO" CONT;
                "IF" (O = 1) "AND" (NJ > NI) "THEN" "GOTO" CONT;
                "IF" (O = 2) "AND" (NI > NJ) "THEN" "GOTO" CONT;
                NUMBER[I] := RESULT := OP(O,NI,NJ);
                "IF" (RESULT = TARGET) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE6 := 1;
                    "GOTO" EXIT;
                "END";
                "IF" (SOLVE5(LEVELS-1) = 1) "THEN"
                "BEGIN"
                    PUSH(NI,O,NJ,RESULT);
                    SOLVE6 := 1;
                    "GOTO" EXIT;
                "END";
CONT:
            "END";
            "FOR" K := LENGTH "STEP" -1 "UNTIL" J+1 "DO"
               NUMBER[K] := NUMBER[K-1];
            NUMBER[J] := NJ;
            LENGTH := LENGTH + 1;
         "END";
         NUMBER[I] := NI;
      "END";
   "END";
EXIT:
"END";

SP := 0;
LENGTH := 6;
"FOR" A := 0 "STEP" 1 "UNTIL" 32 "DO" STACK[A] := 0;
"READ" TARGET;
"FOR" A := 0 "STEP" 1 "UNTIL" 5 "DO" "READ" NUMBERS[A];
"FOR" A := 2 "STEP" 1 "UNTIL" 6 "DO"
"BEGIN"
    B := SOLVE6(A);
    "IF" B = 1 "THEN"
    "BEGIN"
      PRNT;
      STOP;
    "END";
"END";
"PRINT" ''L` NO SOLUTION`;
"END";
