
(EDIT 9C TAPE 2. C.H.M. 3/11/78.)

(S/R READ CONTROL BUFFER - READ ONE CHAR. FROM CONTROL BUFFER)
(RESULT IN ACCUMULATOR)
(12/7/75 C.H.M.)

[ RC C ]

RC +0            (LINK)
RC1 8 GO         (TRIGGER READ ONE CHAR. FROM BUFFER)
RC2 8 INIT       (TRIGGER SET POINTER TO START OF BUFFER)
RC3 STR 0 CS+1   (THIS NOT USED IN THIS VERSION)
RC4 FINR 0 CS+1  (WORD FROM WHICH NEXT CHAR WILL BE READ)
RC5 SHIFT -3     (CURRENT CHARACTER [-3,-2,-1])
RC6 +0
RC7 SAVE +0           (LAST CHAR READ)
RC8 CS 0 C

INIT 4 CS
 5 FINR
 4 -3
 5 SHIFT
 4 &33      ( <;> )
 5 SAVE
 8 EXIT

GO 4 SHIFT
 5 RC6
 0 FINR
/4 0
 5 SAVE
SHR 10 RC6
 4 RC6
 7 FOUND
 4 SAVE
 14 8186
 5 SAVE
 8 SHR
FOUND 4 SAVE
 6 &77
 5 SAVE
 1 -1  (NL)
 7 RST
 1 -2  (STOPCODE)
 7 RST
 10 SHIFT
 4 SHIFT
 7 RST
 8 EXIT
RST 4 -3
 5 SHIFT
 10 FINR
EXIT 4 SAVE
 0 RC
/8 1

[ SPEC SFG S SRC4 PRINT QSTOP RC DSFG SRC5 ]

SPEC +0
 4 SFG
 7 SOK
 11 PRINT
 8 PRINT+1
 +3
 \ILL
 \EGA
 \L S
 \PEC
 &030000
 8 QSTOP

SOK 4 DSFG
 7 SOK2
 11 PRINT
 8 PRINT+1
 +3
 \NO
 \SPE
 \C
 &030000
 8 QSTOP
SOK2 4 RC+4
 5 SRC4
 4 RC+5
 5 SRC5
 4 SS
 5 RC+8
 11 RC
 8 RC+2
 10 SFG
 0 SPEC
/8 1

SS 0 S
SFG +0
SRC4 +0
SRC5 +0


(S/R READ LINE 1 BUFFER - READS ONE INT. CODE CHAR. FROM LINE 1 BUFFER)
(RESULT IN ACCUMULATOR)
(12/7/75 C.H.M.)

[ RL1 L1S ]

RL1 +0            (LINK)
RL11 8 GO         (TRIGGER READ ONE CHAR. FROM BUFFER)
RL12 8 INIT       (TRIGGER SET POINTER TO START OF BUFFER)
RL13 STR 0 L1S    (THIS NOT USED IN THIS VERSION)
RL14 FINR 0 L1S   (WORD FROM WHICH NEXT CHAR WILL BE READ)
RL15 SHIFT -3     (CURRENT CHARACTER [-3,-2,-1])
C +0
SAVE +0

INIT 4 L1S
 5 FINR
 4 -3
 5 SHIFT
 4 +3
 5 SAVE
 8 EXIT

GO 4 SHIFT
 5 C
 0 FINR
/4 0
 5 SAVE
SHR 10 C
 4 C
 7 FOUND
 4 SAVE
 14 8186
 5 SAVE
 8 SHR
FOUND 4 SAVE
 6 &77
 5 SAVE
 1 -1  (NL)
 7 RST
 1 -2  (STOPCODE)
 7 RST
 10 SHIFT
 4 SHIFT
 7 RST
 8 EXIT
RST 4 -3
 5 SHIFT
 10 FINR
EXIT 4 SAVE
 0 RL1
/8 1



(S/R PRINT - PRINTS A MESSAGE OR AN AREA OF CORE)
(13/9/75 C.H.M.)

[PRINT QCHOP QDOUT MNCPL BFMAX ]

PRINT +0       (LINK)
PRINT1 8 MESS  (TRIGGER O/P MESSAGE FROM LOCATIONS AFTER ENTRY)
PRINT2 8 AREA  (TRIGGER O/P OF SPECIFIED STORE LOCATIONS)
PRINT3 STAD +0 (DUMP START ADDRESS)
PRINT4 FIND +8000 (LAST ADDRESS TO DUMP)
PRINT5 CURW +0 (CURRENT WORD)
PRINT6 FLAG +0 (0 FOR STOPCODE, 1 FOR FIND)
PRINT7 MODE +0 (IS SET 0 FOR MESSAGE, 1 FOR AREA)
PRINT8 NNL +0   (NO. OF LINES SO FAR)
PRINT9 MNCPL +72 (MAX. NO. OF CHARS. / LINE)
CUR +0

AREA 4 +3
 2 QDOUT
 7 ;+5
 4 +0
 15 6144
 15 6144
 15 6144   (PRINT BLANK TO GET PUNCH GOING)
 4 STAD
 5 CURW
 4 +0
 5 FLAG
 5 CHARC
 10 MODE
AR 0 CURW
/4 0
 5 STORE
 10 CURW
 2 &030000
 7 EXIT2
 4 CURW
 2 +8192
 9 FIRSTS
OKS 4 CURW
 2 BFMAX
 9 EXIT1
 4 CURW
 2 FIND
 9 END
 8 SET
MESS 4 QDOUT
 5 SAVE
 4 +0
 5 FLAG
 5 MODE
 5 CHARC
 0 PRINT
/4 1
 5 QDOUT
AM 10 PRINT
 0 PRINT
/4 1
 5 STORE
 2 &030000
 7 EXIT1
SET 4 -3
 5 CHECK
OP3 4 STORE
 14 8180
 6 &77
 5 CUR
 1 -1
 7 R
 4 CHARC
 2 MNCPL
 9 INSNL
R 4 CUR
 11 QCHOP
 8 QCHOP+1
 10 CHARC
 4 CUR
 1 -1
 7 RSNL
 10 CHECK
 4 CHECK
 7 AGAIN
 4 STORE
 14 6
 5 STORE
 8 OP3
AGAIN 4 MODE
 7 AM
 8 AR
FIRSTS 4 CURW
 2 +8139
 9 ;+2
 8 OKS
 4 +8192
 5 CURW
 8 OKS
END 4 +1
 5 FLAG
 4 +0
 8 EXIT
EXIT1 4 SAVE
 5 QDOUT






 10 PRINT
 EXIT2 4 +3
EXIT 0 PRINT
/8 1

INSNL 4 QDOUT
 2 +3
 7 ;+2
 8 R
 10 NNL
 4 +1
 11 QCHOP
 8 QCHOP+1
 4 &43
 4 +195    (O/P NL, C, 4 SPACES)
 15 6148
 4 +160
 15 6148
 15 6148
 15 6148
 15 6148
 4 +5
 5 CHARC
 8 R
RSNL 4 +0
 5 CHARC
 10 NNL
 8 AGAIN

CHARC +0
CHECK +0
SAVE +0
STORE +0

CSP +0


(SSYS MODIFIED BY ALDENHAM. OPTION DEVICE 2 IS FLEXO)
(4/7/75)


[ QCHOP QCHIN QDOUT QDIN  QSTOP  PRINT ENPAR DISAVE
   QERROR QPAUSE CONTROL TRAIL TABNO  STOPC DEFCHA ]
QDIN +1
QDOUT +1
PW +0
PW1 +0
CH +0

PARITY
 +0
 0 +0
 3 PW
P1
 7 P2
 10 PW
 5 PW1
 1 -1
 6 PW1
 8 P1
P2
 4 PW
 0 PARITY ( PARITY BIT IS L.S. ACC)
/8 1


QCHOP
 +0
 8 ;+1
 6 =/0 255
 9 SPEC  ( OUTPUT BINARY PATTERN )
 5 CH
 2 +3
 7 TERM
 2 +3
RTN 4 QDOUT
 9 DEFAULT
 2 +2
 7 FLOUT
 4 CH
 1 -1
 7 NL ( TEST FOR NEWLINE )
 1 +33
 5 CH
 11 PARITY
 8 PARITY+1
 14 7
 6 +128
 1 CH ( ADD CORRECT PARITY BIT )
SPEC
 5 CH
 4 QDOUT
 1 -3
 7 PTP ( JUMP IF TELEPRINTER REQUIRED )
 4 CH
 15 6144 ( OUTPUT TO PUNCH)
EXIT
 0 QCHOP
 6 &377400
/7 1
 14 8184
 1 -1 ( FORM NEXT CHARACTER IN NEWLINE SEQUENCE)
 8 SPEC
PTP
 4 CH
 15 6148 (TELEPRINTER)

 8 EXIT
NL
 4 &205615 ( SEQUENCE FOR NEWLINE )

 8 SPEC
DEFAULT 4 +1
 5 QDOUT
 8 RTN

BX +0

FLOUT 4 CH
 2 +1
 7 FNL
 4 CH
 1 -16
 9 PUNCT
 1 -10
 9 OUT   (NUMBERS)
 1 -7
 9 PUNCT
 1 -26
 9 OUT   (ALPHABET)
PUNCT 4 +0
 5 BX
 0 BX
 /4 CODE
 14 8183
 6 &377
 1 -32
 2 CH
 7 GOUT
 10 BX
 4 BX
 2 CODENO
 7 QSTOP
 8 PUNCT+2
GOUT /4 CODE
 6 &200
 7 ;+2
8 VBOUT
 /4 CODE
 5 CH
OUT 4 CH
 6 &177
 11 PARITY
 8 PARITY+1
 14 4
 6 &20
 5 REM
 4 CH
 14 1
 6 &340
 1 REM
 5 REM
 4 CH
 6 +15
 1 REM
 15 6144
 0 QCHOP
 /8 1

FNL 4 +18
 15 6144
 4 +0
 
 15 6144
 15 6144
 0 QCHOP
 /8 1

VBOUT 4 +126
 15 6144
 /4 CODE
 6 &377
 5 CH
 8 OUT

CONTROL +0   (THIS IS 1 FOR STOPCODE=+3, 0 FOR STOPCODE = DYNAMIC HALT)

TERM 4 CONTROL
 7 RTN
 11 TRAIL
 8 TRAIL+1
 0 QCHOP
/8 1


(THIS IS MODIFIED QCHIN TO INCLUDE OPTION 2 FLEXO CODE)


CHAR +0
CHARCOUNT +0 (NO. OF CHARS. SINCE LAST NL)
QCHIN +0 ( INPUT INTERNAL CODE CHAR )
 4 TABF
 9 TABS
 4 QDIN
 9 DEFIN
 1 -3
 7 TPIN ( JUMP IF TELEPRINTER INPUT)
 4 +0
 15 2048
GOT
 5 CHAR
 4 ENPAR
 7 EVPAR
 4 CHAR
 11 PARITY
 8 PARITY+1
 6 +1
 7 EVPAR ( CORRECT PARITY )

INERR
 4 +1
 5 QERROR+2
 4 CHAR
 11 QERROR
 8 QERROR+1
 0 DATA
 15 2052
 1 -129  (CONTROL A)
 7 ;+2
 8 BACKA
 4 +222  (^)
 15 6148
 4 +65  (A)
 15 6148
 8 QSTOP
BACKA 1 +34   (BACKARROW)
 7 QCHIN+1
 1 +95   (REPLACE WITH TYPED CHARACTER)
 5 CHAR
 8 ISO
TPIN
 15 2052 ( TELEPRINTER INPUT)
 8 GOT
EVPAR 4 QDIN
 2 +2
 7 FLEXO
 8 ISO
FLEXO 4 CHAR
 14 8191
 6 &160
 5 REM
 4 CHAR
 6 +15
 1 REM
 5 CHAR
 2 +62
 7 VERTB
 4 CHAR
 1 -16
 9 SET
 1 -11    (27)
 9 ADD32
 1 -6 (33)
 9 SET
 1 -26 (59)
 9 ADD32
 1 -38 (97)
 9 SET
 1 -26 (123)
 9 ISO
SET 4 +0
 5 BX
 0 BX
 /4 CODE
 6 &377
 2 CHAR
 7 GO
 10 BX
 4 BX
 2 CODENO
 7 INERR
 8 SET+2
GO /4 CODE
 14 8183
 6 &177
 8 ;+3
ADD32 4 CHAR
 1 +32
 5 CHAR
 8 ISO

VERTB 4 +0
 15 2048
 7 VERTB
 2 +255
 7 VERTB
 2 +255
 5 CHAR
 14 8191
 6 &160
 1 &200
 5 REM
 4 CHAR
6 +15
 1 REM
 5 CHAR
 8 SET

CODE &000000 (BL)
 &015002 (NL OR CR)
 &040100 ( )
 &050010 ()
 &051011 ()
 &054012 (,)
 &134013 (\)
 &072014 (:)
 &046015 (&)
 &052016 (*)
 &057017 (/)
 &075034 (=)
 &053035 (+)
 &055036 (-)
 &056037 (.)
 &073040 (;)
 &011004 (TAB)
 &024114 (HALT)
 &133130 ([)
 &135131 (])
 &077140 (? OR QUERY)
 &074133 (<)
 &076134 (>)
 &136135 (^)
 &042136 (")
DEFCHA &045137 (PERCENT)
 &077132 (?)
 &137033 (BACKARROW OR ELEVEN)
 &377177 (ERASE)
 &447333 (OPEN QUOTE)
 &500334 (CLOSE QUOTE)
 &444263 (DOLLAR)

(L. IS ISO, R. IS FLEXO)
(EXCLUDING PARITY, FLEXO SHIFTED)

CODENO +32

REM +0
ENPAR +1

DEFIN 4 +0
 15 2048
 7 ;-1
 5 CHAR
 2 +141
 7 ISET
 4 CHAR
 2 +10
 7 ISET
 4 CHAR
 2 +18
 7 FSET
 11 PRINT
 8 PRINT+1
 +3
\1ST
\ CH
\AR 
\NOT
\ CR
\,LF
\,NL
\. T
\YPE
\ SI
\D1/
\2 &
\REL
\OAD
&010000
&030000
 8 QSTOP
ISET 4 +1
 5 QDIN
 5 DISAVE
DSX 4 CHAR
 8 GOT
FSET 4 +2
 5 QDIN
 5 DISAVE
 8 DSX



ISO 4 CHAR
 6 +127
 5 CHAR
 1 -33
 7 ODD   (EXCL. MK.)
 1 -2
 7 ODD   (HALF)
 8 CONTIN
ODD 4 &77  (REPLACE BY ?)
 5 CHAR
CONTIN 4 CHAR
 1 -32
 9 LESS
 1 -64
 9 KCODE
 1 -27
 9 LOWCAS ( LOWER CASE CHARS )
 1 -4
 7 QCHIN+1 ( ERASE )
 8 INERR
LOWCAS 1 +58
NWLF 1 -63 ( ADD 1  )
KCODE 1 +64 (ADD 64 )
 5 TEMP
 4 CHAR
 5 LASTCHAR
 4 TEMP
EXIT2 10 CHARCOUNT
 0 QCHIN
/8 1

LESS
 1 +22
 7 LFEED
 1 +1
 7 TAB
 1 +1
 7 CONH
 1 -5
 7 CRO   (ACCEPT CARRIAGE RETURN)
 1 +12
 7 CONA  (CONTROL A CAUSES IMMEDIATE EXIT)
 4 CHAR
 7 QCHIN+1 ( BLANK )
 2 STOPC
 7 HALT1
 8 INERR

CONA 4 +222  (^)
 15 6148
 4 +65   (A)
 15 6148
 8 QSTOP

CONH 4 &137 (BACKARROW)
 8 ODD+1
LFEED 4 LASTCHAR
 2 +13  (CR)
 7 QCHIN+1  (IGNORE LF AFTER CR)
 8 LFR

TEMP +0
LASTCHAR +0

CRO 4 QDIN
 1 -3
 7 ;+2
 8 ;+3
 4 +10  (LF)
 15 6148
LFR 4 -1
 5 CHARCOUNT
 4 +0
 8 NWLF


TAB 4 TABNO
 7 SKIPTAB
 4 CHARCO
 5 TABCO
TABRET 4 TABNO
 2 TABCO
 9 TABDONE
 5 TABCO
 8 TABRET
TABDONE 5 TABF
 8 QCHIN+1
SKIPTAB 4 +0
 5 TABF
 8 QCHIN+1
TABCO +0
TABNO +8  (GLOBAL)


TABS 4 QDIN
 2 +3
 7 ;+2
 8 GOTAB
 4 +160
 15 6148
GOTAB 10 TABF
 4 +0
 8 EXIT2

TABF +0

HALT1 4 CONTROL
 7 HALT
 4 +3
 8 EXIT2

HALT
 11 QPAUSE
 8 QPAUSE+1
 8 QCHIN+1

DATA 
 0 QCHIN
 0 1
 \CHN


[ QPAUSE QSTOP  ]

QPAUSE +0
 4 RECOVER
 5 9
 8 QSTOP
CONT 0 QPAUSE
/8 1
RECOVER 8 CONT
QSTOP 8 QSTOP




[QERROR QCHOP QDOUT QPAUSE ]
W +0
W1 +0
PA +0
SAFE +0

QERROR
 +0
 8 ;+2
 +0    (SET +0 FOR PAUSE, + 1 TO CONTINUE )
 5 W
 4 QDOUT
 5 SAFE
 4 +3 (SET TELEPRINTER OUTPUT )
 5 QDOUT
 4 +1
 11 QCHOP ( OUTPUT NEWLINE )
 8 QCHOP+1
 4 +10
 11 QCHOP ( OUTPUT * )

 8 QCHOP+1
 0 QERROR
/0 1
/4 2
PNAM
 5 W1
 14 8180
 6 +63 (OUTPUT 3 INTERNAL CODE CHARS)

 11 QCHOP
 8 QCHOP+1

 4 W1
 0 +0
 14 6
 7 ;+2
8 PNAM
 11 QCHOP ( SPACE )
 8 QCHOP+1
 4  -5
 5 W1
OCTAL
 4 W
 14 3
 5 W
 14 8177
 6 +7
 1 +16
 11 QCHOP
 8 QCHOP+1
 10 W1
 4 W1
 9 OCTAL
 11 QCHOP ( SPACE )
 8 QCHOP+1

ADDRES
 4 -6
 5 W1
 0 QERROR
/0 1
/0 0
/4 0
 6 =3 8191
 5 W
LOOP
 4 +16
 5 PA  ( SET ZERO CHARACTER)
 0 W1
 /4 T+6 (DIVIDE BY REPEATED SUBTRACTION)
 2 W
 9 RR
 10 PA
 5 W
 8 ;-5

T
+100000
+10000
+1000
+100
+10
+1
RR
 4 PA
 11 QCHOP
 8 QCHOP+1
 10 W1
 4 W1
 9 LOOP
 4 +1
 11 QCHOP   (O/P NL)
 8 QCHOP+1
 4 SAFE
 5 QDOUT
 4 QERROR+2
 7 ;+2
 8 ERREX
 11 QPAUSE
 8 QPAUSE+1
ERREX 0 QERROR
/8 2


[ TRAIL QDOUT PRO STOPC ]

TRAIL +0
 4 QDOUT
 1 -3
 7 TTY
 11 PRO
 8 PRO+1
 0 QDOUT
/4 STOPCO
 15 6144
 11 PRO
 8 PRO+1
 0 TRAIL
/8 1
TTY 4 +0
 15 6148
 15 6148
 4 +20
 15 6148
 8 ;-7
STOPCO +20
STOPC +20
 +156
 +20




(MINI-VERSION OF QOUT1 - O/P DECIMAL NO. 0<X<10000)

[ QOUT1 QCHOP ]

QOUT1 +0
 5 SAFE
 2 +9999
 9 ALARM
 4 +0
 5 CHAR
 4 -4
 5 CHECK
GO 4 +0
 5 N
AGAIN 4 SAFE
 0 CHECK
/1 MULT
 9 PUNCH
 5 SAFE
 10 N
 8 AGAIN
PUNCH 4 N
 7 ZERO
 4 +16
 5 CHAR
 1 N
CHOP 11 QCHOP
 8 QCHOP+1
 10 CHECK
 4 CHECK
 9 GO
END 0 QOUT1
/8 2  (IGNORE PARAMETER WORD)
ZERO 4 CHAR
 8 CHOP
ALARM 4 +170
 15 6148
 15 6148
 15 6148
 15 6148
 8 END

 -1000
 -100
 -10
 -1
MULT SAFE +0
N +0
CHAR +0
CHECK +0


(S/R WRITEBUFFER - WRITES ONE INTERNAL CODE CHAR TO L2 )
(CHAR IN ACC. BEFORE & AFTER)
(21/7/75, C.H.M.)

[ WL2 L2S ]

WL2 +0            (LINK)
WL21 8 GO         (TRIGGER WRITE ONE CHAR)
WL22 8 INIT       (TRIGGER INITIALISE ROUTINE)
WL23 STW +0       (START ADDRESS NOT USED IN THIS VERSION)
WL24 FINW +0      (WORD IN WHICH NEXT CHAR. WILL BE WRITTEN)
WL25 SHIFT -3     (CURRENT CHAR [-3,-2,-1])
SAVE +0

INIT 4 L2S
 5 STW
 5 FINW
 4 -3
 5 SHIFT
 8 EXIT

GO 6 &77
 5 SAVE
 0 FINW
/4 0
 14 6
 6 &777700
 1 SAVE
/5 0
 4 SAVE
 1 -1
 7 NL
 1 -2
 7 NL   (LEFT-JUSTIFY IF NL OR SC)
 10 SHIFT
 4 SHIFT
 7 INCR
EXIT 4 SAVE
 0 WL2
/8 1

INCR 10 FINW
 0 FINW
 4 +0
/5 0
 4 -3
 5 SHIFT
 8 EXIT

SHR 0 FINW
/4 0
 14 6
 6 &777700
/5 0
NL 10 SHIFT
 4 SHIFT
 7 INCR
 8 SHR



[ AS AC AF A C 
  BS BC BF BFMAX
  CS CC CF
L1S L1C L1F L1
L2S L2C L2F L2

]

AS 0 A
AC 0 A
AF 0 A+2000
BS 0 A+2001
BC 0 A+2001
BF 0 A+2001
BFMAX 0 8090   (AT LEAST 1 LINE FROM T.23)
L1S 0 L1
L1C 0 L1
L1F 0 L1+40
L2S 0 L2
L2C 0 L2
L2F 0 L2+40
CS 0 C
CC 0 C 
CF 0 C+40

%

[ C S L1 L2 A ]

C +0
>+40
S +0
>+40
L1 +0
>+40
L2 +0
>+40
A +0

%


<! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !><! Halt !>