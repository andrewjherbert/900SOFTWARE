
*23

(ALDRLB B5)
(ASSEMBLE WITH 1-PASS SIR)
(THIS PROGRAM IS FOR CONVERSION OF TAPES IN 903 T23 FORMAT INTO
 ALDENHAM RLB FORMAT. IT PRECEDES THE TAPE WITH A PROGRAM TO LO-
 CATE AN AREA OF STORE WHICH IS CLEAR & WHICH IS SUFFICIENTLY
 LONG TO ACCOMODATE THE PROGRAM. ENTRY AT 32 THEN CAUSES A SHORT
 LOADER TO BE PUNCHED WHICH IS EQUIVALENT TO T23. IT DOES THE RE-
 LOCATION AND PERFORMS A SUM-CHECK AND THEN STOPS. ENTRY AT 33
 CAUSES THE LOADER TO BE MODIFIED TO BE SELF-TRIGGERING. ALDENHAM
 RLB FORMAT IS SUCH THAT ANY PROGRAM CAN BE RUN OR RE-RUN BY EN-
 TRY AT 7. THIS WILL ALWAYS CONTAIN A JUMP TO THE FIRST WORD OF
 THE PROGRAM, WHEREVER THAT IS.)

(Corrected by A.J. Herbert 20/04/2015) 

[ ALDRLB PRINT QOUT1 QIN1 ]

 8 DYNSTOP
 4 =8 7
 5 LOADER+2
 8 ALDRLB
DYNSTOP 4 =8 8137
 5 LOADER+2
ALDRLB 11 PRINT
 8 PRINT+1
 +3
&010000
 \HOW
 \ MA
 \NY
 \WOR
 \DS
 \LON
 \G I
 \S T
 \HE
 \PRO
 \GRA
 \M?
&030000
 11 QIN1
 8 QIN1+1
 5 LENGTH
 11 PRINT
 8 PRINT+1
 +3
 &010000
 \WHA
 \T R
 \ANG
 \E O
 \F A
 \DDR
 \ESS
 \ES
 \SHO
 \ULD
 \ BE
 \ CO
 \NSI
 \DER
 \ED
 \AS
 \REL
 \ATI
 \VE?
&030000
 11 QIN1
 8 QIN1+1
 5 MIN
 11 PRINT
 8 PRINT+1
 +3
 \TO
&030000
 11 QIN1
 8 QIN1+1
 5 MAX
 11 PRINT
 8 PRINT+1
 +3
&010000
 \WHA
 \T R
 \ANG
 \E S
 \HOU
 \LD
 \BE
 \QUE
 \RIE
 \D?
&030000
 11 QIN1
 8 QIN1+1
 7 ;+2
 8 ;+2
 4 +8192
 5 QMIN
 11 PRINT
 8 PRINT+1
 +3
 \TO
&030000
 11 QIN1
 8 QIN1+1
 5 QMAX
 4 =/15 8168   (DUMP LOCATER)
 11 DUMP
 8 DUMP+1
 0 LOCATE
 4 =/15 8147   (DUMP LOADER)
 11 DUMP
 8 DUMP+1
 0 LOADER
  4 +0
 5 CS
 5 CSX
 15 2048        (IGNORE BLANKS BETWEEN T.23 + BODY OF PROG.)
 7 ;-1
 2 +128
 7 ;+2
 NOTT23 8 ;+0   (NOT T23 FORMAT)
 2 +128
 15 2048
 15 2048
 5 DECREMENT
 5 ADS
Z 4 +0
 15 2048
 5 WORD
 6 &777740
 7 ;+2
 8 END    (NEW BLK ADDR OR CS)
 4 WORD
 15 2048
 15 2048
 5 WORD
 10 ADS
 6 +8191
 5 ZW
 2 QMIN
 9 ;+3 (QMIN-ZW<0 - ZW>QMIN)
 7 ;+2 (ZW=QMIN)
 8 OK (ZW<QMIN)
 4 QMAX
 2 ZW
 9 QUERY (ZW-QMAX<0 - ZW<QMAX)
 7 QUERY (ZW=QMAX)
OK 4 ZW
 2 MIN
 9 ;+3 (MIN-ZW<0 - ZW>MIN)
 7 ;+2 (ZW=MIN)
 8 ABS
 2 MIN (-MIN+ZW+MIN - ZW)
 2 MAX
 9 ABS (MAX-ZW<0 - MAX<ZW)
 8 REL
QUERY 4 WORD
 11 QOUT1
 8 QOUT1+4
/0 0
QR 4 +160
 15 6148
 15 6148
 4 +0
 15 2052
 5 CHAR
 2 +210   (R)
 7 REL
 4 CHAR
 2 +65
 7 ABS
 4 CHAR
 2 +166   (&)
 7 OCTAL
 4 CHAR
 2 +92   (\)
 7 ABC
 4 CHAR
 2 +43   (+)
 7 INTEGER
 8 QR+3
REL 4 +64
 5 BIT8
 4 DECREMENT
 1 CS
 5 CS
 4 DECREMENT
 2 WORD
 5 WORD
ABS 4 WORD
 11 PUNCH
 8 PUNCH+1
 4 WORD
 1 CS
 5 CS
 4 WORD
 1 CSX
 5 CSX
 8 Z
OCTAL 4 WORD
 11 QOUT1
 8 QOUT1+3
/0 0
 8 QR
ABC 4 WORD
 5 QPR
 11 PRINT
 8 PRINT+1
 +3
QPR +0
 &030000
 8 QR
INTEGER 4 WORD
 11 QOUT1
 8 QOUT1+1
/0 0
 8 QR
END 4 WORD
 15 2048
 15 2048
 5 WORD
 7 LAST
 2 ADS
 5 SKIPS
 9 ;+2
 8 ;+0    (BLOCKS NOT IN ORDER)
ANOSK 4 +0
 11 PUNCH
 8 PUNCH+1
 10 SKIPS
 10 ADS
 4 SKIPS
 7 Z
 8 ANOSK
LAST 15 2048
 15 2048
 15 2048
 2 CS
 7 PCS
CSF 15 6144
 8 ;-1
PCS 4 +64
 5 BIT8
 4 +0
 11 PUNCH
 8 PUNCH+1
 4 CSX
 11 PUNCH
 8 PUNCH+1
 4 LENGTH
 5 CLENGTH
 4 =/15 8174
 11 DUMP
 8 DUMP+1
 0 CLLF
 4 +0
 15 6144
 1 +1024
 9 ;+0
 8 ;-3

DECREMENT +0
MIN +0
MAX +0
QMIN +0
QMAX +0
ZW +0
CS +0
CSX +0
CHAR +0
ADS +0
SKIPS +0
WORD +0

CLLF 
 4 7    (8162 CORE CLEAR FINALLY)
 6 8176 (8163 6 +8191)
 1 8167 (8164 1 WRITE)
 5 8167 (8165 5 WRITE)
 4 8179 (8166 4 +0)
 5 0    (8167 WRITE 5 0)
10 8167 (8168 10 WRITE)
10 8174 (8169 10 COUNT)
 4 8174 (8170 4 COUNT)
 2 8175 (8171 2 LENGTH)
 7 8172 (8172 7 ;+0)
 8 8166 (8173 8 WRITE-1)
 +0     (8174 COUNT +0)
CLENGTH +0 (8175 CLEAR LENGTH)
 +8191  (8176)
 8 7    (8177 8 START)
 +0     (8178 NOT USED)
 +0     (8179 +0)

LENGTH
LOCATE +0
 4 8      (LIVE-START)
 7 8166   (7 INC)
14   36   (+0)
 5 8179   (5 X)
 10 8157  (Z 10 START)
 4 8157	  (4 LOCATE)
 2 8171	  (2 =4 LOCATE)
 7 8164   (7 ;+0)
 8 8157   (8 START)
 10 8179  (INC 10 X)
 4 8179   (4 X)
 2 8156   (2 LENGTH)
 7 8171   (7 ;+2)
 8 8161   (8 Z)
 4 8156   (4 LENGTH)
 2 8157   (2 START)
 6 8178   (6 +8191)
 5 7
 10 7
 8 8181
 8 8157   (8 START)
 +8191
 +0     (X +0)


DUMP +0
 5 THIRD
 4 +0
 15 6144
 15 6144
 4 +12
 15 6144
 4 +8179
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 =8 8182
 11 PUNCH
 8 PUNCH+1
 4 +12
 15 6144
 4 THIRD
 11 PUNCH
 8 PUNCH+1
 0 DUMP
 /4 1
 5 ADD
RW 4 +12
 15 6144
 0 ADD
 /4 0
 11 PUNCH
 8 PUNCH+1
 10 ADD
 10 THIRD
 4 THIRD
 0 DUMP
 /7 2
 8 RW

THIRD +0
ADD +0

PUNCH +0
 14 8174
 4 +0
 14 4
 1 BIT8
 15 6144
 4 +0
 5 BIT8
 14 7
 15 6144
 4 +0
 14 7
 15 6144
 0 PUNCH
 /8 1

BIT8 +0

 /15 8187
CC1 8 8177
 8 8181
 10 1
 /5 1
 8 8175

 /15 8180
CC2 0 8178
 10 8171
 4 8179
 /5 0
 4 8171
 6 8178
 2 8178
 7 8181
 8 8169
 8 8168
+8191
+0

LOADER
 4 8139   (8135 LOADER 4 ADDR)
 5 7      (8136 5 7)
 8 8137   (8137 8 ;+0 - MAY BE MOD TO 8 7)
 +0       (8138 +0)
 8 0      (8139 ADDR 8 0)
 4 7      (8140 START 4 7)
 1 8139   (8141 1 ADDR)
 5 8139   (8142 5 ADDR)
 4 8138   (8143 4 +0)
 15 2048  (8144)
 7 8144   (8145 7 ;-1)
 5 8176   (8146 READ 5 CHAR)
 6 8179   (8147 6 +64)
 7 8164   (8148 7 ABS)
 4 8176   (8149 4 CHAR)
 15 2048  (8150 15 2048)
 15 2048  (8151 15 2048)
 7 8169   (8152 7 CS1)
 5 8176   (8153 5 CHAR)
 1 7      (8154 1 7)
 0 7      (815 0 7)
/5 0      (8156 WRITE /5 0)
 10 8156  (8157 10 WRITE)
 4 8176   (8158 4 CHAR)
 1 8178   (8159 1 CS)
 5 8178   (8160 5 CS)
 4 8138   (8161 4 +0)
 15 2048  (8162 15 2048)
 8 8146   (8163 8 READ)
 4 8176   (8164 4 CHAR)
 15 2048  (8165 15 2048)
 15 2048  (8166 15 2048)
 5 8176   (8167 5 CHAR)
 8 8155   (8168 8 WRITE-1)
 15 2048  (8169 CS1 15 2048)
 15 2048  (8170 15 2048)
 15 2048  (8171 15 2048)
 2 8178   (8172 2 CS)
 7 8135   (8173 7 LOADER)
 15 6144  (8174 15 6144)
 8 8174   (8175 8 ;-1)
 +0       (8176 CHAR +0)
 8 8140   (8177 8 START)
 +0       (8178 CS +0)
 +64      (8179 +64)

<! halt !>